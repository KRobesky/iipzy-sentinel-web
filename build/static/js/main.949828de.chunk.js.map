{"version":3,"sources":["../../iipzy-shared/src/defs.js","../../iipzy-shared/src/utils/utils.js","utils/sentinelInfo.js","../../iipzy-shared/src/utils/globals_impl.js","../../iipzy-shared/src/utils/logFile.js","../../iipzy-shared/src/utils/logFile_impl.js","../../iipzy-shared/src/utils/fileIO.js","ipc/eventManager.js","components/navBar.jsx","utils/log.js","utils/cookie.js","components/closeWindow.jsx","ipc/httpService.js","services/devices.js","components/closeButton.jsx","components/navigator.jsx","components/infoPopup.jsx","components/devicePopup.jsx","components/devicesWindow.jsx","services/settings.js","services/auth.js","components/input.jsx","components/loginWindow.jsx","ipc/toSentinel.js","components/spinnerPopup.jsx","components/pingPlotWindow.jsx","components/sentinelInUseWindow.jsx","components/sentinelOnlineCheckWindow.jsx","components/passwordPopup.jsx","components/settingsWindow.jsx","components/gauge.jsx","components/throughputTestWindow.jsx","App.js","serviceWorker.js","utils/localIPAddress.js","ipc/fromSentinel.js","services/credentials.js","index.js","../../iipzy-shared/src/utils/globals.js","utils/cipher.js"],"names":["module","exports","reqAreYouServerUuid","rspAreYouServerUuid","reqDiscoveryUuid","rspDiscoveryUuid","port_server","port_sentinel_admin","port_sentinel_core","port_sentinel_updater","port_sentinel_web","port_sentinel_web_client_proxy","port_sentinel_web_server_proxy","port_traffic_control","server_cert","server_key","pingTarget","urlAbout","urlAddUser","urlAdministration","urlBlank","urlClients","urlClientUpdate","urlCloseSentinel","urlDebug","urlDevices","urlDownload","urlEditUser","urlForgotPassword","urlHome","urlIipzy","urlLogin","urlLogLevel","urlLogSend","urlNavigator","urlPingPlot","urlScheduler","urlSentinelAdmin","urlSentinelDiscovery","urlSentinelInUse","urlSentinelOnlineCheck","urlSentinels","urlSettings","urlStartup","urlThroughputTest","urlUpdater","ipcAAATest","ipcAuthCredentialsUpdate","ipcBloatLatencyStatusIperf3Down","ipcBloatLatencyStatusIperf3DownFinal","ipcBloatLatencyStatusIperf3Up","ipcBloatLatencyStatusIperf3UpFinal","ipcClearDials","ipcClientLoginNeeded","ipcClientName","ipcClientShutdown","ipcConnectionToken","ipcConsoleLog","ipcConsoleLogVerbose","ipcDevicesReady","ipcDeviceUpdated","ipcDumpSentinelDeviceTable","ipcExit","ipcExiting","ipcIperf3StatusDown","ipcIperf3StatusUp","ipcIsLocalClient","ipcLinkTo","ipcLoginStatus","ipcLoginVerifyStatus","ipcNavBarInfo","ipcNominalLatencyStatus","ipcNominalLatencyStatusFinal","ipcNoop","ipcPingPlotConvertDB","ipcPingPlotData","ipcPingPlotWindowButtonHome","ipcPingPlotWindowButtonLeft","ipcPingPlotWindowButtonLeftMarked","ipcPingPlotWindowButtonRight","ipcPingPlotWindowButtonRightMarked","ipcPingPlotWindowButtonZoomChange","ipcPingPlotWindowMount","ipcPingPlotWindowButtonHomeEx","ipcPingPlotWindowButtonLeftEx","ipcPingPlotWindowButtonLeftMarkedEx","ipcPingPlotWindowButtonRightEx","ipcPingPlotWindowButtonRightMarkedEx","ipcPingPlotWindowButtonZoomChangeEx","ipcPingPlotWindowMountEx","ipcQuit","ipcRendererReady","ipcSentinelDiscoveryTryingSentinelIPAddress","ipcSentinelDiscovery","ipcSentinelSendState","ipcSentinelOnlineCheck","ipcSentinelOnlineStatus","ipcServerAddress","ipcShowNavBar","ipcTestingState","ipcTickStatusIperf3Down","ipcThroughputTestFailedToGetServer","ipcThrouputTestStatus","ipcThroughputTestWindowButtonLeft","ipcThroughputTestWindowButtonNewest","ipcThroughputTestWindowButtonOldest","ipcThroughputTestWindowButtonRight","ipcThroughputTestWindowMount","ipcThroughputTestWindowCancel","ipcThroughputTestWindowStart","ipcThroughputTestWindowStartStop","ipcTickStatusIperf3Up","ipcTickStatusNominalLatency","ipcTimeOfTest","ipcUserAddVerified","ipcZZZNext","configFilename","crashFilename","loginStatusLoggedOut","loginStatusLoggedIn","loginStatusLoginFailed","loginStatusVerified","loginStatusVerifyFailed","loginStatusNoServerAddress","sentinelStatusOnline","sentinelStatusOffline","sentinelStatusInUse","sentinelStatusNoAddress","sentinelStatusUnknown","sentinelStatusOnlineLoggedOut","pevLoginStatus","pevLoginNeeded","pevZZZNext","httpCustomHeader_XAuthToken","httpCustomHeader_XClientToken","httpCustomHeader_XConnToken","httpCustomHeader_XTimestamp","httpCustomHeader_XWebClient","httpStatusOk","httpStatusCreated","httpStatusAccepted","httpStatusNoContent","httpStatusMultiStatus","httpStatusFound","httpStatusBadRequest","httpStatusUnauthorized","httpStatusForbidden","httpStatusNotFound","httpStatusConflict","httpStatusGone","httpStatusUnprocessableEntity","httpStatusInternalError","httpStatusNotImplemented","httpStatusConnRefused","httpStatusConnAborted","httpStatusConnReset","httpStatusSentinelInUse","httpStatusException","statusOk","statusAlreadyExists","statusDoesNotExist","statusInvalidVerificationCode","statusGeneralSqlFailure","statusException","statusInvalidUserName","statusInvalidPasswordResetCode","statusCannotAllocateIperf3Server","statusDailyIperf3LimitReached","statusInvalidUpdateType","statusUpdateInProgress","statusRouteError","statusMissingClientToken","statusInvalidClientToken","statusMissingAuthToken","statusInvalidAuthToken","statusMissingParam","statusInvalidParam","statusInvalidCredentials","statusMissingConnectionToken","statusInvalidConnectionToken","statusAdminPriviledgeRequired","statusInvalidClientType","statusIperf3ServerBusy","statusHttpError","statusInvalidThirdPartyApi","statusSentinelInUse","statusAdminInProgress","statusInvalidDownloadClient","statusUserNotInWhiteList","statusIperf3ServerFailed","pingFlagNoop","pingFlagTcMode","pingMarkNormal","pingMarkDropped","pingMarkSavedRx","pingMarkSavedTx","objectType_null","objectType_clientInstance","objectType_networkDevice","objectType_server","eventClass_null","eventClass_clientAdded","eventClass_clientAddressChanged","eventClass_clientOnLineStatus","eventClass_clientLoginStatus","eventClass_cpuusage","eventClass_crash","eventClass_networkDeviceAdded","eventClass_networkDeviceDeleted","eventClass_networkDeviceIPAddressChanged","eventClass_networkDeviceStatus","eventClass_pingFail","eventId_null","eventActive_inactive","eventActive_active","eventActive_activeAutoInactive","alertTarget_null","alertTarget_email","alertTarget_sms","adminCmd_admin","adminCmd_getLogLevel","adminCmd_setLogLevel","adminCmd_sendLogs","adminCmd_sentinel_none","adminCmd_sentinel_reboot","adminCmd_sentinel_resetNetworkDevicesDatabase","adminCmd_sentinel_restartSentinel","adminCmd_sentinel_restartSentinelAdmin","adminCmd_sentinel_restartSentinelWeb","adminCmd_sentinel_restartUpdater","adminCmd_sentinel_sendLogs","adminCmd_sentinel_setLogLevelDetailed","adminCmd_sentinel_setLogLevelNormal","clientType_null","clientType_appliance","clientType_pc","clientType_web","clientMode_null","clientMode_pcOnly","clientMode_sentinel","thirdPartyApiName_null","thirdPartyApiName_email","thirdPartyApiName_ipApi","thirdPartyApiName_ipGeolocation","thirdPartyApiName_sms","headBuzzardUserId","endOfFile","log","require","sleep","ms","Promise","resolve","setTimeout","processStopHandler","processAlertHandler","process","on","err","origin","stack","exit","reason","promise","warning","name","message","processErrorHandler","global","sentinelIPAddress","getSentinelIPAddress","_73162ca9_cb43_4b75_8e61_81f2b9e8a674_sentinelInfo","getSentinelProtocol","sentinelProtocol","init","sentinelIPAddress_","sentinelProtocol_","is_debugging","os_id","get_is_debugging","set_is_debugging","state","get_os_id","set_os_id","os_id_param","getLogDir","getLogLevelVerbose","getLogPath","logInit","setLogLevel","timestampToString","createLogger","format","transports","combine","timestamp","label","printf","moment","fs","path","schedule","fileDeleteAsync","fileReadDirAsync","fileStatAsync","_8fb20139_fb80_458d_bca5_25310e0c68ec_logger","_8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransport","logfilePath","logFilenameBase","defaultLevel","logLevelVerbose","logFileCleanup","filterFileArray","files","filesToDelete","olderThanMs","Date","now","i","length","file","stats","Math","floor","mtimeMs","push","filteredFiles","indexOf","level","_label","_level","ex","console","__filename","join","logfilePath_","logFilenameBase_","logfileRotate","DailyRotateFile","filename","dirname","datePattern","zippedArchive","newFilename","fileForTailing","unlinkSync","symlinkSync","oldFilename","zipFilename","removedFilename","info","padEnd","exceptionHandlers","exitOnError","rule","RecurrenceRule","dayOfWeek","Range","hour","minute","scheduleJob","scheduleDailyWork","logLevel","newLevel","Mutex","mutex","mode","reject","chmod","fileDeleteAsync_helper","unlink","deleteBak","ret","pathBak","fileExistsAsync","exists","res","runExclusive","fileReadAsync_helper","readFile","data","rename","filter","readdir","oldPath","newPath","stat","fileWriteAsync_helper","pathNew","writeFile","fileChmodAsync","fileReadAsync","fileRenameAsync","fileWriteAsync","send","channel","data_","e","CustomEvent","detail","document","getElementById","dispatchEvent","callback","addEventListener","app","NavBar","props","handleClick","sentinelOnline","preventDefault","count","this","setState","needLogin","needSettings","clientName","userName","className","id","onClick","to","Defs","style","marginLeft","textAlign","fontSize","React","Component","isAdmin","eventManager","event","sentinelStatus","loginStatus","doRender","get","key","defaultValue","val","Cookies","set","expires","CloseWindow","window","location","replace","cookie","httpInstance","handleHttpException","title","code","status","url","config","a","delete","addHeaders","params","post","put","configWithHeaders","headers","axios","defaults","common","sentinelInfo","startsWith","create","httpAgent","https","Agent","keepAlive","validateStatus","http","logAuthToken","setAuthTokenHeader","authToken","setBaseURL","baseURL","setClientTokenHeader","clientToken","setConnTokenHeader","connToken","queryString","deviceChanges","getDevices","putDevice","CloseButton","linkCount","ev","position","top","right","border","background","outline","height","width","Navigator","linkChange","link","showInfoPopup","buttonsEnabled","getInfoMessage","onSubmit","handleInfoPopupClick","closePopup","hideInfoPopup","bind","infoMessage","handleLinkChange","InfoPopup","copy","align","Button","type","variant","color","handleCopyClick","handleSubmitClick","ServiceTable","services","map","item","serviceInfo","friendlyName","DevicePopup","device","JSON","parse","stringify","getDevice","ipAddress","orgComment","comment","orgWatch","watch","undefined","onClose","target","value","checked","latestGoodPing","toString","displayName","size","onChange","handleCommentChange","hostName","vendor","macAddress","netBiosName","pingSucceeded","handleWatchChange","disabled","getEnableSubmit","autoFocus","handleCloseClick","devices","__hadError__","errorMessage","DeviceTable","alive","cursor","DevicesWindow","deviceIpAddress","showDevicePopup","deviceByIpAddress","updateDevice","handleDeviceCloseClick","hideDevicePopup","font","fontWeight","overflowX","overflowY","handleIpAddressClick","Map","device_","entries","serviceAddress","settings","getServiceAddress","getSettings","setSettings","serverIPAddress","sendVerify","credentials","verifyAsync","passwordDecrypted","password","handleCompletion","verified","verifyStatus","encrypt","dataReq","verifyRequest","Input","error","autofocus","htmlFor","LoginWindow","handleSubmitClick_helper","getUserName","handleChange","hidden","getPassword","getSubmitButtonEnabled","auth","SpinnerPopup","alignItems","Spinner","animation","role","PingPlotWindow","tcMode","zoomArray","numPoints","numSamples","numScrollUnitSamples","zoomLevel","zoomLevelPrev","maxPoints","minPoints","numPointsSamples","prevTimeMillis","timeLineArray","pingArray","rxRateArray","txRateArray","rxRatePriArray","txRatePriArray","cpuUtlzArray","cpuTempArray","maxEntries","numEntries","oldest","newest","markedLeft","markedRight","linkId","allButtonsDisabled","selectedRow","pingChartEvents","eventName","chartWrapper","google","handleChartReadyEvent","handleChartSelectEvent","toSentinel","center","toDateString","date","dsa","toLocaleString","split","jo","ja","splice","joe","jod","timeStamp","mark","flag","rx_rate_mbits","round","rx_rate_bits","tx_rate_mbits","tx_rate_bits","rx_bw_peak_mbits","rx_bw_peak_bits","tx_bw_peak_mbits","tx_bw_peak_bits","rx_bw_quality_mbits","rx_bw_quality_bits","tx_bw_quality_mbits","tx_bw_quality_bits","rx_rate_pri_mbits","rx_rate_dns_bits","rx_rate_rt_bits","tx_rate_pri_mbits","tx_rate_dns_bits","tx_rate_rt_bits","tlStatusStyle","tlTooltip","getTimeOfDay","millis","Number","dropped","tooltip","idLinkId","rxTooltip","txTooltip","rxPriTooltip","txPriTooltip","cpu_utlz","cpu_utlz_user","cpu_utlz_nice","cpu_utlz_system","cpu_utlz_iowait","cpu_utlz_steal","cpuUtlzTooltip","cpu_temp","cpuTempTooltip","nextCount","moveOffset","computeMoveOffset","zoom","getChart","setSelection","row","column","selection","getSelection","centerPos","showSpinner","timeLineHeader","getTitle","marginTop","marginBottom","chartType","getTimeLineData","chartEvents","options","chartArea","left","pointShape","pointSize","legend","titleTextStyle","bold","hAxis","gridlines","vAxis","Tooltip","getDisabledLeftButton","handleLeftClick","getDisabledLeftMarkedButton","handleLeftMarkedClick","getDay","getDisabledRightMarkedButton","handleRightMarkedClick","getDisabledRightButtons","handleRightClick","handleHomeClick","getDisabledZoomOutButton","handlZoomOutClick","getDisabledZoomInButton","handlZoomInClick","getPingData","textPosition","getTxRateData","getRxRateData","direction","getTxRatePriData","getRxRatePriData","getCpuUtlzData","getCpuTempData","precision","multiplier","pow","mounted","handlePingPlotData","handleSentinelStatusOnline","SentinelInUseWindow","SentinelOnlineCheckWindow","PasswordPopup","showPassword","getShowPasswordChecked","handleShowPasswordClick","text","isValidInput","SettingsWindow","downloadSeconds","nominalLatencySeconds","remoteSSHPortNumber","remoteSSHState","simulateDroppedPackets","simulateSaves","simulateOffline","uploadSeconds","settingsWindow","inProgress","showRemoteSSHPasswordPopup","port","simulateOffLine","restoreFile","uploadFile","errMsg","isLocalClient","disabledWhileUpdating","restorePingChartDataReady","pingChartDataRestore","restoreSpeedTestDataReady","speedTestDataRestore","remoteSSHPortNumberEmpty","handleRemoteSSHPasswordPopupClick","hideRemoteSSHPasswordPopup","hideResponsePopup","getClientName","handleSetClientNameClick","getLogLevelDetailedChecked","handleLogLevelDetailedClick","getConsoleLogLevelDetailedChecked","handleConsoleLogLevelDetailedClick","getSimulateDroppedPacketsChecked","handleSimulateDroppedPacketsClick","getSimulateSavesChecked","handleSimulateSavesClick","getSimulateOfflineChecked","handleSimulateOfflineClick","handleSendLogsClick","handleRebootClick","handleShutdownClick","getDisableRemoteSSHPortNumber","handleRemoteSSHClick","getRemoteSSHTitle","getRemoteSSHPortNumber","href","extensions","maxSize","handleUploadPingChartDataClick","onError","handleUploadPingChartDataError","handleRestorePingChartDataClick","handleUploadSpeedTestDataClick","handleUploadSpeedTestDataError","handleRestoreSpeedTestDataClick","getNominalLatencySeconds","getDownloadSeconds","handleSaveSpeedTestSettingsClick","getUploadSeconds","restoreName","sendRequest","method","form","FormData","append","settings_","remoteSSHPassword","Gauge","interval","updateCount","timer","gaugeOptions","majorTicks","minorTicks","max","overlayMarginTop","Platform","OS","progress","nextProps","nextState","startTimer","stopTimer","setInterval","clearInterval","majorTick","getData","LinearProgress","getProgress","ThroughputTestWindow","timeOfTest","downloadBloat","uploadBloat","nominalLatency","downloadThroughput","uploadThroughput","inTest","hideButton","isLoggedIn","numTicksNominalLatency","tickNumNominalLatency","numTicksIperf3Down","tickNumIperf3Down","numTicksIperf3Up","tickNumIperf3Up","str","obj","Object","prototype","call","isPlainObject","numTicks","tickNum","nominalLatencyTestDurationSeconds","parseInt","downloadThroughputTestDurationSeconds","uploadThroughputTestDurationSeconds","joResults","_testState","testState","_hideButton","timeMillis","roundToTwo","avgMillis","mbitsPerSec","num","sampleMillis","joResult","nominalLatencyMillis","tickStatusIperf3Down","tickStatusIperf3Up","downloadThroughputMBits","downloadBloatMillis","uploadThroughputMBits","uploadBloatMillis","displayResults","handleLoginClick","getNominalLatency","getProgressNominalLatency","active","getActive","zIndex","getDownloadThroughput","getProgressIperf3Down","getDownloadBloat","getUploadThroughput","getProgressIperf3Up","getUploadBloat","visibility","getButtonVisibility","handleCancelTestClick","handleBeginTestClick","class","margin","getTimeOfTest","getDisabledOldestButton","handleOldestClick","getDisabledRightButton","getDisabledNewestButton","handleNewestClick","updateBloatLatencyIperf3Down","handleBloatLatencyIperf3Down","updateBloatLatencyIperf3Up","handleBloatLatencyIperf3Up","handleClearDials","handleTestingState","handleStatusIperf3Down","handleStatusIperf3Up","handleStatusNominalLatency","handleStatusNominalLatencyFinal","handleProgressNominalLatency","handleProgressIperf3Down","handleProgressIperf3Up","handleTimeOfTest","handleLoginStatus","handleFailedToGetServer","handleThroughputTestStatus","App","callBackendAPI","fetch","response","json","body","Error","then","express","catch","Fragment","user","exact","component","loggedIn","navbarName","Boolean","hostname","match","FromSentinel","running","ready","timeout","sendSentinelStatus","_data","forMain","passwordEncrypted","sendCredentials","clientName_","userName_","paramsURI","getQueryVariable","paramsEncrypted","decodeURI","cipher","decrypt","from","protocol","httpService","fromSentinel","run","is_ready","ReactDOM","render","variable","query","search","substring","vars","pair","main","navigator","serviceWorker","registration","unregister","handleLoginVerifyStatus","decrypted","iv","Buffer","randomBytes","createCipheriv","crypted","update","final","encrypted","textParts","IV","shift","encryptedText","decipher","createDecipheriv"],"mappings":"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","file":"static/js/main.949828de.chunk.js","sourcesContent":["class Defs {}\n\nmodule.exports = {\n  reqAreYouServerUuid: \"a962ed99-e788-49cd-aa67-b0a8317f1573\",\n  rspAreYouServerUuid: \"7589c403-984c-4c8a-885b-48a65131d17b\",\n\n  reqDiscoveryUuid: \"24e1c790-20b9-47e9-b4b7-77f15da4e191\",\n  rspDiscoveryUuid: \"9c96377f-ee54-4d39-b4f0-fde43283ac73\",\n\n  port_server: \"8001\",\n  port_sentinel_admin: \"8005\",\n  port_sentinel_core: \"8002\",\n  port_sentinel_updater: \"8003\",\n  port_sentinel_web: \"8008\",\n  port_sentinel_web_client_proxy: \"8004\",\n  port_sentinel_web_server_proxy: \"8002\",\n  port_traffic_control: \"8007\",\n\n  server_cert: \"/etc/iipzy/certificate/server.cert\",\n  server_key: \"/etc/iipzy/certificate/server.key\",\n\n  pingTarget: \"google.com\",\n\n  urlAbout: \"/about\",\n  urlAddUser: \"/addUser\",\n  urlAdministration: \"/administration\",\n  urlBlank: \"/blank\",\n  urlClients: \"/clients\",\n  urlClientUpdate: \"/clientUpdate\",\n  urlCloseSentinel: \"/closeSentinel\",\n  urlDebug: \"/debug\",\n  urlDevices: \"/devices\",\n  urlDownload: \"/download\",\n  urlEditUser: \"/editUser\",\n  urlForgotPassword: \"/forgotPassword\",\n  urlHome: \"/home\",\n  urlIipzy: \"/iipzy\",\n  urlLogin: \"/login\",\n  urlLogLevel: \"/logLevel\",\n  urlLogSend: \"/logSend\",\n  urlNavigator: \"/navigator\",\n  urlPingPlot: \"/pingPlot\",\n  urlScheduler: \"/scheduler\",\n  urlSentinelAdmin: \"/sentinelAdmin\",\n  urlSentinelDiscovery: \"/sentinelDiscovery\",\n  urlSentinelInUse: \"/sentinelInUse\",\n  urlSentinelOnlineCheck: \"/sentinelOnlineCheck\",\n  urlSentinels: \"/sentinels\",\n  urlSettings: \"/settings\",\n  urlStartup: \"/startup\",\n  urlThroughputTest: \"/throughputTest\",\n  urlUpdater: \"/updater\",\n\n  ipcAAATest: \"ipc_000\",\n  ipcAuthCredentialsUpdate: \"ipc_001\",\n  ipcBloatLatencyStatusIperf3Down: \"ipc_002\",\n  ipcBloatLatencyStatusIperf3DownFinal: \"ipc_003\",\n  ipcBloatLatencyStatusIperf3Up: \"ipc_004\",\n  ipcBloatLatencyStatusIperf3UpFinal: \"ipc_005\",\n  ipcClearDials: \"ipc_006\",\n  ipcClientLoginNeeded: \"ipc_007\",\n  ipcClientName: \"ipc_074\",\n  ipcClientShutdown: \"ipc_008\",\n  ipcConnectionToken: \"ipc_129\",\n  ipcConsoleLog: \"ipc_009\",\n  ipcConsoleLogVerbose: \"ipc_092\",\n  ipcDevicesReady: \"ipc_075\",\n  ipcDeviceUpdated: \"ipc_072\",\n  ipcDumpSentinelDeviceTable: \"ipc_068\",\n  ipcExit: \"ipc_010\",\n  ipcExiting: \"ipc_011\",\n  ipcIperf3StatusDown: \"ipc_012\",\n  ipcIperf3StatusUp: \"ipc_013\",\n  ipcIsLocalClient: \"ipc_177\",\n  ipcLinkTo: \"ipc_014\",\n  ipcLoginStatus: \"ipc_015\",\n  ipcLoginVerifyStatus: \"ipc_157\",\n  ipcNavBarInfo: \"ipc_176\",\n  ipcNominalLatencyStatus: \"ipc_016\",\n  ipcNominalLatencyStatusFinal: \"ipc_017\",\n  ipcNoop: \"ipc_044\",\n  ipcPingPlotConvertDB: \"ipc_056\",\n  ipcPingPlotData: \"ipc_024\",\n  ipcPingPlotWindowButtonHome: \"ipc_025\",\n  ipcPingPlotWindowButtonLeft: \"ipc_026\",\n  ipcPingPlotWindowButtonLeftMarked: \"ipc_027\",\n  ipcPingPlotWindowButtonRight: \"ipc_028\",\n  ipcPingPlotWindowButtonRightMarked: \"ipc_029\",\n  ipcPingPlotWindowButtonZoomChange: \"ipc_030\",\n  ipcPingPlotWindowMount: \"ipc_031\",\n  ipcPingPlotWindowButtonHomeEx: \"ipc_114\",\n  ipcPingPlotWindowButtonLeftEx: \"ipc_115\",\n  ipcPingPlotWindowButtonLeftMarkedEx: \"ipc_116\",\n  ipcPingPlotWindowButtonRightEx: \"ipc_117\",\n  ipcPingPlotWindowButtonRightMarkedEx: \"ipc_118\",\n  ipcPingPlotWindowButtonZoomChangeEx: \"ipc_119\",\n  ipcPingPlotWindowMountEx: \"ipc_120\",\n  ipcQuit: \"ipc_067\",\n  ipcRendererReady: \"ipc_033\",\n  ipcSentinelDiscoveryTryingSentinelIPAddress: \"ipc_018\",\n  ipcSentinelDiscovery: \"ipc_019\",\n  ipcSentinelSendState: \"ipc_020\",\n  ipcSentinelOnlineCheck: \"ipc_021\",\n  ipcSentinelOnlineStatus: \"ipc_022\",\n  ipcServerAddress: \"ipc_064\",\n  ipcShowNavBar: \"ipc_146\",\n  ipcTestingState: \"ipc_036\",\n  ipcTickStatusIperf3Down: \"ipc_037\",\n  ipcThroughputTestFailedToGetServer: \"ipc_038\",\n  ipcThrouputTestStatus: \"ipc_087\",\n  ipcThroughputTestWindowButtonLeft: \"ipc_089\",\n  ipcThroughputTestWindowButtonNewest: \"ipc_088\",\n  ipcThroughputTestWindowButtonOldest: \"ipc_091\",\n  ipcThroughputTestWindowButtonRight: \"ipc_090\",\n  ipcThroughputTestWindowMount: \"ipc_039\",\n  ipcThroughputTestWindowCancel: \"ipc_175\",\n  ipcThroughputTestWindowStart: \"ipc_174\",\n  ipcThroughputTestWindowStartStop: \"ipc_040\",\n  ipcTickStatusIperf3Up: \"ipc_041\",\n  ipcTickStatusNominalLatency: \"ipc_042\",\n  ipcTimeOfTest: \"ipc_043\",\n  ipcUserAddVerified: \"ipc_127\",\n  ipcZZZNext: \"ipc_178\",\n\n  configFilename: \"iipzy\",\n\n  crashFilename: \"iipzy-crash.txt\",\n\n  // -- login status\n  loginStatusLoggedOut: 0,\n  loginStatusLoggedIn: 1,\n  loginStatusLoginFailed: 2,\n  loginStatusVerified: 3,\n  loginStatusVerifyFailed: 4,\n  loginStatusNoServerAddress: 5,\n\n  // -- sentinel discovery\n  sentinelStatusOnline: 0,\n  sentinelStatusOffline: 1,\n  sentinelStatusInUse: 2,\n  sentinelStatusNoAddress: 3,\n  sentinelStatusUnknown: 4,\n  sentinelStatusOnlineLoggedOut: 5,\n\n  // -- pi internal events\n  // NB: don't overlap with ipc...\n  pevLoginStatus: \"pev_1001\",\n  pevLoginNeeded: \"pev_1002\",\n  pevZZZNext: \"pev_1003\",\n\n  // -- http custome headers\n  httpCustomHeader_XAuthToken: \"x-auth-token\",\n  httpCustomHeader_XClientToken: \"x-client-token\",\n  httpCustomHeader_XConnToken: \"x-conn-token\",\n  httpCustomHeader_XTimestamp: \"x-timestamp\",\n  httpCustomHeader_XWebClient: \"x-web-client\",\n\n  // -- http\n  httpStatusOk: 200,\n  httpStatusCreated: 201,\n  httpStatusAccepted: 202,\n  httpStatusNoContent: 204,\n  httpStatusMultiStatus: 207,\n  httpStatusFound: 302,\n  httpStatusBadRequest: 400,\n  httpStatusUnauthorized: 401,\n  httpStatusForbidden: 403,\n  httpStatusNotFound: 404,\n  httpStatusConflict: 409,\n  httpStatusGone: 410,\n  httpStatusUnprocessableEntity: 422,\n  httpStatusInternalError: 500,\n  httpStatusNotImplemented: 501,\n  httpStatusConnRefused: 900,\n  httpStatusConnAborted: 901,\n  httpStatusConnReset: 902,\n  httpStatusSentinelInUse: 903,\n  httpStatusException: 999,\n\n  statusOk: 0,\n  statusAlreadyExists: 10001,\n  statusDoesNotExist: 10002,\n  statusInvalidVerificationCode: 10003,\n  statusGeneralSqlFailure: 10004,\n  statusException: 10005,\n  statusInvalidUserName: 10006,\n  statusInvalidPasswordResetCode: 10007,\n  statusCannotAllocateIperf3Server: 10008,\n  statusDailyIperf3LimitReached: 10009,\n  statusInvalidUpdateType: 10010,\n  statusUpdateInProgress: 10011,\n  statusRouteError: 10012,\n  statusMissingClientToken: 10013,\n  statusInvalidClientToken: 10014,\n  statusMissingAuthToken: 10015,\n  statusInvalidAuthToken: 10016,\n  statusMissingParam: 10017,\n  statusInvalidParam: 10018,\n  statusInvalidCredentials: 10019,\n  statusMissingConnectionToken: 10020,\n  statusInvalidConnectionToken: 10021,\n  statusAdminPriviledgeRequired: 10022,\n  statusInvalidClientType: 10023,\n  statusIperf3ServerBusy: 10024,\n  statusHttpError: 10025,\n  statusInvalidThirdPartyApi: 10026,\n  statusSentinelInUse: 10027,\n  statusAdminInProgress: 10028,\n  statusInvalidDownloadClient: 10029,\n  statusUserNotInWhiteList: 10030,\n  statusIperf3ServerFailed: 10031,\n\n  // ping flag - bit mask\n  pingFlagNoop: 0,\n  pingFlagTcMode:1,\n\n  // ping mark - bit mask\n  pingMarkNormal: 0,\n  pingMarkDropped: 1,\n  pingMarkSavedRx: 2,\n  pingMarkSavedTx: 4,\n\n  // -- events\n  // objectType\n  objectType_null: \"\",\n  objectType_clientInstance: \"clientInstance\",\n  objectType_networkDevice: \"networkDevice\",\n  objectType_server: \"server\",\n\n  // eventClass\n  eventClass_null: \"\",\n  eventClass_clientAdded: \"clientAdded\",\n  eventClass_clientAddressChanged: \"clientAddressChanged\",\n  eventClass_clientOnLineStatus: \"clientOnLineStatus\",\n  eventClass_clientLoginStatus: \"clientLoginStatus\",\n  eventClass_cpuusage: \"cpuusage\",\n  eventClass_crash: \"crash\",\n  eventClass_networkDeviceAdded: \"networkDeviceAdded\",\n  eventClass_networkDeviceDeleted: \"networkDeviceDeleted\",\n  eventClass_networkDeviceIPAddressChanged: \"networkDeviceIPAddressChanged\",\n  eventClass_networkDeviceStatus: \"networkDeviceStatus\",\n  eventClass_pingFail: \"pingFail\",\n\n  // eventId\n  eventId_null: \"\",\n\n  // eventActive\n  eventActive_inactive: 0,\n  eventActive_active: 1,\n  eventActive_activeAutoInactive: 2, // becomes inactive when alert sent.\n\n  // alert target\n  alertTarget_null: 0,\n  alertTarget_email: 1,\n  alertTarget_sms: 2,\n\n  // -- administrative commands to sentinels/clients\n  adminCmd_admin: \"admin\",\n  adminCmd_getLogLevel: \"get-log-level\",\n  adminCmd_setLogLevel: \"set-log-level\",\n  adminCmd_sendLogs: \"send-logs\",\n\n  adminCmd_sentinel_none: \"none\",\n  adminCmd_sentinel_reboot: \"reboot\",\n  adminCmd_sentinel_resetNetworkDevicesDatabase:\n    \"reset-network-devices-database\",\n  adminCmd_sentinel_restartSentinel: \"restart-sentinel\",\n  adminCmd_sentinel_restartSentinelAdmin: \"restart-sentinel-admin\",\n  adminCmd_sentinel_restartSentinelWeb: \"restart-sentinel-web\",\n  adminCmd_sentinel_restartUpdater: \"restart-updater\",\n  adminCmd_sentinel_sendLogs: \"send-logs\",\n  adminCmd_sentinel_setLogLevelDetailed: \"set-log-level-detailed\",\n  adminCmd_sentinel_setLogLevelNormal: \"set-log-level-normal\",\n\n  // client type.\n  clientType_null: \"null\",\n  clientType_appliance: \"appliance\",\n  clientType_pc: \"pc\",\n  clientType_web: \"web\",\n\n  // client mode.\n  clientMode_null: \"null\",\n  clientMode_pcOnly: \"pc-only\",\n  clientMode_sentinel: \"sentinel\",\n\n  // third party apis.\n  thirdPartyApiName_null: \"null\",\n  thirdPartyApiName_email: \"email\",\n  thirdPartyApiName_ipApi: \"ipApi\",\n  thirdPartyApiName_ipGeolocation: \"ipGeolocation\",\n  thirdPartyApiName_sms: \"sms\",\n\n  headBuzzardUserId: 1,\n\n  //\n  endOfFile: 0\n};\n","const { log } = require(\"./logFile\");\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function processErrorHandler(processStopHandler, processAlertHandler) {\n  log(\">>>processErrorHandler\", \"perr\", \"info\");\n\n  process.on(\"uncaughtException\", async (err, origin) => {\n    log(\n      `(Exception) uncaughtException: ${err}\\n` + `Exception origin: ${origin}`,\n      \"perr\",\n      \"error\"\n    );\n    log(\"stack: \" + err.stack, \"perr\", \"info\");\n    log(\"...exiting...\", \"perr\", \"info\");\n    if (processStopHandler)\n      await processStopHandler(\n        `(Exception) uncaughtException: ${err}\\n` +\n          `Exception origin: ${origin}`\n      );\n    await sleep(3000);\n    process.exit(97);\n  });\n\n  process.on(\"unhandledRejection\", async (reason, promise) => {\n    log(\n      \"(Error) unhandledRejection: promise = \" +\n        promise +\n        \", reason = \" +\n        reason,\n      \"perr\",\n      \"error\"\n    );\n    log(\"stack: \" + err.stack, \"perr\", \"info\");\n\n    if (processAlertHandler)\n      await processAlertHandler(\n        \"(Error) unhandledRejection: promise = \" +\n          promise +\n          \", reason = \" +\n          reason\n      );\n  });\n\n  process.on(\"warning\", async warning => {\n    log(\"(Error) warning: \" + warning.name, \"perr\", \"error\");\n    log(\"(Error) message: \" + warning.message, \"perr\", \"error\");\n    log(\"(Error) stack: \" + warning.stack, \"perr\", \"info\");\n\n    if (processAlertHandler)\n      await processAlertHandler(\n        \"(Error) warning: \" +\n          warning.name +\n          \", message: \" +\n          warning.message +\n          \", stack: \" +\n          warning.stack\n      );\n  });\n\n  log(\"<<<processErrorHandler\", \"perr\", \"info\");\n}\n\nmodule.exports = { processErrorHandler, sleep };\n","global.sentinelIPAddress = \"sentinel address not set\";\n\nfunction init(sentinelIPAddress_, sentinelProtocol_) {\n  global._73162ca9_cb43_4b75_8e61_81f2b9e8a674_sentinelInfo = \n    { sentinelIPAddress : sentinelIPAddress_ , \n      sentinelProtocol : sentinelProtocol_\n    }\n}\n\nfunction getSentinelIPAddress() {\n  return global._73162ca9_cb43_4b75_8e61_81f2b9e8a674_sentinelInfo.sentinelIPAddress;\n}\n\nfunction getSentinelProtocol() {\n  return global._73162ca9_cb43_4b75_8e61_81f2b9e8a674_sentinelInfo.sentinelProtocol;\n}\n\nexport default { getSentinelIPAddress, getSentinelProtocol, init };\n","//const { log } = require(\"./logFile\");\r\n\r\nlet is_debugging = false;\r\n\r\nfunction get_is_debugging() {\r\n  return is_debugging;\r\n}\r\n\r\nfunction set_is_debugging(state) {\r\n  is_debugging = state;\r\n}\r\n\r\nlet os_id = '';\r\n\r\nfunction get_os_id() {\r\n    return os_id;\r\n}\r\nfunction set_os_id(os_id_param) {\r\n  os_id = os_id_param;\r\n}\r\n\r\nmodule.exports = { \r\n    get_is_debugging,\r\n    set_is_debugging,\r\n    get_os_id, \r\n    set_os_id \r\n};","const {\n  getLogDir,\n  getLogLevelVerbose,\n  getLogPath,\n  log,\n  logInit,\n  setLogLevel,\n  timestampToString\n} = require(\"./logFile_impl\");\n// NB: This module exports logFile_Impl so that only one copy of logFile_Impl is loaded, regardless of where\n//  this module is referenced.  Effectively making logFile_Impl a singleton - because it contains shared data.\nmodule.exports = {\n  getLogDir,\n  getLogLevelVerbose,\n  getLogPath,\n  log,\n  logInit,\n  setLogLevel,\n  timestampToString\n};\n","const { createLogger, format, transports } = require(\"winston\");\nconst { combine, label, timestamp, printf } = format;\nrequire(\"winston-daily-rotate-file\");\nconst moment = require(\"moment\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst schedule = require(\"node-schedule\");\n\nconst {\n  fileDeleteAsync,\n  fileReadDirAsync,\n  fileStatAsync\n} = require(\"./fileIO\");\n\n//const {now} = require(\"./time\");\n\n//global._8fb20139_fb80_458d_bca5_25310e0c68ec_ = {};\n\nglobal._8fb20139_fb80_458d_bca5_25310e0c68ec_logger;\nglobal._8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransport;\n//--global._8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransportForTailing;\n//global._8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransportEx;\n\n// const levels = {\n//   error: 0,\n//   warn: 1,\n//   info: 2,\n//   verbose: 3,\n//   debug: 4,\n//   silly: 5\n// };\n\nlet logfilePath = null;\nlet logFilenameBase = null;\n\nlet defaultLevel = \"verbose\";\nlet logLevelVerbose = true;\n\nconst fileRetentionDays = 14 * 24 * 60 * 60 * 1000;\n\nfunction logInit(logfilePath_, logFilenameBase_) {\n  logfilePath = logfilePath_;\n  logFilenameBase = logFilenameBase_;\n  console.log(\n    \"log: logfilePath = \" + logfilePath + \", base = \" + logFilenameBase\n  );\n  const logfileRotate = logFilenameBase + \"-%DATE%.log\";\n  //const logfileRotateEx = logFilenameBase + \"-ex-%DATE%.log\";\n  const datePattern = \"YYYY-MM-DD-HH\";\n  //const datePatternEx = \"YYYY-MM-DD\";\n\n  global._8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransport = new transports.DailyRotateFile(\n    {\n      name: \"iipzy\",\n      filename: logfileRotate,\n      dirname: logfilePath,\n      datePattern: datePattern,\n      zippedArchive: true\n      //maxFiles: 24\n    }\n  );\n\n  // 2023-03-07 - Change file for trailing from actual file to link.\n  //--global._8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransportForTailing = new transports.File(\n  //--  {\n  //--    name: \"iipzyTailer\",\n  //--    filename: logFilenameBase + \".log\",\n  //--    dirname: logfilePath\n  //--  }\n  //--);\n\n  global._8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransport.on(\n    \"new\",\n    function(newFilename) {\n      log(\n        \"---transport.new: newFilename = \" +\n        newFilename,\n        \"log\",\n        \"info\"\n      );\n      // link file for tailing\n      const fileForTailing = path.join(logfilePath, logFilenameBase + \".log\");\n      try {\n        fs.unlinkSync( fileForTailing );\n      } catch(ex) {}\n      fs.symlinkSync( newFilename, fileForTailing, 'file' );\n    }\n  );\n\n  global._8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransport.on(\n    \"rotate\",\n    function(oldFilename, newFilename) {\n      log(\n        \"---transport.rotate: oldFilename = \" +\n          oldFilename +\n          \", newFilename = \" +\n          newFilename,\n        \"log\",\n        \"info\"\n      );\n      //--// truncate file for tailing\n      //--const fileForTailing = path.join(logfilePath, logFilenameBase + \".log\");\n      //--fs.truncateSync(fileForTailing);\n    }\n  );\n\n  global._8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransport.on(\n    \"archive\",\n    function(zipFilename) {\n      log(\"---transport.rotate: zipFilename = \" + zipFilename, \"log\", \"info\");\n    }\n  );\n\n  global._8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransport.on(\n    \"logRemoved\",\n    function(removedFilename) {\n      log(\n        \"---transport.rotate: removedFilename = \" + removedFilename,\n        \"log\",\n        \"info\"\n      );\n    }\n  );\n\n  // global._8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransportEx = new transports.DailyRotateFile(\n  //   {\n  //     filename: logfileRotateEx,\n  //     dirname: logfilePath,\n  //     datePattern: datePatternEx,\n  //     zippedArchive: true //,\n  //     //maxFiles: \"14d\"\n  //   }\n  // );\n\n  global._8fb20139_fb80_458d_bca5_25310e0c68ec_logger = createLogger({\n    name: \"iipzyLogger\",\n    level: defaultLevel,\n    format: combine(\n      timestamp({\n        format: () => {\n          return moment().format(\"YYYY-MM-DD HH:mm:ss.SSSZ\");\n          //return now();\n        }\n      }),\n      printf(info => {\n        let _level = info.level;\n        switch (info.level) {\n          case \"error\":\n            _level = \"error\";\n            break;\n          case \"warn\":\n            _level = \"warn \";\n            break;\n          case \"info\":\n            _level = \"info \";\n            break;\n          case \"verbose\":\n            _level = \"trace\";\n            break;\n          case \"debug\":\n            _level = \"debug\";\n            break;\n          default:\n            _level = \"info \";\n            break;\n        }\n        //\n        // console.log(\"++++++label=\" + info.label);\n        // console.log(\"++++++level=\" + _level);\n        let _label = null;\n        if (!info.label) _label = \"[++++]\";\n        else _label = \"[\" + info.label.padEnd(4, \" \") + \"]\";\n        return `${info.timestamp} ${_level} ${_label} ${info.message}`;\n      })\n    ),\n    transports: [\n      _8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransport //--,\n      //-- _8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransportForTailing,\n      //-- new transports.Console()\n    ],\n    exceptionHandlers: [\n      //_8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransportEx,\n      _8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransport //--,\n      //-- _8fb20139_fb80_458d_bca5_25310e0c68ec_fileTransportForTailing,\n      //--new transports.Console()\n    ],\n    exitOnError: false\n  });\n  log(\n    \"==== starting ==================================================================\",\n    \"log\",\n    \"info\"\n  );\n  log(\"---file = \" + __filename, \"log\", \"info\");\n\n  scheduleDailyWork();\n}\n\nfunction scheduleDailyWork() {\n  const rule = new schedule.RecurrenceRule();\n  rule.dayOfWeek = [new schedule.Range(0, 6)];\n  rule.hour = 0;\n  rule.minute = 11;\n\n  const j = schedule.scheduleJob(rule, async function() {\n    log(\"--- running cleanup\", \"log\", \"info\");\n    await logFileCleanup();\n  });\n}\n\nasync function logFileCleanup() {\n  //console.log(\".....calling fileReadDirAsync\");\n  const files = await fileReadDirAsync(logfilePath, filterFileArray);\n  const filesToDelete = [];\n\n  //console.log(\"...numfiles = \" + files.length);\n\n  const olderThanMs = Date.now() - fileRetentionDays;\n  for (let i = 0; i < files.length; i++) {\n    const file = files[i];\n    const stats = await fileStatAsync(logfilePath + \"/\" + file);\n    if (stats) {\n      if (Math.floor(stats.mtimeMs) < olderThanMs) filesToDelete.push(file);\n      // console.log(\n      //   \"..modtime = \" + stats.mtimeMs + \", stats.mtime = \" + stats.mtime\n      // );\n    }\n  }\n\n  //console.log(\"...numfiles to delete = \" + filesToDelete.length);\n\n  for (let i = 0; i < filesToDelete.length; i++) {\n    const path = logfilePath + \"/\" + filesToDelete[i];\n    log(\"---file cleanup: deleting \" + path, \"log\", \"info\");\n    const res = await fileDeleteAsync(path);\n    if (!res) log(\"(Error) failed to delete \" + path, \"log\", \"error\");\n    //console.log(\"...deleting: \" + file);\n  }\n  //console.log(files);\n}\n\n/*\nStats {\n  dev: 2114,\n  ino: 48064969,\n  mode: 33188,\n  nlink: 1,\n  uid: 85,\n  gid: 100,\n  rdev: 0,\n  size: 527,\n  blksize: 4096,\n  blocks: 8,\n  atimeMs: 1318289051000.1,\n  mtimeMs: 1318289051000.1,\n  ctimeMs: 1318289051000.1,\n  birthtimeMs: 1318289051000.1,\n  atime: Mon, 10 Oct 2011 23:24:11 GMT,\n  mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n  ctime: Mon, 10 Oct 2011 23:24:11 GMT,\n  birthtime: Mon, 10 Oct 2011 23:24:11 GMT }\n*/\n\nasync function filterFileArray(files) {\n  const filteredFiles = [];\n  for (let i = 0; i < files.length; i++) {\n    const file = files[i];\n    if (file.indexOf(logFilenameBase) === 0) {\n      filteredFiles.push(file);\n    }\n  }\n  return filteredFiles;\n}\n\nfunction log(message, label, level) {\n  const _label = label ? label : \"----\";\n  const _level = level ? level : \"info\";\n\n  if (_8fb20139_fb80_458d_bca5_25310e0c68ec_logger) {\n    try {\n      _8fb20139_fb80_458d_bca5_25310e0c68ec_logger.log({\n        level: _level,\n        message: message,\n        label: _label\n      });\n    } catch (ex) {\n      console.log(\"(Exception)  log: \" + ex);\n    }\n  } else {\n    console.log(_level + \" \" + _label + \" \" + message);\n    console.log(\"---file = \" + __filename);\n  }\n}\n\nfunction timestampToString(timestamp) {\n  // NB: convert timestamp to number.\n  return moment(timestamp * 1).format(\"YYYY-MM-DD HH:mm:ss.SSSZ\");\n}\n\nfunction setLogLevel(logLevel) {\n  console.log(\"...logLevel = \" + logLevel);\n  let newLevel;\n  switch (logLevel) {\n    case \"error\":\n      newLevel = \"error\";\n      break;\n    case \"warn\":\n      newLevel = \"warn\";\n      break;\n    case \"info\":\n      newLevel = \"info\";\n      break;\n    case \"trace\":\n    case \"verbose\":\n      newLevel = \"verbose\";\n      break;\n    case \"debug\":\n      newLevel = \"debug\";\n      break;\n    default:\n      newLevel = \"info\";\n      break;\n  }\n  if (newLevel != defaultLevel) {\n    console.log(\"...oldLevel = \" + defaultLevel + \", newLevel = \" + newLevel);\n    defaultLevel = newLevel;\n    logLevelVerbose = defaultLevel === \"verbose\";\n    for (\n      let i = 0;\n      i < global._8fb20139_fb80_458d_bca5_25310e0c68ec_logger.transports.length;\n      i++\n    ) {\n      global._8fb20139_fb80_458d_bca5_25310e0c68ec_logger.transports[\n        i\n      ].level = newLevel;\n    }\n  }\n}\n\nfunction getLogDir() {\n  return logfilePath;\n}\n\nfunction getLogLevelVerbose() {\n  return logLevelVerbose;\n}\n\nfunction getLogPath() {\n  return path.join(logfilePath, logFilenameBase + \".log\");\n}\n\nmodule.exports = {\n  getLogDir,\n  getLogLevelVerbose,\n  getLogPath,\n  log,\n  logInit,\n  setLogLevel,\n  timestampToString\n};\n","var { Mutex } = require(\"async-mutex\");\nconst path = require(\"path\");\nconst fs = require(\"fs\");\n\n//--const { log } = require(\"./logFile\");\n\nconst mutex = new Mutex();\n\nasync function fileChmodAsync(path, mode) {\n  return await new Promise((resolve, reject) => {\n    fs.chmod(path, mode, err => {\n      if (err) resolve(false);\n      else resolve(true);\n    });\n  });\n}\n\nasync function fileDeleteAsync_helper(path) {\n  return await new Promise((resolve, reject) => {\n    fs.unlink(path, err => {\n      if (err) resolve(false);\n      else resolve(true);\n    });\n  });\n}\n\nasync function fileDeleteAsync(path, deleteBak) {\n  let ret = await fileDeleteAsync_helper(path);\n  if (deleteBak) {\n    const pathBak = path + \".bak\";\n    ret = await fileDeleteAsync_helper(pathBak);\n  }\n  return ret;\n}\n\nasync function fileExistsAsync(path) {\n  return await new Promise((resolve, reject) => {\n    fs.exists(path, exists => {\n      resolve(exists);\n    });\n  });\n}\n\nasync function fileReadAsync(path) {\n  let res = null;\n  await mutex.runExclusive(async () => {\n    res = await fileReadAsync_helper(path);\n  });\n  return res;\n}\n\nasync function fileReadAsync_helper(path) {\n  const pathBak = path + \".bak\";\n\n  try {\n    if (await fileExistsAsync(path)) {\n      // read from path.\n      return await new Promise((resolve, reject) => {\n        fs.readFile(path, (err, data) => {\n          if (err) reject(err);\n          else resolve(data);\n        });\n      });\n    } else {\n      // see if .bak exists.  If so, rename then read.\n      if (await fileExistsAsync(pathBak)) {\n        await new Promise((resolve, reject) => {\n          fs.rename(pathBak, path, err => {\n            if (err) reject(err);\n            else resolve();\n          });\n        });\n        return await new Promise((resolve, reject) => {\n          fs.readFile(path, (err, data) => {\n            if (err) reject(err);\n            else resolve(data);\n          });\n        });\n      }\n    }\n  } catch (ex) {\n    console.log(\"(Exception) fileReadAsync: \" + ex);\n  }\n  return null;\n}\n\nasync function fileReadDirAsync(path, filter) {\n  try {\n    // get list of files.\n    return new Promise((resolve, reject) => {\n      fs.readdir(path, (err, files) => {\n        if (err) resolve([]);\n        else resolve(filter ? filter(files) : files);\n      });\n    });\n  } catch (ex) {\n    console.log(\"(Exception) fileReadDirAsync: \" + ex);\n    return [];\n  }\n}\n\nasync function fileRenameAsync(oldPath, newPath) {\n  try {\n    // rename\n    return new Promise((resolve, reject) => {\n      fs.rename(oldPath, newPath, err => {\n        if (err) resolve(false);\n        else resolve(true);\n      });\n    });\n  } catch (ex) {\n    console.log(\"(Exception) fileRenameAsync: \" + ex);\n    return false;\n  }\n}\n\nasync function fileStatAsync(path) {\n  try {\n    // get stats.\n    return new Promise((resolve, reject) => {\n      fs.stat(path, (err, stats) => {\n        if (err) resolve({});\n        else resolve(stats);\n      });\n    });\n  } catch (ex) {\n    console.log(\"(Exception) fileStatAsync: \" + ex);\n    return {};\n  }\n}\n\nasync function fileWriteAsync(path, data) {\n  await mutex.runExclusive(async () => {\n    await fileWriteAsync_helper(path, data);\n  });\n}\n\nasync function fileWriteAsync_helper(path, data) {\n  const pathNew = path + \".new\";\n  const pathBak = path + \".bak\";\n\n  try {\n    // delete any path.bak\n    await new Promise((resolve, reject) => {\n      fs.unlink(pathBak, err => {\n        resolve();\n      });\n    });\n    // rename path to path.bak\n    await new Promise((resolve, reject) => {\n      fs.rename(path, pathBak, err => {\n        resolve();\n      });\n    });\n    // write to path.new\n    await new Promise((resolve, reject) => {\n      fs.writeFile(pathNew, data, err => {\n        if (err) reject(err);\n        else resolve();\n      });\n    });\n    // rename path.new to path\n    await new Promise((resolve, reject) => {\n      fs.rename(pathNew, path, err => {\n        resolve();\n      });\n    });\n  } catch (ex) {\n    console.log(\"(Exception) fileWriteAsync: \" + ex);\n  }\n}\n\nmodule.exports = {\n  fileChmodAsync,\n  fileDeleteAsync,\n  fileExistsAsync,\n  fileReadAsync,\n  fileReadDirAsync,\n  fileRenameAsync,\n  fileStatAsync,\n  fileWriteAsync\n};\n","function send(channel, data) {\n  // console.log(\"eventManager.send: \" + channel);\n  let data_ = {};\n  if (data || data === 0 || data === \"\" || data === []) data_ = data;\n  const e = new CustomEvent(channel, { detail: { data: data_ } });\n  document.getElementById(\"root\").dispatchEvent(e);\n}\n\nfunction on(channel, callback) {\n  document.getElementById(\"root\").addEventListener(\n    channel,\n    e => {\n      // console.log(\n      //   \"eventManager.on: channel = \" +\n      //     channel +\n      //     \", e.detail = \" +\n      //     JSON.stringify(e.detail)\n      // );\n      callback(channel, e.detail.data);\n    },\n    false\n  );\n}\n\nexport default { send, on };\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\n\nlet app = null;\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"NavBar constructor\");\n\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  doRender() {\n    console.log(\"NavBar.doRender\");\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  handleClick = e => {\n    if (!NavBar.sentinelOnline) e.preventDefault();\n  };\n\n  render() {\n    console.log(\"NavBar render called\");\n\n    const needLogin = NavBar.needLogin;\n    const needSettings = NavBar.needSettings;\n\n    const clientName = NavBar.clientName;\n    const userName = NavBar.userName;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav\">\n              {!needLogin && !needSettings && (\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={this.handleClick}\n                  to={Defs.urlPingPlot}\n                >\n                  Charts\n                </NavLink>\n              )}\n              {!needLogin && !needSettings && (\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={this.handleClick}\n                  to={Defs.urlThroughputTest}\n                >\n                  Speed Test\n                </NavLink>\n              )}\n              {!needLogin && !needSettings && (\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={this.handleClick}\n                  to={Defs.urlDevices}\n                >\n                  Network Devices\n                </NavLink>\n              )}\n              {needLogin && (\n                <NavLink\n                  className=\"nav-item nav-link\"\n                  onClick={this.handleClick}\n                  to={Defs.urlLogin}\n                >\n                  Log in\n                </NavLink>\n              )}\n              <NavLink\n                className=\"nav-item nav-link\"\n                onClick={this.handleClick}\n                to={Defs.urlSettings}\n              >\n                Settings\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to={Defs.urlCloseSentinel}>\n                Home\n              </NavLink>\n            </div>\n          </div>\n        </nav>\n        <div style={{ marginLeft: 24, textAlign: \"left\" }}>\n            <p style={{ fontSize: \"100%\" }}>User: {userName}.&nbsp;&nbsp;Device: {clientName}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nNavBar.isAdmin = false;\nNavBar.clientName= \"no device\";\nNavBar.needLogin = true;\nNavBar.needSettings = false;\nNavBar.sentinelOnline = false;\nNavBar.userName = \"not logged in\";\n\nconst handleSentinelOnLineStatus = (event, data) => {\n  const { sentinelStatus } = data;\n  console.log(\n    \"NavBar.handleSentinelOnLineStatus: sentinelStatus = \" + sentinelStatus\n  );\n  NavBar.sentinelOnline = sentinelStatus === Defs.sentinelStatusOnline;\n};\n\nconst handleLoginStatus = (event, data) => {\n  const { loginStatus } = data;\n  console.log(\"NavBar.handleLoginStatus: loginStatus = \" + loginStatus);\n  NavBar.needLogin = loginStatus === Defs.loginStatusLoginFailed;\n  NavBar.needSettings = loginStatus === Defs.loginStatusNoServerAddress;\n  if (NavBar.needLogin) eventManager.send(Defs.ipcLinkTo, Defs.urlLogin);\n  else if (NavBar.needSettings)\n    eventManager.send(Defs.ipcLinkTo, Defs.urlSettings);\n  else eventManager.send(Defs.ipcLinkTo, Defs.urlPingPlot);\n  if (app != null) app.doRender();\n};\n\nconst handleNavBarInfo = (event, data) => {\n  const { userName, clientName } = data;\n  NavBar.clientName = clientName;\n  NavBar.userName = userName;\n  if (app != null) app.doRender();\n}\n\neventManager.on(Defs.ipcSentinelOnlineStatus, handleSentinelOnLineStatus);\neventManager.on(Defs.pevLoginStatus, handleLoginStatus);\neventManager.on(Defs.ipcNavBarInfo, handleNavBarInfo);\n\nexport default NavBar;\n","export function log(message, label, level) {\n  console.log(level + \" [\" + label + \"] \" + message);\n}\n\nexport default { log };\n","import Cookies from \"js-cookie\";\n\nimport { log } from \"./log\";\n\n//const cookieName = \"iipzy-server-web\";\n\nfunction get(key, defaultValue) {\n  let val = Cookies.get(key);\n  if (!val && defaultValue) val = defaultValue;\n  log(\"cookie.get: key = \" + key + \", val = \" + val, \"cook\", \"info\");\n  return val;\n}\n\nfunction set(key, val) {\n  log(\"cookie.set: key = \" + key + \", val = \" + val, \"cook\", \"info\");\n  return Cookies.set(key, val, { expires: 365 });\n}\n\nexport default { get, set };\n","import React from \"react\";\n\nimport cookie from \"../utils/cookie\";\n\n//let app = null;\n\nclass CloseWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"CloseWindow.constructor\");\n    this.state = { count: 0 };\n\n    //app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"CloseWindow.componentDidMount\");\n    window.location.replace(cookie.get(\"fromOrigin\"));\n  }\n\n  render() {\n    console.log(\"CloseWindow.render\");\n\n    return <div></div>;\n  }\n}\n\nexport default CloseWindow;\n","import axios from \"axios\";\nimport http from \"http\";\nimport https from \"https\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport sentinelInfo from \"../utils/sentinelInfo\";\n\nlet httpInstance = null;\n\nfunction init() {\n  if (sentinelInfo.getSentinelProtocol().startsWith(\"https\")) {\n    httpInstance = axios.create({\n      httpAgent: new https.Agent({\n        keepAlive: true\n      }),\n      validateStatus: function(status) {\n        // return success for all http response codes.\n        //console.log(\"-------validateStatus: status = \" + status);\n        return true;\n      }\n    });\n  } else {\n    httpInstance = axios.create({\n      httpAgent: new http.Agent({\n        keepAlive: true\n      }),\n      validateStatus: function(status) {\n        // return success for all http response codes.\n        //console.log(\"-------validateStatus: status = \" + status);\n        return true;\n      }\n    });\n  }\n}\n\n/*\nconst httpInstance = axios.create({\n  httpAgent: new http.Agent({\n    keepAlive: true\n  }),\n  validateStatus: function(status) {\n    // return success for all http response codes.\n    //console.log(\"-------validateStatus: status = \" + status);\n    return true;\n  }\n});\n*/\n\nfunction handleHttpException(title, ex) {\n  console.log(\"(Exception) \" + title + \": \" + ex + \", code = \" + ex.code);\n  let status = Defs.httpStatusException;\n  switch (ex.code) {\n    case \"ECONNREFUSED\": {\n      status = Defs.httpStatusConnRefused;\n      break;\n    }\n    case \"ECONNABORTED\": {\n      status = Defs.httpStatusConnAborted;\n      break;\n    }\n    case \"ECONNRESET\": {\n      status = Defs.httpStatusConnReset;\n      break;\n    }\n    default: {\n      status = Defs.httpStatusConnRefused;\n      break;\n    }\n  }\n\n  return { status };\n}\n\nasync function _delete(url, config) {\n  try {\n    return await httpInstance.delete(url, addHeaders(config));\n  } catch (ex) {\n    return handleHttpException(\"delete\", ex);\n  }\n}\n\nasync function _get(url, config) {\n  console.log(\"--------------_get: url \" + url);\n  try {\n    return await httpInstance.get(url, addHeaders(config));\n  } catch (ex) {\n    console.log(\"(Exception)--------------_get: ex \" + ex.code);\n    return handleHttpException(\"get\", ex);\n  }\n}\n\nasync function _post(url, params, config) {\n  console.log(\"--------------_post: url \" + url);\n  try {\n    return await httpInstance.post(url, params, addHeaders(config));\n  } catch (ex) {\n    console.log(\"(Exception)--------------_post: ex \" + ex.code);\n    return handleHttpException(\"post\", ex);\n  }\n}\n\nasync function _put(url, params, config) {\n  try {\n    return await httpInstance.put(url, params, addHeaders(config));\n  } catch (ex) {\n    return handleHttpException(\"put\", ex);\n  }\n}\n\nfunction logAuthToken() {\n  console.log(\n    \"authToken: \" +\n      axios.defaults.headers.common[Defs.httpCustomHeader_XAuthToken]\n  );\n}\n\nfunction setAuthTokenHeader(authToken) {\n  console.log(\"setAuthTokenHeader = \" + authToken);\n  axios.defaults.headers.common[Defs.httpCustomHeader_XAuthToken] = authToken;\n}\n\nfunction setBaseURL(baseURL) {\n  axios.defaults.baseURL = \"http://\" + baseURL + \"/\";\n  console.log(\"setBaseURL = \" + axios.defaults.baseURL);\n}\n\nfunction setClientTokenHeader(clientToken) {\n  console.log(\"setClientTokenHeader = \" + clientToken);\n  axios.defaults.headers.common[Defs.httpCustomHeader_XClientToken] = clientToken;\n}\n\nfunction setConnTokenHeader(connToken) {\n  console.log(\"setConnTokenHeader = \" + connToken);\n  axios.defaults.headers.common[Defs.httpCustomHeader_XConnToken] = connToken;\n}\n\nfunction addHeaders(config) {\n  const configWithHeaders = config ? config : {};\n  configWithHeaders.headers = {};\n  configWithHeaders.headers[Defs.httpCustomHeader_XTimestamp] = Date.now();\n  configWithHeaders.headers[Defs.httpCustomHeader_XWebClient] = 1;\n  if (axios.defaults.headers.common[Defs.httpCustomHeader_XAuthToken])\n    configWithHeaders.headers[Defs.httpCustomHeader_XAuthToken] =\n      axios.defaults.headers.common[Defs.httpCustomHeader_XAuthToken];\n  if (axios.defaults.headers.common[Defs.httpCustomHeader_XClientToken])\n    configWithHeaders.headers[Defs.httpCustomHeader_XClientToken] =\n      axios.defaults.headers.common[Defs.httpCustomHeader_XClientToken];\n  if (axios.defaults.headers.common[Defs.httpCustomHeader_XConnToken])\n    configWithHeaders.headers[Defs.httpCustomHeader_XConnToken] =\n      axios.defaults.headers.common[Defs.httpCustomHeader_XConnToken];\n\n  return configWithHeaders;\n}\n\nexport default {\n  delete: _delete,\n  get: _get,\n  init,\n  post: _post,\n  put: _put,\n  logAuthToken,\n  setAuthTokenHeader,\n  setBaseURL,\n  setClientTokenHeader,\n  setConnTokenHeader\n};\n","//import Defs from \"iipzy-shared/src/defs\";\n\n//import eventManager from \"../ipc/eventManager\";\nimport http from \"../ipc/httpService\";\n\nimport sentinelInfo from \"../utils/sentinelInfo\";\n\nlet sentinelIPAddress = \"sentinel address not set\";\nlet sentinelProtocol = \"sentinel protocol not set\";\n\nfunction init() {\n  console.log(\"devices.init\");\n  sentinelIPAddress = sentinelInfo.getSentinelIPAddress();\n  sentinelProtocol = sentinelInfo.getSentinelProtocol();\n}\n\nasync function getDevices(queryString) {\n  console.log(\"getDevices\");\n\n  return await http.get(\n    sentinelProtocol + sentinelIPAddress + \"/api/devices\" + queryString\n  );\n}\n\nasync function putDevice(deviceChanges) {\n  console.log(\"putDevice\");\n\n  return await http.put(sentinelProtocol + sentinelIPAddress + \"/api/devices\", {\n    deviceChanges\n  });\n}\n\nexport default { init, getDevices, putDevice };\n","import React from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport IconButton from \"@material/react-icon-button\";\n\nclass CloseButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"CloseButton.constructor\");\n\n    this.state = {\n      linkCount: 0\n    };\n  }\n\n  handleClick(ev) {\n    console.log(\"CloseButton.handleClick\");\n    this.props.onClick(ev);\n  }\n\n  render() {\n    console.log(\"IipzyWindow.render\");\n\n    return (\n      <div>\n        <IconButton\n          onClick={ev => this.handleClick(ev)}\n          style={{\n            position: \"absolute\",\n            top: \"0px\",\n            right: \"0px\",\n            border: \"none\",\n            background: \"none\",\n            outline: \"none\"\n          }}\n        >\n          <FiX style={{ height: 30, width: 30 }} />\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default CloseButton;\n","import React from \"react\";\nimport { Redirect, Switch } from \"react-router-dom\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport InfoPopup from \"./infoPopup\";\n\nlet app = null;\n\n// NB: Navigator does not get constructed on every reference.\nclass Navigator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"Navigator.constructor\");\n\n    this.state = {\n      linkCount: 0\n    };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"Navigator.componentDidMount\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"Navigator.componentWillUnmount\");\n    //app = null;\n  }\n\n  handleLinkChange() {\n    Navigator.linkChange = true;\n    Navigator.linkCount++;\n\n    console.log(\"Navigator: handleLinkChange: \" + Navigator.link);\n\n    this.setState({ linkCount: Navigator.linkCount });\n  }\n\n  getInfoMessage() {\n    return \"info message\";\n  }\n\n  handleInfoPopupClick() {\n    console.log(\"...handleInfoPopupClick\");\n  }\n\n  hideInfoPopup() {\n    Navigator.showInfoPopup = false;\n    Navigator.buttonsEnabled = true;\n\n    Navigator.linkCount++;\n    this.setState({ linkCount: Navigator.linkCount });\n  }\n\n  render() {\n    const linkChange = Navigator.linkChange;\n    Navigator.linkChange = false;\n    const link = Navigator.link;\n\n    const showInfoPopup = Navigator.showInfoPopup;\n\n    console.log(\"Navigator.render: \" + link);\n\n    return (\n      <div>\n        {showInfoPopup ? (\n          <InfoPopup\n            getInfoMessage={() => this.getInfoMessage()}\n            onSubmit={ev => this.handleInfoPopupClick(ev)}\n            closePopup={this.hideInfoPopup.bind(this)}\n          />\n        ) : null}\n        {linkChange && (\n          <Switch>\n            <Redirect to={link} />\n          </Switch>\n        )}\n      </div>\n    );\n  }\n}\n\nNavigator.link = Defs.urlPingPlot;\nNavigator.linkCount = 0;\nNavigator.linkChange = false;\n\nNavigator.showInfoPopup = false;\nNavigator.infoMessage = \"\";\n\neventManager.on(Defs.ipcSentinelOnlineStatus, (event, data) => {});\n\neventManager.on(Defs.ipcLinkTo, (event, data) => {\n  console.log(\"navigator: \" + data);\n\n  Navigator.link = data;\n  if (app) app.handleLinkChange();\n});\n\n// ipcRenderer.on(Defs.ipcLoginStatus, (event, data) => {\n//   const { loginStatus } = data;\n//   if (loginStatus === Defs.loginStatusLoggedIn && app) app.handleLinkChange();\n// });\n\nexport default Navigator;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport copy from 'copy-to-clipboard';\n\nimport CloseButton from \"./closeButton\";\nimport Navigator from \"./navigator\";\n\nclass InfoPopup extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  getInfoMessage() {\n    return this.props.getInfoMessage();\n  }\n\n  handleCopyClick(ev) {\n    console.log(\"...Popup handleCopyClick\");\n    copy(this.props.getInfoMessage());\n  }\n\n  handleSubmitClick(ev) {\n    console.log(\"...Popup handleSubmitClick\");\n    this.props.closePopup();\n  }\n\n  render() {\n    console.log(\"InfoPopup render\");\n\n    return (\n      <div>\n        <Navigator />\n        <div className=\"popup\">\n          <div className=\"popup_inner\">\n            <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n              <p style={{ fontSize: \"140%\" }}>{this.props.title}</p>\n            </div>\n            <div style={{ marginLeft: 30, textAlign: \"left\" }}>\n              <p>\n                <br />\n                {this.getInfoMessage()}\n              </p>\n            </div>\n            <div align=\"center\">\n              <Button\n                type=\"button\"\n                variant=\"contained\"\n                style={{\n                  width: \"130px\",\n                  color: \"#0000b0\",\n                }}\n                onClick={(ev) => this.handleCopyClick(ev)}\n              >\n                Copy\n              </Button>\n            </div>\n            <CloseButton onClick={(ev) => this.handleSubmitClick(ev)} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InfoPopup;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport moment from \"moment\";\n\n//import Defs from \"iipzy-shared/src/defs\";\n\nimport devices from \"../services/devices\";\nimport CloseButton from \"./closeButton\";\nimport InfoPopup from \"./infoPopup\";\n\nlet app = null;\n\n// for Bonjour services\nclass ServiceTable extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render() {\n    const services = this.props.services;\n\n    return (\n      <table id=\"service-table\">\n        {services &&\n          services.map(\n            (item) =>\n              item.serviceInfo && (\n                <tr key={item.serviceInfo.friendlyName}>\n                  <td>{item.serviceInfo.friendlyName}</td>\n                </tr>\n              )\n          )}\n      </table>\n    );\n  }\n}\n\nclass DevicePopup extends React.Component {\n  constructor(props) {\n    super(props);\n    app = this;\n\n    this.state = { count: 0 };\n\n    // make a copy\n    DevicePopup.device = JSON.parse(JSON.stringify(this.props.getDevice()));\n\n    DevicePopup.title = \"Device @\" + DevicePopup.device.ipAddress;\n    DevicePopup.orgComment = DevicePopup.device.comment\n      ? DevicePopup.device.comment\n      : \"\";\n    DevicePopup.orgWatch = DevicePopup.device.watch\n      ? DevicePopup.device.watch\n      : false;\n  }\n\n  componentDidMount() {\n    console.log(\"devicePopup componentDidMount\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"devicePopup componentWillUnmount\");\n    app = null;\n  }\n\n  handleSubmitClick(ev) {\n    console.log(\"DevicePopup.handleSubmitClick\");\n    let deviceChanges = {};\n    const device = DevicePopup.device;\n    deviceChanges.ipAddress = device.ipAddress;\n    if (device.comment && device.comment !== DevicePopup.orgComment)\n      deviceChanges.comment = device.comment;\n    if (device.watch !== undefined && device.watch !== DevicePopup.orgWatch)\n      deviceChanges.watch = device.watch;\n\n    console.log(\"..submit: data = \" + JSON.stringify(deviceChanges, null, 2));\n\n    putDevice(deviceChanges);\n  }\n\n  handleCloseClick(ev) {\n    console.log(\"DevicePopup.handleCloseClick\");\n    this.props.putDevice(DevicePopup.device);\n    this.props.closePopup();\n    this.props.onClose(ev);\n  }\n\n  handleCommentChange(ev) {\n    console.log(\"DevicePopup.handleCommentChange: \" + ev.target.value);\n    DevicePopup.device.comment = ev.target.value;\n    this.doRender();\n  }\n\n  handleWatchChange(ev) {\n    console.log(\"DevicePopup.handleWatchChange: \" + ev.target.checked);\n    DevicePopup.device.watch = ev.target.checked;\n    console.log(\"DevicePopup.handleWatchChange2: \" + DevicePopup.device.watch);\n    this.doRender();\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  getEnableSubmit() {\n    const device = DevicePopup.device;\n    return (\n      (device.comment && device.comment !== DevicePopup.orgComment) ||\n      (device.watch !== undefined && device.watch !== DevicePopup.orgWatch)\n    );\n  }\n\n  getInfoMessage() {\n    return DevicePopup.infoMessage;\n  }\n\n  handleInfoPopupClick() {\n    console.log(\"...DevicePopup.handleInfoPopupClick\");\n  }\n\n  hideInfoPopup() {\n    DevicePopup.showInfoPopup = false;\n    this.doRender();\n  }\n\n  render() {\n    console.log(\"DevicePopup render\");\n\n    const device = DevicePopup.device;\n    const showInfoPopup = DevicePopup.showInfoPopup;\n    let latestGoodPing = \"\";\n    if (device.latestGoodPing)\n      latestGoodPing = moment(new Date(device.latestGoodPing)).format('ddd, MMMM Do YYYY, h:mm:ss a').toString();\n\n    return (\n      <div className=\"popup\">\n        <div className=\"popup_inner_large\">\n          {showInfoPopup ? (\n            <InfoPopup\n              getInfoMessage={() => this.getInfoMessage()}\n              onSubmit={(ev) => this.handleInfoPopupClick(ev)}\n              closePopup={this.hideInfoPopup.bind(this)}\n            />\n          ) : null}\n          {!showInfoPopup ? (\n            <div>\n              <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n                <p style={{ fontSize: \"140%\" }}>{this.title}</p>\n              </div>\n              <table align=\"center\">\n                <tbody>\n                  <tr>\n                    <td>IP Address:</td>\n                    <td>{device.ipAddress}</td>\n                  </tr>\n                  <tr>\n                    <td>Name:</td>\n                    <td>{device.displayName}</td>\n                  </tr>\n                  <tr>\n                    <td>Comment:</td>\n                    {/*                 <td>{device.comment}</td> */}\n                    <td>\n                      <input\n                        type=\"text\"\n                        name=\"comment-text\"\n                        size=\"40\"\n                        value={device.comment ? device.comment : \"\"}\n                        onChange={(ev) => this.handleCommentChange(ev)}\n                      />\n                    </td>\n                  </tr>\n                  {device.hostName ? (\n                    <tr>\n                      <td>Host Name:</td>\n                      <td>{device.hostName}</td>\n                    </tr>\n                  ) : null}\n                  {device.vendor ? (\n                    <tr>\n                      <td>Vendor:</td>\n                      <td>{device.vendor}</td>\n                    </tr>\n                  ) : null}\n                  {device.macAddress ? (\n                    <tr>\n                      <td>Mac Address:</td>\n                      <td>{device.macAddress}</td>\n                    </tr>\n                  ) : null}\n                  {device.netBiosName ? (\n                    <tr>\n                      <td>NetBIOS Name:</td>\n                      <td>{device.netBiosName}</td>\n                    </tr>\n                  ) : null}\n                  {device.services ? (\n                    <tr>\n                      <td>Services:</td>\n                      <td>\n                        <ServiceTable services={device.services} />\n                      </td>\n                    </tr>\n                  ) : null}\n                  <tr>\n                    <td>On Line:</td>\n                    <td>{device.pingSucceeded ? \"Yes\" : \"No\"}</td>\n                  </tr>\n                  <tr>\n                    <td>Latest Good Ping:</td>\n                    <td>\n                      {latestGoodPing}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Watch:</td>\n                    {/*                <td>{device.watch}</td> */}\n                    <td>\n                      <input\n                        type=\"checkbox\"\n                        name=\"watch-state\"\n                        checked={device.watch ? device.watch : false}\n                        onChange={(ev) => this.handleWatchChange(ev)}\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>&nbsp;</td>\n                  </tr>\n                </tbody>\n              </table>\n              <div align=\"center\">\n                <Button\n                  type=\"button\"\n                  variant=\"contained\"\n                  disabled={!this.getEnableSubmit()}\n                  style={{\n                    width: \"130px\",\n                    color: \"#0000b0\",\n                  }}\n                  autoFocus\n                  onClick={(ev) => this.handleSubmitClick(ev)}\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          ) : null}\n          <CloseButton onClick={(ev) => this.handleCloseClick(ev)} />\n        </div>\n      </div>\n    );\n  }\n}\n\nDevicePopup.device = null;\nDevicePopup.title = \"Network Device\";\nDevicePopup.orgComment = \"\";\nDevicePopup.orgWatch = false;\nDevicePopup.showInfoPopup = false;\nDevicePopup.infoMessage = \"\";\n\nasync function putDevice(deviceChanges) {\n  const { data } = await devices.putDevice(deviceChanges);\n  if (data.__hadError__) {\n    DevicePopup.infoMessage = data.__hadError__.errorMessage;\n    DevicePopup.showInfoPopup = true;\n\n    if (app) app.doRender();\n\n    return;\n  }\n\n  DevicePopup.device = data.device;\n  DevicePopup.infoMessage = DevicePopup.device.ipAddress + \" updated\";\n  DevicePopup.showInfoPopup = true;\n  DevicePopup.orgComment = DevicePopup.device.comment\n    ? DevicePopup.device.comment\n    : \"\";\n  DevicePopup.orgWatch = DevicePopup.device.watch\n    ? DevicePopup.device.watch\n    : false;\n\n  if (app) app.doRender();\n}\n\nexport default DevicePopup;\n","import React from \"react\";\n\nimport Defs from \"iipzy-shared/src/defs\";\nimport { get_is_debugging } from \"iipzy-shared/src/utils/globals\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport devices from \"../services/devices\";\n\nimport DevicePopup from \"./devicePopup\";\nimport Navigator from \"./navigator\";\n\nconsole.log(\"----DevicesWindow\");\n\nclass DeviceTable extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render() {\n    const devices = this.props.devices;\n\n    return (\n      <table id=\"device-table\">\n        {devices &&\n          devices.map(\n            (item) =>\n              item.alive && (\n                <tr key={item.ipAddress}>\n                  <td\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => this.props.onClick(item.ipAddress)}\n                  >\n                    {item.ipAddress}\n                  </td>\n                  <td\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => this.props.onClick(item.ipAddress)}\n                  >\n                    <div style={{ textAlign: \"left\", marginLeft: 20 }}>\n                      {item.displayName}\n                    </div>\n                  </td>\n                  <td\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => this.props.onClick(item.ipAddress)}\n                  >\n                    <div style={{ textAlign: \"left\", marginLeft: 20 }}>\n                      {item.comment}\n                    </div>\n                  </td>\n                </tr>\n              )\n          )}\n      </table>\n    );\n  }\n}\n\nlet app = null;\n\nclass DevicesWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"DevicesWindow.constructor\");\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"DevicesWindow.componentDidMount\");\n    getDevices(\"?aliveonly=1\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"DevicesWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  handleIpAddressClick(ipAddress) {\n    console.log(\"....ipAddressClick = \" + ipAddress);\n    DevicesWindow.deviceIpAddress = ipAddress;\n    DevicesWindow.showDevicePopup = true;\n    this.doRender();\n  }\n\n  handleDeviceCloseClick() {\n    console.log(\"...DevicesWindow.handleDeviceCloseClick\");\n  }\n\n  hideDevicePopup() {\n    DevicesWindow.showDevicePopup = false;\n    this.doRender();\n  }\n\n  getDevice() {\n    console.log(\"DevicesWindow.getDevice\");\n    return DevicesWindow.deviceByIpAddress.get(DevicesWindow.deviceIpAddress);\n  }\n\n  putDevice(device) {\n    console.log(\"DevicesWindow.putDevice: \" + JSON.stringify(device, null, 2));\n    updateDevice(device);\n  }\n\n  render() {\n    console.log(\"DevicesWindow.render\");\n\n    const devices = DevicesWindow.devices;\n    const showDevicePopup = DevicesWindow.showDevicePopup;\n\n    return (\n      <div>\n        <Navigator />\n        <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"140%\" }}>Devices on your Network</p>\n        </div>\n        {showDevicePopup ? (\n          <DevicePopup\n            getDevice={() => this.getDevice()}\n            putDevice={(device) => this.putDevice(device)}\n            onClose={(ev) => this.handleDeviceCloseClick(ev)}\n            closePopup={this.hideDevicePopup.bind(this)}\n          />\n        ) : null}\n        <div\n          /*           align=\"center\" */\n          style={{\n            marginLeft: 20,\n            width: \"750px\",\n            height: \"450px\",\n            border: \"1px solid #ccc\",\n            font: \"14px Courier New\",\n            fontWeight: \"bold\",\n            overflowX: \"scroll\",\n            overflowY: \"scroll\",\n          }}\n        >\n          <DeviceTable\n            devices={devices}\n            onClick={(ev) => this.handleIpAddressClick(ev)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDevicesWindow.devices = null;\nDevicesWindow.deviceByIpAddress = new Map();\nDevicesWindow.deviceIpAddress = \"\";\nDevicesWindow.infoMessage = \"\";\nDevicesWindow.showDevicePopup = false;\n\nasync function getDevices(queryString) {\n  const { data } = await devices.getDevices(queryString);\n  if (data.__hadError__) {\n    DevicesWindow.infoMessage = data.__hadError__.errorMessage;\n\n    if (app) app.doRender();\n\n    return;\n  }\n\n  DevicesWindow.devices = data.devices;\n  DevicesWindow.deviceByIpAddress = new Map();\n  for (let i = 0; i < DevicesWindow.devices.length; i++) {\n    const device = DevicesWindow.devices[i];\n    DevicesWindow.deviceByIpAddress.set(device.ipAddress, device);\n  }\n\n  if (app) app.doRender();\n}\n\nfunction updateDevice(device_) {\n  DevicesWindow.deviceByIpAddress.set(device_.ipAddress, device_);\n  DevicesWindow.devices = [];\n  for (const [\n    // NB: Although lint says otherwise, ipAddress is needed for proper operation.\n    // eslint-disable-next-line\n    ipAddress,\n    device,\n  ] of DevicesWindow.deviceByIpAddress.entries()) {\n    DevicesWindow.devices.push(device);\n  }\n}\n\nconst handleDevicesReady = (event, data) => {\n  console.log(\"DevicesWindow.handleDevicesReady\");\n  getDevices(\"?aliveonly=0\");\n};\n\nconst handleDeviceUpdated = (event, data) => {\n  console.log(\"DevicesWindow.handleDeviceUpdated\");\n\n  if (!data.__hadError__) {\n    // update devices.\n    if (get_is_debugging()) console.log(\n      \"DevicesWindow - handleDeviceUpdated data = \" +\n        JSON.stringify(data, null, 2)\n    );\n    updateDevice(data.device);\n\n    if (app != null) app.doRender();\n  }\n};\n\neventManager.on(Defs.ipcDevicesReady, handleDevicesReady);\neventManager.on(Defs.ipcDeviceUpdated, handleDeviceUpdated);\n\nexport default DevicesWindow;\n","import Defs from \"iipzy-shared/src/defs\";\n\nimport http from \"../ipc/httpService\";\n\nimport sentinelInfo from \"../utils/sentinelInfo\";\n\nlet sentinelIPAddress = \"sentinel address not set\";\nlet sentinelProtocol = \"sentinel protocol not set\";\n\nfunction init() {\n  console.log(\"settings.init\");\n  sentinelIPAddress = sentinelInfo.getSentinelIPAddress();\n  sentinelProtocol = sentinelInfo.getSentinelProtocol();\n}\n\nasync function getServiceAddress() {\n  console.log(\"settings.getServiceAddress\");\n  const { data, status } = await http.get(\n    sentinelProtocol + sentinelIPAddress + \"/api/settings/serviceaddress\"\n  );\n  if (status === Defs.httpStatusOk) return data.serviceAddress;\n  return \"address not set\";\n}\n\nasync function getSettings() {\n  console.log(\"settings.getSettings\");\n  return await http.get(sentinelProtocol + sentinelIPAddress + \"/api/settings/\");\n}\n\nasync function setSettings(settings) {\n  console.log(\"settings.setSettings\");\n  return await http.post(\n    sentinelProtocol + sentinelIPAddress + \"/api/settings/\",\n    settings\n  );\n}\n\nexport default { init, getServiceAddress, getSettings, setSettings };\n","import Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport http from \"../ipc/httpService\";\nimport { encrypt } from \"../utils/cipher\";\nimport cookie from \"../utils/cookie\";\nimport { log } from \"../utils/log\";\n\nimport settings from \"./settings\";\n\nlet serverIPAddress = \"address not set\";\n\nasync function init() {\n  log(\"auth.init\", \"auth\", \"info\");\n}\n\nasync function sendVerify(credentials) {\n  log(\"sendVerify\", \"auth\", \"info\");\n  return await http.post(\n    \"https://\" + serverIPAddress + \"/api/auth/verify\",\n    credentials\n  );\n}\n\nasync function verifyAsync(userName, passwordDecrypted) {\n  log(\">>>verifyAsync\", \"auth\", \"info\");\n\n  const { data, status } = await sendVerify({\n    userName,\n    password: passwordDecrypted\n  });\n\n  log(\"verifyAsync: status = \" + status, \"auth\", \"info\");\n  if (status === Defs.httpStatusOk) {\n    log(\"verifyAsync: succeeded\", \"auth\", \"info\");\n    await handleCompletion(\n      userName,\n      passwordDecrypted,\n      data.verified ? Defs.loginStatusVerified : Defs.loginStatusVerifyFailed\n    );\n  } else {\n    // failed\n    log(\"verifyAsync: failed\", \"auth\", \"info\");\n    await handleCompletion(userName, \"\", Defs.loginStatusVerifyFailed);\n  }\n\n  log(\"<<<verifyAsync\", \"auth\", \"info\");\n\n  //?? THIS DOESN'T WORK WHEN THERE IS AN ERROR CONNECTING TO SERVICE.\n  return { data, status };\n}\n\nasync function handleCompletion(userName, passwordDecrypted, verifyStatus) {\n  log(\n    \">>>handleCompletion: userName=\" +\n      userName +\n      \", verifyStatus = \" +\n      verifyStatus,\n    \"auth\",\n    \"info\"\n  );\n\n  // save in cookie.\n  cookie.set(\"userName\", userName);\n  if (verifyStatus === Defs.loginStatusVerified) {\n    cookie.set(\"password\", encrypt(passwordDecrypted));\n  } else {\n    cookie.set(\"password\", \"\");\n  }\n\n  eventManager.send(Defs.ipcLoginVerifyStatus, { verifyStatus });\n\n  log(\"<<<handleCompletion\", \"auth\", \"info\");\n}\n\nasync function verifyRequest(dataReq) {\n  log(\"verifyRequest\", \"auth\", \"info\");\n  const { userName, password } = dataReq;\n  return await verifyAsync(userName, password);\n}\n\nasync function handleSentinelOnLineStatus(event, data) {\n  log(\"handleSentinelOnLineStatus\", \"auth\", \"info\");\n  const { sentinelStatus } = data;\n  if (sentinelStatus === Defs.sentinelStatusOnline) {\n    // get serverIPAddress from sentinel.\n    serverIPAddress = await settings.getServiceAddress();\n  }\n}\n\neventManager.on(Defs.ipcSentinelOnlineStatus, handleSentinelOnLineStatus);\n\nexport default {\n  init,\n  verifyRequest\n};\n","import React from \"react\";\n\n//?? TODO hidden\nconst Input = ({\n  type,\n  name,\n  label,\n  value,\n  error,\n  autofocus,\n  disabled,\n  onChange\n}) => {\n  return (\n    <div className=\"form-group\" style={{ width: \"88%\", marginLeft: 45 }}>\n      <label htmlFor={name}>{label}</label>\n      <input\n        autoFocus={autofocus}\n        disabled={disabled}\n        value={value ? value : \"\"}\n        onChange={onChange}\n        id={name}\n        name={name}\n        type={type}\n        className=\"form-control\"\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\n//module.exports = Input;\nexport default Input;\n","import React from \"react\";\n//import Joi from \"joi-browser\";\nimport Button from \"@material-ui/core/Button\";\n\n//import Defs from \"iipzy-shared/src/defs\";\n\nimport auth from \"../services/auth\";\nimport InfoPopup from \"./infoPopup\";\nimport Navigator from \"./navigator\";\nimport Input from \"./input\";\n\nlet app = null;\n\nclass LoginWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"LoginWindow.constructor\");\n\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"LoginWindow.componentDidMount\");\n    this.doRender();\n  }\n\n  componentWillUnmount() {\n    console.log(\"LoginWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  getUserName() {\n    return LoginWindow.userName;\n  }\n\n  getPassword() {\n    return LoginWindow.password;\n  }\n\n  getInfoMessage() {\n    return LoginWindow.infoMessage;\n  }\n\n  getSubmitButtonEnabled() {\n    return (\n      LoginWindow.buttonsEnabled &&\n      (LoginWindow.verified ||\n        (LoginWindow.userName.length >= 5 && LoginWindow.password.length >= 5))\n    );\n  }\n\n  handleInfoPopupClick() {\n    console.log(\"LoginWindow.handleInfoPopupClick\");\n  }\n\n  hideInfoPopup() {\n    LoginWindow.showInfoPopup = false;\n    LoginWindow.buttonsEnabled = true;\n    this.doRender();\n  }\n\n  handleChange(ev) {\n    const name = ev.target.name;\n    const value = ev.target.value;\n    console.log(\"LoginWindow.handleChange: \" + name + \" = \" + value);\n    switch (name) {\n      case \"userName\": {\n        LoginWindow.userName = value;\n        break;\n      }\n      case \"password\": {\n        LoginWindow.password = value;\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n\n    this.doRender();\n  }\n\n  handleSubmitClick(ev) {\n    console.log(\"LoginWindow.handleSubmitClick\");\n    handleSubmitClick_helper();\n  }\n\n  render() {\n    console.log(\"loginWindow render\");\n\n    const verified = LoginWindow.verified;\n    const showInfoPopup = LoginWindow.showInfoPopup;\n\n    return (\n      <div>\n        <Navigator />\n        {showInfoPopup ? (\n          <InfoPopup\n            getInfoMessage={() => this.getInfoMessage()}\n            onSubmit={(ev) => this.handleInfoPopupClick(ev)}\n            closePopup={this.hideInfoPopup.bind(this)}\n          />\n        ) : null}\n        {!verified && (\n          <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n            <p style={{ fontSize: \"140%\" }}>Log in @ iipzy.com</p>\n          </div>\n        )}\n        {verified && (\n          <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n            <p style={{ fontSize: \"140%\" }}>\n              {this.getUserName()} is Logged in @ iipzy.com\n            </p>\n          </div>\n        )}\n        {!showInfoPopup && !verified && (\n          <Input\n            type=\"text\"\n            autofocus={true}\n            disabled={verified}\n            name=\"userName\"\n            value={this.getUserName()}\n            label=\"User Name\"\n            onChange={(ev) => this.handleChange(ev)}\n            error=\"\"\n          />\n        )}\n        {!showInfoPopup && !verified && (\n          <Input\n            type=\"password\"\n            autofocus={false}\n            hidden={verified}\n            disabled={verified}\n            name=\"password\"\n            value={this.getPassword()}\n            label=\"Password\"\n            onChange={(ev) => this.handleChange(ev)}\n            error=\"\"\n          />\n        )}\n        {!showInfoPopup && !verified && (\n          <div style={{ textAlign: \"center\" }}>\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              disabled={!this.getSubmitButtonEnabled()}\n              style={{\n                width: \"130px\",\n                color: \"#0000b0\",\n              }}\n              autoFocus\n              onClick={(ev) => this.handleSubmitClick(ev)}\n            >\n              Login\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nLoginWindow.buttonsEnabled = true;\nLoginWindow.infoMessage = \"\";\nLoginWindow.password = \"\";\nLoginWindow.showInfoPopup = false;\nLoginWindow.userName = \"\";\nLoginWindow.verified = false;\n\nasync function handleSubmitClick_helper() {\n  LoginWindow.buttonsEnabled = false;\n  if (app) app.doRender();\n\n  const { data } = await auth.verifyRequest({\n    userName: LoginWindow.userName,\n    password: LoginWindow.password,\n  });\n\n  if (data.__hadError__) {\n    LoginWindow.infoMessage = data.__hadError__.errorMessage;\n    LoginWindow.verified = false;\n  } else {\n    LoginWindow.infoMessage = \"Successfully logged in\";\n    LoginWindow.verified = true;\n  }\n\n  LoginWindow.showInfoPopup = true;\n  LoginWindow.buttonsEnabled = true;\n  if (app) app.doRender();\n}\n\nexport default LoginWindow;\n","//import Defs from \"iipzy-shared/src/defs\";\n\nimport http from \"./httpService\";\n\nimport sentinelInfo from \"../utils/sentinelInfo\";\n\nlet sentinelIPAddress = \"sentinel address not set\";\nlet sentinelProtocol = \"sentinel protocol not set\";\n\nfunction init() {\n  console.log(\n    \"toSentinel.init\",\n    \"devs\",\n    \"info\"\n  );\n  sentinelIPAddress = sentinelInfo.getSentinelIPAddress();\n  sentinelProtocol = sentinelInfo.getSentinelProtocol();\n}\n\nasync function send(channel, data) {\n  console.log(\"toSentinel.send: channel=\" + channel + \", data = \" + data);\n  await http.post(sentinelProtocol + sentinelIPAddress + \"/api/request\", {\n    event: channel,\n    data\n  });\n}\n\nexport default { init, send };\n","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nimport Navigator from \"./navigator\";\n\nclass SpinnerPopup extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"SpinnerPopup.constructor\");\n\n    this.state = { count: 0 };\n  }\n\n  componentDidMount() {\n    console.log(\"SpinnerPopup.componentDidMount\");\n    this.setState({ count: this.state.count + 1 });\n  }\n\n  render() {\n    console.log(\"SpinnerPopup render\");\n\n    return (\n      <div>\n        <Navigator />\n        <div className=\"popup_spinner\">\n          <div className=\"popup_spinner_inner\" alignItems=\"center\">\n            <div>\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SpinnerPopup;\n","import React from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport Defs from \"iipzy-shared/src/defs\";\nimport { get_is_debugging } from \"iipzy-shared/src/utils/globals\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport toSentinel from \"../ipc/toSentinel\";\n\nimport Navigator from \"./navigator\";\nimport SpinnerPopup from \"./spinnerPopup\";\n\n//  zoom\n//                duration    num samples   points \tpoint-samples     scroll-unit   scroll-unit-samples\n//  Zoom +++      7m          84            84\t\t  1                 35s           7\n//  Zoom ++       15 mins     180           180\t\t  1                 1m15s         15\n//  Zoom +        30 mins     360           360\t\t  1                 2m30s         30\n//  Zoom nominal  1 hour      720\t\t\t      720     1   (5 secs)      5 mins        60\n//  Zoom -        1 day       17280\t\t\t    720    \t24  (2 mins)      1 hour        720\n//  Zoom --       1 week      120960\t\t    720    \t168 (14 mins)     1 day         17280\n//  Zoom ---      1 month     518400\t\t    720    \t720 (60 mins)     na            na\n\nlet app = null;\n\n/*\nconst roundToTwo = num => {\n   return +(Math.round(num + \"e+1\") + \"e-1\");\n};\n*/\n\nconst ZOOMLEVEL_5MIN = 0;\nconst ZOOMLEVEL_10MIN = 1;\nconst ZOOMLEVEL_20MIN = 2;\nconst ZOOMLEVEL_30MIN = 3;\nconst ZOOMLEVEL_1HOUR = 4;\nconst ZOOMLEVEL_6HOURS = 5;\nconst ZOOMLEVEL_12HOURS = 6;\nconst ZOOMLEVEL_1DAY = 7;\nconst ZOOMLEVEL_1WEEK = 8;\nconst ZOOMLEVEL_30DAYS = 9;\nconst ZOOMLEVEL_MIN = 0;\nconst ZOOMLEVEL_MAX = ZOOMLEVEL_30DAYS;\nconst ZOOMLEVEL_DEFAULT = ZOOMLEVEL_1HOUR;\n\nclass PingPlotWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"PingPlotWindow constructor\");\n    this.state = { count: 0 };\n    this.tcMode = false;\n    // this.intervalId = null;\n    // this.progress = 0;\n\n    // see https://developers.google.com/chart/interactive/docs/gallery/scatterchart\n    // this.scatterOptions = {\n    //   title: \"bite the wax tadpole\",\n    //   pointSize: 2,\n    //   hAxis: { title: \"time\" },\n    //   vAxis: { title: \"ms\" }\n    // };\n    this.zoomArray = [\n      { numPoints: 60, numSamples: 1, numScrollUnitSamples: 5 }, //        ZOOMLEVEL_5MIN\n      { numPoints: 120, numSamples: 1, numScrollUnitSamples: 10 }, //      ZOOMLEVEL_10MIN\n      { numPoints: 240, numSamples: 1, numScrollUnitSamples: 20 }, //      ZOOMLEVEL_20MIN\n      { numPoints: 360, numSamples: 1, numScrollUnitSamples: 30 }, //      ZOOMLEVEL_30MIN\n      { numPoints: 720, numSamples: 1, numScrollUnitSamples: 60 }, //      ZOOMLEVEL_1HOUR\n      { numPoints: 720, numSamples: 6, numScrollUnitSamples: 180 }, //     ZOOMLEVEL_6HOURS\n      { numPoints: 720, numSamples: 12, numScrollUnitSamples: 360 }, //    ZOOMLEVEL_12HOURS\n      { numPoints: 720, numSamples: 24, numScrollUnitSamples: 720 }, //    ZOOMLEVEL_1DAY\n      { numPoints: 720, numSamples: 168, numScrollUnitSamples: 17280 }, // ZOOMLEVEL_1WEEK\n      { numPoints: 720, numSamples: 720, numScrollUnitSamples: 0 }, //      ZOOMLEVEL_30DAYS\n    ];\n    this.zoomLevel = ZOOMLEVEL_DEFAULT;\n    this.zoomLevelPrev = ZOOMLEVEL_DEFAULT;\n\n    this.maxPoints = 720;\n    this.minPoints = 90;\n    this.numPoints = this.zoomArray[this.zoomLevel].numPoints;\n    this.numPointsSamples =\n      this.zoomArray[this.zoomLevel].numPoints *\n      this.zoomArray[this.zoomLevel].numSamples;\n    this.prevTimeMillis = 0;\n\n     // timeline\n    this.timeLineArray = [];\n    this.timeLineArray[0] = [\n      \"time\",\n      \"status\",\n      { type: \"string\", role: \"style\" },\n      { type: \"string\", role: \"tooltip\" },\n    ];\n\n    for (let i = 1; i < this.numPoints + 1; i++) {\n      this.timeLineArray[i] = [null, 0, null, null];\n    }\n\n    // ping\n    this.pingArray = [];\n    this.pingArray[0] = [\n      \"time\",\n      \"ms\",\n      { type: \"string\", role: \"style\" },\n      { type: \"string\", role: \"tooltip\" },\n      { type: \"string\", role: \"id-linkId\" },\n    ];\n\n    for (let i = 1; i < this.numPoints + 1; i++) {\n      this.pingArray[i] = [null, 0, null, null, null];\n    }\n\n    // rx_rate\n    this.rxRateArray = [];\n    this.rxRateArray[0] = [\n      \"time\",\n      \"rx_mbits\",\n      { type: \"string\", role: \"tooltip\" },\n    ];\n\n    for (let i = 1; i < this.numPoints + 1; i++) {\n      this.rxRateArray[i] = [null, 0, null];\n    }\n\n    // tx_rate\n    this.txRateArray = [];\n    this.txRateArray[0] = [\n      \"time\",\n      \"tx_mbits\",\n      { type: \"string\", role: \"tooltip\" },\n    ];\n\n    for (let i = 1; i < this.numPoints + 1; i++) {\n      this.txRateArray[i] = [null, 0, null];\n    }\n\n    // rx_rate_pri\n    this.rxRatePriArray = [];\n    this.rxRatePriArray[0] = [\n      \"time\",\n      \"rx_pri_mbits\",\n      { type: \"string\", role: \"tooltip\" },\n    ];\n\n    for (let i = 1; i < this.numPoints + 1; i++) {\n      this.rxRatePriArray[i] = [null, 0, null];\n    }\n\n    // tx_rate_pri\n    this.txRatePriArray = [];\n    this.txRatePriArray[0] = [\n      \"time\",\n      \"tx_pri_mbits\",\n      { type: \"string\", role: \"tooltip\" },\n    ];\n\n    for (let i = 1; i < this.numPoints + 1; i++) {\n      this.txRatePriArray[i] = [null, 0, null];\n    }\n\n    // cpu_utilization\n    this.cpuUtlzArray = [];\n    this.cpuUtlzArray[0] = [\n      \"time\",\n      \"cpu_utlz\",\n      { type: \"string\", role: \"tooltip\" },\n    ];\n\n    for (let i = 1; i < this.numPoints + 1; i++) {\n      this.cpuUtlzArray[i] = [null, 0, null];\n    }\n\n    // cpu_temperature\n    this.cpuTempArray = [];\n    this.cpuTempArray[0] = [\n      \"time\",\n      \"cpu_temp\",\n      { type: \"string\", role: \"tooltip\" },\n    ];\n\n    for (let i = 1; i < this.numPoints + 1; i++) {\n      this.cpuTempArray[i] = [null, 0, null];\n    }\n\n    this.maxEntries = 0;\n    this.numEntries = 0;\n    this.oldest = false;\n    this.newest = true;\n    this.markedLeft = false;\n    this.markedRight = false;\n\n    this.id = 0;\n    this.linkId = 0;\n\n    this.allButtonsDisabled = false;\n\n    this.selectedRow = -1;\n    this.pingChartEvents = [\n      {\n        eventName: \"ready\",\n        callback: ({ chartWrapper, google }) => {\n          console.log(\"------------------------------ready\");\n          this.handleChartReadyEvent(chartWrapper);\n        },\n      },\n      {\n        eventName: \"select\",\n        callback: ({ chartWrapper }) => {\n          this.handleChartSelectEvent(chartWrapper);\n        },\n      },\n    ];\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"PingPlotWindow.componentDidMount\");\n    console.log(this.numPoints);\n    this.allButtonsDisabled = true;\n    toSentinel.send(\n      Defs.ipcPingPlotWindowMountEx,\n      this.zoomArray[this.zoomLevel]\n    );\n  }\n\n  componentWillUnmount() {\n    console.log(\"PingPlotWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  getTimeLineData() {\n    return this.timeLineArray;\n  }\n\n  getPingData() {\n    return this.pingArray;\n  }\n \n  getRxRateData() {\n    return this.rxRateArray;\n  }\n \n  getTxRateData() {\n    return this.txRateArray;\n  }\n\n  getRxRatePriData() {\n    return this.rxRatePriArray;\n  }\n \n  getTxRatePriData() {\n    return this.txRatePriArray;\n  }\n   \n  getCpuUtlzData() {\n    return this.cpuUtlzArray;\n  }\n     \n  getCpuTempData() {\n    return this.cpuTempArray;\n  }\n\n  getTitle() {\n    switch (this.zoomLevel) {\n      case ZOOMLEVEL_5MIN:\n        return \"Five Minutes\";\n      case ZOOMLEVEL_10MIN:\n        return \"10 Minutes\";\n      case ZOOMLEVEL_20MIN:\n        return \"20 minutes\";\n      case ZOOMLEVEL_30MIN:\n        return \"30 minutes\";\n      case ZOOMLEVEL_1HOUR:\n        return \"One Hour\";\n      case ZOOMLEVEL_12HOURS:\n        return \"12 Hours\";\n      case ZOOMLEVEL_6HOURS:\n        return \"6 Hours\";\n      case ZOOMLEVEL_1DAY:\n        return \"One Day\";\n      case ZOOMLEVEL_1WEEK:\n        return \"One Week\";\n      case ZOOMLEVEL_30DAYS:\n        return \"30 Days (all)\";\n      default:\n        return \"?\";\n    }\n  }\n\n  getDisabledLeftButton() {\n    return (\n      this.oldest || this.zoomLevel === ZOOMLEVEL_MAX || this.allButtonsDisabled\n    );\n  }\n\n  getDisabledLeftMarkedButton() {\n    return (\n      !this.markedLeft ||\n      this.zoomLevel === ZOOMLEVEL_MAX ||\n      this.allButtonsDisabled\n    );\n  }\n\n  getDisabledRightButtons() {\n    return (\n      this.newest || this.zoomLevel === ZOOMLEVEL_MAX || this.allButtonsDisabled\n    );\n  }\n\n  getDisabledRightMarkedButton() {\n    return (\n      !this.markedRight ||\n      this.zoomLevel === ZOOMLEVEL_MAX ||\n      this.allButtonsDisabled\n    );\n  }\n\n  getDisabledZoomOutButton() {\n    return this.zoomLevel === ZOOMLEVEL_MAX || this.allButtonsDisabled;\n  }\n\n  getDisabledZoomInButton() {\n    return this.zoomLevel === ZOOMLEVEL_MIN || this.allButtonsDisabled;\n  }\n\n  getDay() {\n    const center = Math.floor((this.pingArray.length - 1) / 2) + 1;\n    if (\n      this.pingArray &&\n      this.pingArray.length > 1 &&\n      this.pingArray[center][0]\n    ) {\n      return this.pingArray[center][0].toDateString();\n    }\n    return \"\";\n  }\n\n  getTimeOfDay(date) {\n    const dsa = date.toLocaleString().split(' ');\n    return dsa[1] + \" \" + dsa[2];\n  }\n\n  handlePingPlotData(jo) {\n    if (this.selectedRow >= 0) {\n      this.selectedRow--;\n    }\n\n    if (get_is_debugging()) console.log(\"...handlePingPlotData: \" + JSON.stringify(jo, null, 2));\n\n    this.allButtonsDisabled = false;\n\n    this.maxEntries = jo.maxEntries;\n    this.numEntries = jo.numEntries;\n    this.oldest = jo.oldest;\n    this.newest = jo.newest;\n    this.markedLeft = jo.markedLeft;\n    this.markedRight = jo.markedRight;\n    const ja = jo.entries;\n\n    console.log(\n      \"handlePingPlotData: maxEntries=\" +\n        this.maxEntries +\n        \", numEntries=\" +\n        this.numEntries +\n        \", oldest =\" +\n        this.oldest +\n        \", newest=\" +\n        this.newest +\n        \", markedLeft =\" +\n        this.markedLeft +\n        \", markedRight=\" +\n        this.markedRight +\n        \", addEntries=\" +\n        ja.length\n    );\n\n    if (ja.length === 1) {\n      // real time update.\n      if (this.selectedRow >= 0) this.selectedRow--;\n    }\n\n    this.timeLineArray.splice(1, ja.length);\n    this.pingArray.splice(1, ja.length);\n    this.rxRateArray.splice(1, ja.length);\n    this.txRateArray.splice(1, ja.length);\n    this.rxRatePriArray.splice(1, ja.length);\n    this.txRatePriArray.splice(1, ja.length);\n    this.cpuUtlzArray.splice(1, ja.length);\n    this.cpuTempArray.splice(1, ja.length);\n    for (let i = 0; i < ja.length; i++) {\n      const joe = ja[i];\n      const id = joe.id;\n      const linkId = joe.linkId;\n      const jod = joe.data;\n\n      const date = new Date(jod.timeStamp);\n      const mark = jod.mark;\n\n      // tcMode\n      this.tcMode = jod.flag & Defs.pingFlagTcMode;\n\n      // netrate data\n      const rx_rate_mbits = this.round(jod.rx_rate_bits / 1000000, 2);\n      const tx_rate_mbits = this.round(jod.tx_rate_bits / 1000000, 2);\n      const rx_bw_peak_mbits = this.round(jod.rx_bw_peak_bits / 1000000, 2);\n      const tx_bw_peak_mbits = this.round(jod.tx_bw_peak_bits / 1000000, 2);\n      const rx_bw_quality_mbits = this.round(jod.rx_bw_quality_bits / 1000000, 2);\n      const tx_bw_quality_mbits = this.round(jod.tx_bw_quality_bits / 1000000, 2);\n      const rx_rate_pri_mbits = this.round((jod.rx_rate_dns_bits + jod.rx_rate_rt_bits) / 1000000, 2);\n      const tx_rate_pri_mbits = this.round((jod.tx_rate_dns_bits + jod.tx_rate_rt_bits) / 1000000, 2);\n\n      // timeline\n      let tlStatusStyle = null;\n      let tlTooltip = null;\n      if (mark & Defs.pingMarkDropped) {\n        // red\n        tlStatusStyle = \"point { size: 10; fill-color: #a52714; shape-type: square;  }\";\n        tlTooltip = this.getTimeOfDay(date) + \": dropped\";\n      } else if (mark & Defs.pingMarkSavedRx) {\n        // blue\n        tlStatusStyle = \"point { size: 10; fill-color: #3366cc; shape-type: square;  }\";\n        tlTooltip = this.getTimeOfDay(date) + \": saved down\";\n      } else if (mark & Defs.pingMarkSavedTx) {\n        // blue\n        tlStatusStyle = \"point { size: 10; fill-color: #3366cc; shape-type: square;  }\";\n        tlTooltip = this.getTimeOfDay(date) + \": saved up\";\n      } else {\n        // green\n        tlStatusStyle = \"point { size: 10; fill-color: #109618; shape-type: square;  }\";\n        tlTooltip = this.getTimeOfDay(date) + \": everything is hunky-dorry\";\n      }\n\n      this.timeLineArray.push([\n        date,\n        1,\n        tlStatusStyle,\n        tlTooltip,\n      ]);\n\n      // ping\n      let millis = Number(jod[\"timeMillis\"]);\n\n      //const dropped = jod[\"dropped\"];\n      let dropped = null;\n      let tooltip = null;\n      if (mark & Defs.pingMarkDropped) {\n        millis = this.prevTimeMillis;\n        dropped = \"point { size: 4; fill-color: #a52714; }\";\n        tooltip = this.getTimeOfDay(date) + \": dropped packet\";\n      } else {\n        this.prevTimeMillis = millis;\n        tooltip = this.getTimeOfDay(date) + \": \" + millis + \" ms\";\n      }\n\n      const idLinkId = JSON.stringify({ id, linkId, mark });\n\n      this.pingArray.push([\n        date,\n        millis,\n        dropped,\n        tooltip,\n        idLinkId,\n      ]);\n\n      // netrate\n      const rxTooltip = this.getTimeOfDay(date) + \": \" + rx_rate_mbits + \" mbits, peak capacity \" + rx_bw_peak_mbits + \" mbits, quality capacity \" + rx_bw_quality_mbits + \" mbits\";\n      const txTooltip = this.getTimeOfDay(date) + \": \" + tx_rate_mbits + \" mbits, peak capacity \" + tx_bw_peak_mbits + \" mbits, quality capacity \" + tx_bw_quality_mbits + \" mbits\";\n      const rxPriTooltip = this.getTimeOfDay(date) + \": \" + rx_rate_pri_mbits + \" mbits, peak capacity \" + rx_bw_peak_mbits + \" mbits, quality capacity \" + rx_bw_quality_mbits + \" mbits\";\n      const txPriTooltip = this.getTimeOfDay(date) + \": \" + tx_rate_pri_mbits + \" mbits, peak capacity \" + tx_bw_peak_mbits + \" mbits, quality capacity \" + tx_bw_quality_mbits + \" mbits\";\n\n      this.rxRateArray.push([\n        date,\n        rx_rate_mbits,\n        rxTooltip,\n      ]);\n\n       this.txRateArray.push([\n        date,\n        tx_rate_mbits,\n        txTooltip,\n      ]);\n\n      this.rxRatePriArray.push([\n        date,\n        rx_rate_pri_mbits,\n        rxPriTooltip,\n      ]);\n\n       this.txRatePriArray.push([\n        date,\n        tx_rate_pri_mbits,\n        txPriTooltip,\n      ]);\n\n      // cpu utilization\n      const cpu_utlz = this.round((jod.cpu_utlz_user + jod.cpu_utlz_nice + jod.cpu_utlz_system + jod.cpu_utlz_iowait + jod.cpu_utlz_steal), 2);\n      const cpuUtlzTooltip = this.getTimeOfDay(date) + \": \" + cpu_utlz + \"%\";\n\n      this.cpuUtlzArray.push([\n        date,\n        cpu_utlz,\n        cpuUtlzTooltip,\n      ]);\n\n      // cpu temperature\n      const cpu_temp = jod[\"temp_celsius\"];\n      const cpuTempTooltip = this.getTimeOfDay(date) + \": \" + cpu_temp + \" celsius\";\n      \n      this.cpuTempArray.push([\n        date,\n        cpu_temp,\n        cpuTempTooltip,\n      ]);\n    }\n\n    const nextCount = this.state.count + 1;\n    this.setState({ count: nextCount });\n  }\n\n  handleSentinelStatusOnline() {\n    toSentinel.send(\n      Defs.ipcPingPlotWindowMountEx,\n      this.zoomArray[this.zoomLevel]\n    );\n  }\n\n  doRender() {\n    const nextCount = this.state.count + 1;\n    this.setState({ count: nextCount });\n  }\n\n  handleLeftClick(ev) {\n    console.log(\"handleLeftClick\");\n    this.allButtonsDisabled = true;\n    this.doRender();\n    toSentinel.send(\n      Defs.ipcPingPlotWindowButtonLeftEx,\n      this.zoomArray[this.zoomLevel]\n    );\n  }\n\n  handleLeftMarkedClick(ev) {\n    console.log(\"handleLeftMarkedClick\");\n    this.allButtonsDisabled = true;\n    this.doRender();\n    toSentinel.send(\n      Defs.ipcPingPlotWindowButtonLeftMarkedEx,\n      this.zoomArray[this.zoomLevel]\n    );\n  }\n\n  handleRightClick(ev) {\n    console.log(\"handleRightClick\");\n    this.allButtonsDisabled = true;\n    this.doRender();\n    toSentinel.send(\n      Defs.ipcPingPlotWindowButtonRightEx,\n      this.zoomArray[this.zoomLevel]\n    );\n  }\n\n  handleRightMarkedClick(ev) {\n    console.log(\"handleRightMarkedClick\");\n    this.allButtonsDisabled = true;\n    this.doRender();\n    toSentinel.send(\n      Defs.ipcPingPlotWindowButtonRightMarkedEx,\n      this.zoomArray[this.zoomLevel]\n    );\n  }\n\n  handleHomeClick(ev) {\n    console.log(\"handleHomeClick\");\n    this.allButtonsDisabled = true;\n    this.doRender();\n    toSentinel.send(\n      Defs.ipcPingPlotWindowButtonHomeEx,\n      this.zoomArray[this.zoomLevel]\n    );\n  }\n\n  handlZoomInClick(ev) {\n    console.log(\"handleZoomInClick\");\n    this.allButtonsDisabled = true;\n    this.doRender();\n    if (this.zoomLevel > ZOOMLEVEL_MIN) {\n      this.zoomLevelPrev = this.zoomLevel;\n      this.zoomLevel--;\n      this.numPoints = this.zoomArray[this.zoomLevel].numPoints;\n      this.numPointsSamples =\n        this.zoomArray[this.zoomLevel].numPoints *\n        this.zoomArray[this.zoomLevel].numSamples;\n\n      this.timeLineArray.splice(1, this.timeLineArray.length - 1);\n      for (let i = 1; i < this.numPoints + 1; i++) {\n        this.timeLineArray[i] = [null, 0, null, null];\n      }\n\n      this.pingArray.splice(1, this.pingArray.length - 1);\n      for (let i = 1; i < this.numPoints + 1; i++) {\n        this.pingArray[i] = [null, 0, null, null, null];\n      }\n    \n      this.rxRateArray.splice(1, this.rxRateArray.length - 1);\n      for (let i = 1; i < this.numPoints + 1; i++) {\n        this.rxRateArray[i] = [null, 0, null];\n      }\n\n      this.txRateArray.splice(1, this.txRateArray.length - 1);\n      for (let i = 1; i < this.numPoints + 1; i++) {\n        this.txRateArray[i] = [null, 0, null];\n      }\n      \n      this.cpuUtlzArray.splice(1, this.cpuUtlzArray.length - 1);\n      for (let i = 1; i < this.numPoints + 1; i++) {\n        this.cpuUtlzArray[i] = [null, 0, null];\n      }\n            \n      this.cpuTempArray.splice(1, this.cpuTempArray.length - 1);\n      for (let i = 1; i < this.numPoints + 1; i++) {\n        this.cpuTempArray[i] = [null, 0, null];\n      }\n\n      const moveOffset = this.computeMoveOffset();\n\n      toSentinel.send(Defs.ipcPingPlotWindowButtonZoomChangeEx, {\n        zoom: this.zoomArray[this.zoomLevel],\n        moveOffset,\n      });\n    }\n  }\n\n  handlZoomOutClick(ev) {\n    console.log(\"handleZoomOutClick\");\n    this.allButtonsDisabled = true;\n    if (this.zoomLevel < ZOOMLEVEL_MAX) {\n      this.zoomLevelPrev = this.zoomLevel;\n      this.zoomLevel++;\n      this.numPoints = this.zoomArray[this.zoomLevel].numPoints;\n      this.numPointsSamples =\n        this.zoomArray[this.zoomLevel].numPoints *\n        this.zoomArray[this.zoomLevel].numSamples;\n\n      this.timeLineArray.splice(1, this.timeLineArray.length - 1);\n      for (let i = 1; i < this.numPoints + 1; i++) {\n        this.timeLineArray[i] = [null, 0, null, null];\n      }\n\n      this.pingArray.splice(1, this.pingArray.length - 1);\n      for (let i = 1; i < this.numPoints + 1; i++) {\n        this.pingArray[i] = [null, 0, null, null, null];\n      }\n      \n      this.rxRateArray.splice(1, this.rxRateArray.length - 1);\n      for (let i = 1; i < this.numPoints + 1; i++) {\n        this.rxRateArray[i] = [null, 0, null];\n      }\n       \n      this.txRateArray.splice(1, this.txRateArray.length - 1);\n      for (let i = 1; i < this.numPoints + 1; i++) {\n        this.txRateArray[i] = [null, 0, null];\n      }\n   \n      this.cpuUtlzArray.splice(1, this.cpuUtlzArray.length - 1);\n      for (let i = 1; i < this.numPoints + 1; i++) {\n        this.cpuUtlzArray[i] = [null, 0, null];\n      }\n         \n      this.cpuTempArray.splice(1, this.cpuTempArray.length - 1);\n      for (let i = 1; i < this.numPoints + 1; i++) {\n        this.cpuTempArray[i] = [null, 0, null];\n      }\n\n      const moveOffset = this.computeMoveOffset();\n\n      toSentinel.send(Defs.ipcPingPlotWindowButtonZoomChangeEx, {\n        zoom: this.zoomArray[this.zoomLevel],\n        moveOffset,\n      });\n    }\n    this.doRender();\n  }\n\n  handleChartReadyEvent(chartWrapper) {\n    console.log(\"pingPlotWindow.handleChartReadyEvent\");\n    if (this.selectedRow !== -1) {\n      chartWrapper\n        .getChart()\n        .setSelection([{ row: this.selectedRow, column: 1 }]);\n      console.log(\n        \"pingPlotWindow.handleChartReadyEvent: set selected row = \" +\n          this.selectedRow\n      );\n    }\n  }\n\n  handleChartSelectEvent(chartWrapper) {\n    const selection = chartWrapper.getChart().getSelection();\n    if (selection && selection[0]) {\n      this.selectedRow = selection[0].row;\n      this.doRender();\n    } else this.selectedRow = -1;\n    console.log(\n      \"pingPlotWindow.handleChartSelectEvent: selected row = \" +\n        this.selectedRow\n    );\n  }\n\n  computeMoveOffset() {\n    let moveOffset = 0;\n    if (this.selectedRow > 0) {\n      const numPoints = this.zoomArray[this.zoomLevel].numPoints;\n      if (numPoints === 720) {\n        const centerPos = this.numPoints / 2;\n        // NB: > 0, move right. < 0 move left.\n        moveOffset = this.selectedRow - centerPos;\n        moveOffset = moveOffset * this.zoomArray[this.zoomLevelPrev].numSamples;\n      } else {\n        moveOffset = this.selectedRow - numPoints;\n      }\n\n      console.log(\n        \"pingPlotWindow.computeMoveOffset: selectedRow = \" +\n          this.selectedRow +\n          \", numPoints = \" +\n          this.numPoints +\n          \", offset = \" +\n          moveOffset\n      );\n      this.selectedRow = -1;\n    }\n    return moveOffset;\n  }\n\n  render() {\n    console.log(\"pingPlotWindow.render called\");\n\n    const tcMode = this.tcMode;\n    const showSpinner =\n      this.allButtonsDisabled && this.zoomLevel >= ZOOMLEVEL_1DAY;\n    const timeLineHeader = this.getTitle();\n    const pingHeader = \"Latency Milliseconds\";\n\n    const throughputHeader = \"Throughput Mbits\";\n    const throughputHeaderPri = \"Throughput Mbits - High Priority\";\n    const cpuUtlzHeader = \"CPU Utilization\";\n    const cpuTempHeader = \"CPU Temperature\";\n\n    //               vAxis: { title: \"latency (milliseconds)\" },\n    //hAxis: {baseline: {color: 'transparent'}, gridlines: {color: 'transparent'}},\n\n    return (\n      <div>\n        <Navigator />\n        {showSpinner && <SpinnerPopup />}\n        <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"80%\", fontWeight: \"bold\" }}>{timeLineHeader}</p>\n        </div>\n        <div style={{ marginLeft: -10, marginTop: -20, marginBottom: 0 }}>\n          <Chart\n            width={750}\n            height={80}\n            chartType=\"LineChart\"\n            data={this.getTimeLineData()}\n            chartEvents={this.chartEvents}\n            options={{\n              chartArea: {left: 100,top: 20,width:640,height: 40},\n              pointShape: \"square\",\n              pointSize: 20,\n              legend: { position: \"none\" },\n              titleTextStyle: { bold: false },\n              hAxis: {\n                gridlines: {color: 'transparent'},\n              },\n              vAxis: {gridlines: {color: 'transparent'}},\n  \n            }}\n          />\n        </div>\n        <div style={{ marginLeft: 0, marginTop: 20, marginBottom: 40 }}>\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <Tooltip title=\"scroll left\">\n                    <div>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        size=\"small\"\n                        disabled={this.getDisabledLeftButton()}\n                        style={{ marginLeft: 84 }}\n                        /*                       style={{\n                        width: \"130px\",\n                        color: \"#0000b0\",\n                        visibility: this.getButtonVisibility()\n                      }} */\n                        onClick={(ev) => this.handleLeftClick(ev)}\n                      >\n                        &lt;\n                      </Button>\n                    </div>\n                  </Tooltip>\n                </td>\n                <td>\n                  <Tooltip title=\"find previous dropped or saved sample\">\n                    <div>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        size=\"small\"\n                        disabled={this.getDisabledLeftMarkedButton()}\n                        style={{ marginLeft: 5, color: \"#dc3545\" }}\n                        /*                       style={{\n                        width: \"130px\",\n                        color: \"#0000b0\",\n                        visibility: this.getButtonVisibility()\n                      }} */\n                        onClick={(ev) => this.handleLeftMarkedClick(ev)}\n                      >\n                        &lt;\n                      </Button>\n                    </div>\n                  </Tooltip>\n                </td>\n                <td>\n                  <div\n                    style={{ width: 140, marginLeft: 90, textAlign: \"center\" }}\n                  >\n                    <p>{this.getDay()}</p>\n                  </div>\n                </td>\n                <td>\n                  <Tooltip title=\"find next dropped or saved sample\">\n                    <div>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        size=\"small\"\n                        disabled={this.getDisabledRightMarkedButton()}\n                        style={{ marginLeft: 64, color: \"#dc3545\" }}\n                        /*                       style={{\n                        width: \"130px\",\n                        color: \"#0000b0\",\n                        visibility: this.getButtonVisibility()\n                      }} */\n                        onClick={(ev) => this.handleRightMarkedClick(ev)}\n                      >\n                        &gt;\n                      </Button>\n                    </div>\n                  </Tooltip>\n                </td>\n                <td>\n                  <Tooltip title=\"scroll right\">\n                    <div>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        size=\"small\"\n                        disabled={this.getDisabledRightButtons()}\n                        style={{ marginLeft: 5 }}\n                        /*                       style={{\n                        width: \"130px\",\n                        color: \"#0000b0\",\n                        visibility: this.getButtonVisibility()\n                      }} */\n                        onClick={(ev) => this.handleRightClick(ev)}\n                      >\n                        &gt;\n                      </Button>\n                    </div>\n                  </Tooltip>\n                </td>\n                <td>\n                  <Tooltip title=\"scroll to most recent\">\n                    <div>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        size=\"small\"\n                        disabled={this.getDisabledRightButtons()}\n                        style={{ marginLeft: 5 }}\n                        /*                       style={{\n                        width: \"130px\",\n                        color: \"#0000b0\",\n                        visibility: this.getButtonVisibility()\n                      }} */\n                        onClick={(ev) => this.handleHomeClick(ev)}\n                      >\n                        &gt;&gt;\n                      </Button>\n                    </div>\n                  </Tooltip>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <Tooltip title=\"less detail\">\n                    <div>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        size=\"small\"\n                        disabled={this.getDisabledZoomOutButton()}\n                        style={{ marginTop: 10, marginLeft: 84 }}\n                        /*                       style={{\n                        width: \"130px\",\n                        color: \"#0000b0\",\n                        visibility: this.getButtonVisibility()\n                      }} */\n                        onClick={(ev) => this.handlZoomOutClick(ev)}\n                      >\n                        Zoom -\n                      </Button>\n                    </div>\n                  </Tooltip>\n                </td>\n                <td>\n                  <Tooltip title=\"more detail\">\n                    <div>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        size=\"small\"\n                        disabled={this.getDisabledZoomInButton()}\n                        style={{ marginTop: 10, marginLeft: 5 }}\n                        /*                       style={{\n                        width: \"130px\",\n                        color: \"#0000b0\",\n                        visibility: this.getButtonVisibility()\n                      }} */\n                        onClick={(ev) => this.handlZoomInClick(ev)}\n                      >\n                        Zoom +\n                      </Button>\n                    </div>\n                  </Tooltip>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div style={{ marginLeft: 20, marginTop: -20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"80%\", fontWeight: \"bold\" }}>{pingHeader}</p>\n        </div>\n        {/*         <div style={{ display: \"flex\", maxWidth: 800 }}> */}\n        <div style={{ marginLeft: 0, marginTop: -18, marginBottom: 0 }}>\n          <Chart\n            width={850}\n            height={140}\n            chartType=\"LineChart\"\n            data={this.getPingData()}\n            chartEvents={this.chartEvents}\n            options={{\n              chartArea: {left: 86,top: 20,width:650,height: 100},\n              pointSize: 2,\n              hAxis: { textPosition: \"none\" },\n              legend: { position: \"none\" },\n              titleTextStyle: { bold: false },\n            }}\n          />\n        </div>\n        <div style={{ marginLeft: 20, marginTop: 0, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"80%\", fontWeight: \"bold\" }}>{throughputHeader}</p>\n        </div>\n        <div style={{ marginLeft: 0, marginTop: -18, marginBottom: 0 }}>\n          <Chart\n            width={850}\n            height={140}\n            chartType=\"LineChart\"\n            data={this.getTxRateData()}\n            chartEvents={this.chartEvents}\n            options={{\n              chartArea: {left: 90,top: 20,width:650,height: 100},\n              pointSize: 2,\n              hAxis: { textPosition: \"none\" },\n              vAxis: { title: \"up\", titleTextStyle: {bold: true} },\n              legend: { position: \"none\" },\n              titleTextStyle: { bold: false },\n            }}\n          />\n        </div>\n        <div style={{ marginLeft: 0, marginTop: -16, marginBottom:  0 }}>\n          <Chart\n            width={850}\n            height={140}\n            chartType=\"LineChart\"\n            data={this.getRxRateData()}\n            chartEvents={this.chartEvents}\n            options={{\n              chartArea: {left: 90,top: 20,width:650,height: 100},\n              pointSize: 2,\n              hAxis: { textPosition: \"none\" },\n              vAxis: { title: \"down\", direction: -1, titleTextStyle: {bold: true} },\n              legend: { position: \"none\" },\n              titleTextStyle: { bold: false },\n            }}\n          />\n        </div>\n        {this.tcMode && (\n          <div style={{ marginLeft: 20, marginTop: 0, textAlign: \"left\" }}>\n        \n            <p style={{ fontSize: \"80%\", fontWeight: \"bold\" }}>{throughputHeaderPri}</p>\n          </div>\n        )}\n        {this.tcMode && (\n          <div style={{ marginLeft: 0, marginTop: -18, marginBottom: 0 }}>\n            <Chart\n              width={850}\n              height={140}\n              chartType=\"LineChart\"\n              data={this.getTxRatePriData()}\n              chartEvents={this.chartEvents}\n              options={{\n                chartArea: {left: 90,top: 20,width:650,height: 100},\n                pointSize: 2,\n                hAxis: { textPosition: \"none\" },\n                vAxis: { title: \"up\", titleTextStyle: {bold: true} },\n                legend: { position: \"none\" },\n                titleTextStyle: { bold: false },\n              }}\n            />\n          </div>\n        )}\n        {this.tcMode && (\n          <div style={{ marginLeft: 0, marginTop: -16, marginBottom: 0 }}>\n            <Chart\n              width={850}\n              height={140}\n              chartType=\"LineChart\"\n              data={this.getRxRatePriData()}\n              chartEvents={this.chartEvents}\n              options={{\n                chartArea: {left: 90,top: 20,width:650,height: 100},\n                pointSize: 2,\n                hAxis: { textPosition: \"none\" },\n                vAxis: { title: \"down\", direction: -1, titleTextStyle: {bold: true} },\n                legend: { position: \"none\" },\n                titleTextStyle: { bold: false },\n              }}\n            />\n          </div>\n        )}\n        <div style={{ marginLeft: 20, marginTop: 0, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"80%\", fontWeight: \"bold\" }}>{cpuUtlzHeader}</p>\n        </div>\n        <div style={{ marginLeft: 0, marginTop: -18, marginBottom: 0 }}>\n          <Chart\n            width={850}\n            height={140}\n            chartType=\"LineChart\"\n            data={this.getCpuUtlzData()}\n            chartEvents={this.chartEvents}\n            options={{\n              chartArea: {left: 90,top: 20,width:650,height: 100},\n              pointSize: 2,\n              hAxis: { textPosition: \"none\" },\n              legend: { position: \"none\" },\n              titleTextStyle: { bold: false },\n            }}\n          />\n        </div>\n        <div style={{ marginLeft: 20, marginTop: 0, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"80%\", fontWeight: \"bold\" }}>{cpuTempHeader}</p>\n        </div>\n        <div style={{ marginLeft: 0, marginTop: -18, marginBottom: 0 }}>\n          <Chart\n            width={850}\n            height={140}\n            chartType=\"LineChart\"\n            data={this.getCpuTempData()}\n            chartEvents={this.chartEvents}\n            options={{\n              chartArea: {left: 90,top: 20,width:650,height: 100},\n              pointSize: 2,\n              hAxis: { textPosition: \"none\" },\n              legend: { position: \"none\" },\n              titleTextStyle: { bold: false },\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  round(value, precision) {\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n  }\n}\n\nPingPlotWindow.mounted = false;\nPingPlotWindow.selectedRow = -1;\n\nconst updatePingPlotData = (event, data) => {\n  if (app) app.handlePingPlotData(data);\n};\n\nconst handleSentinelOnLineStatus = (event, data) => {\n  const { sentinelStatus } = data;\n\n  if (sentinelStatus === Defs.sentinelStatusOnline) {\n    if (app) app.handleSentinelStatusOnline();\n  }\n};\n\neventManager.on(Defs.ipcPingPlotData, updatePingPlotData);\n\neventManager.on(Defs.ipcSentinelOnlineStatus, handleSentinelOnLineStatus);\n\nexport default PingPlotWindow;\n","import React from \"react\";\n\n//import Defs from \"iipzy-shared/src/defs\";\n\nimport Navigator from \"./navigator\";\n\n//let app = null;\n\nclass SentinelInUseWindow extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"------SentinelInUseWindow constructor\");\n\n    //app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"SentinelInUseWindow componentDidMount\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"SentinelInUseWindow componentWillUnmount\");\n  }\n\n  render() {\n    console.log(\"SentinelInUseWindow render\");\n\n    return (\n      <div>\n        <Navigator />\n        <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"140%\" }}>Another Client is using Sentinel</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SentinelInUseWindow;\n","import React from \"react\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\n\nimport Navigator from \"./navigator\";\n\nlet app = null;\n\nclass SentinelOnlineCheckWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"SentinelOnlineCheckWindow.constructor\");\n\n    app = this;\n\n    this.state = { count: 0 };\n  }\n\n  componentDidMount() {\n    console.log(\"SentinelOnlineCheckWindow.componentDidMount\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"SentinelOnlineCheckWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  doRender() {\n    const count = this.state.count + 1;\n    this.setState({ count: count });\n  }\n\n  render() {\n    console.log(\"SentinelOnlineCheckWindow.render\");\n\n    return (\n      <div>\n        <Navigator />\n        <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"140%\" }}>Connecting to iipzy Sentinel</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst handleSentinelOnLineStatus = (event, data) => {\n  if (app) app.doRender();\n};\n\neventManager.on(Defs.ipcSentinelOnlineStatus, handleSentinelOnLineStatus);\n\nexport default SentinelOnlineCheckWindow;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nimport CloseButton from \"./closeButton\";\nimport Input from \"./input\";\nimport Navigator from \"./navigator\";\n\nclass PasswordPopup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"PasswordPopup.constructor\");\n\n    this.state = { password: \"\", showPassword: false };\n  }\n\n  getPassword() {\n    return this.state.password;\n  }\n\n  getShowPasswordChecked() {\n    return this.state.showPassword;\n  }\n\n  handleChange(ev) {\n    const name = ev.target.name;\n    const value = ev.target.value;\n\n    console.log(\"PasswordPopup.name=\" + name + \", value=\" + this.state[name]);\n\n    this.setState({ [name]: value });\n  }\n\n  handleCloseClick(ev) {\n    console.log(\"PasswordPopup.handleCloseClick\");\n\n    this.props.onSubmit(\"\");\n    this.props.closePopup();\n    this.setState({ password: \"\" });\n  }\n\n  handleShowPasswordClick(ev) {\n    this.setState({showPassword: ev.target.checked});\n  }\n\n  handleSubmitClick(ev) {\n    // console.log(\"...Popup handleSubmitClick\");\n\n    this.props.onSubmit(this.state.password);\n    this.props.closePopup();\n    this.setState({ password: \"\" });\n  }\n\n  isValidInput() {\n    return !!this.state.password;\n  }\n\n  render() {\n    console.log(\"PasswordPopup render\");\n\n    return (\n      <div>\n        <Navigator />\n        <div className=\"popup_over\">\n          <div className=\"popup_inner_tall\">\n            <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n              <p style={{ fontSize: \"140%\" }}>Enter Password</p>\n            </div>\n            <Input\n              type={ this.state.showPassword ? \"input\" : \"password\" }\n              autofocus={true}\n              disabled={false}\n              name=\"password\"\n              value={this.getPassword()}\n              label=\"Password\"\n              onChange={(ev) => this.handleChange(ev)}\n              error=\"\"\n            />\n            <div style={{ marginLeft: 40, marginTop: -10, textAlign: \"left\" }}>\n              <input\n                type=\"checkbox\"\n                name=\"action-log-level-detailed\"\n                checked={this.getShowPasswordChecked()}\n                onChange={(ev) =>\n                  this.handleShowPasswordClick(ev)\n                }\n              />\n              &nbsp;Show Password&nbsp;&nbsp;\n            </div>\n            <h1>{this.props.text}</h1>\n            <div style={{ textAlign: \"center\", marginTop: 16 }}>\n              <Button\n                type=\"button\"\n                variant=\"contained\"\n                disabled={!this.isValidInput()}\n                style={{\n                  width: \"130px\",\n                  color: \"#0000b0\",\n                }}\n                /*  autoFocus */\n                onClick={(ev) => this.handleSubmitClick(ev)}\n              >\n                Submit\n              </Button>\n            </div>\n\n            <CloseButton onClick={(ev) => this.handleCloseClick(ev)} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PasswordPopup;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { FilePicker } from \"react-file-picker\";\nimport FormData from \"form-data\";\n\nimport Defs from \"iipzy-shared/src/defs\";\nimport eventManager from \"../ipc/eventManager\";\nimport { get_is_debugging, set_is_debugging } from \"iipzy-shared/src/utils/globals\";\n\nimport http from \"../ipc/httpService\";\nimport settings from \"../services/settings\";\n\nimport cookie from \"../utils/cookie\";\nimport sentinelInfo from \"../utils/sentinelInfo\";\n\nimport InfoPopup from \"./infoPopup\";\nimport Navigator from \"./navigator\";\nimport PasswordPopup from \"./passwordPopup\";\nimport SpinnerPopup from \"./spinnerPopup\";\n\nlet app = null;\n\nclass SettingsWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"SettingsWindow.constructor\");\n    this.state = { count: 0 };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"SettingsWindow.componentDidMount\");\n    getSettings();\n  }\n\n  componentWillUnmount() {\n    console.log(\"SettingsWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  getClientName() {\n    return SettingsWindow.settings.clientName;\n  }\n\n  getDownloadSeconds() {\n    //?? TODO - validate is integer between 1..9999\n    //const val = cookie.get(\"downloadSeconds\");\n    return SettingsWindow.downloadSeconds;\n  }\n\n  getNominalLatencySeconds() {\n    //?? TODO - validate is integer between 1..9999\n    // const val = cookie.get(\"nominalLatencySeconds\");\n    // return val ? val : 10;\n    return SettingsWindow.nominalLatencySeconds;\n  }\n\n  getServiceAddress() {\n    return SettingsWindow.settings.serviceAddress;\n  }\n\n  getLogLevelDetailedChecked() {\n    return SettingsWindow.settings.logLevel === \"verbose\";\n  }\n  \n  getConsoleLogLevelDetailedChecked() {\n    return get_is_debugging();\n  }\n\n  getRemoteSSHPortNumber() {\n      return SettingsWindow.remoteSSHPortNumber;\n  }\n\n  getRemoteSSHTitle() {\n    return SettingsWindow.settings.remoteSSHState ? \"Disable SSH\" : \"Enable SSH\";\n  }\n\n  getDisableRemoteSSHPortNumber() {\n    return SettingsWindow.settings.remoteSSHState;\n  }\n\n  getSimulateDroppedPacketsChecked() {\n    return SettingsWindow.settings.simulateDroppedPackets;\n  }\n\n  getSimulateSavesChecked() {\n    return SettingsWindow.settings.simulateSaves;\n  }\n\n  getSimulateOfflineChecked() {\n    return SettingsWindow.settings.simulateOffline;\n  }\n\n  getUploadSeconds() {\n    //?? TODO - validate is integer between 1..9999\n    // const val = cookie.get(\"uploadSeconds\");\n    // return val ? val : 10;\n    return SettingsWindow.uploadSeconds;\n  }\n\n  /*\n  getWifiChecked() {\n    return (\n      SettingsWindow.settings &&\n      SettingsWindow.settings.wifiStatus &&\n      !!SettingsWindow.settings.wifiStatus.network\n    );\n  }\n\n  getNetwork() {\n    return (\n      SettingsWindow.settings &&\n      SettingsWindow.settings.wifiStatus &&\n      SettingsWindow.settings.wifiStatus.network\n    );\n  }\n  */\n\n  getInfoMessage() {\n    return SettingsWindow.infoMessage;\n  }\n\n  handleChange(ev) {\n    const name = ev.target.name;\n    const value = ev.target.value;\n\n    console.log(\"SettingsWindow.name=\" + name + \", value=\" + this.state[name]);\n\n    switch (name) {\n      case \"client-name\": {\n        SettingsWindow.settings.clientName = value;\n        break;\n      }\n      case \"download-seconds\": {\n        //?? TODO - validate is integer between 1..9999\n        SettingsWindow.downloadSeconds = value;\n        break;\n      }\n      case \"nominal-latency-seconds\": {\n        //?? TODO - validate is integer between 1..9999\n        SettingsWindow.nominalLatencySeconds = value;\n        break;\n      }\n      case \"port-number\": {\n        //?? TODO - validate is integer between 1..9999\n        SettingsWindow.remoteSSHPortNumber = value;\n        break;\n      }\n      case \"service-address\": {\n        SettingsWindow.settingsWindow.serviceAddress = value;\n        break;\n      }\n      case \"upload-seconds\": {\n        //?? TODO - validate is integer between 1..9999\n        SettingsWindow.uploadSeconds = value;\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n\n    this.setState({ [name]: value });\n  }\n\n  handleLogLevelDetailedClick(ev) {\n    console.log(\n      \"SettingsWindow.handleLogLevelDetailedClick: \" + ev.target.checked\n    );\n    SettingsWindow.settings.logLevel = ev.target.checked ? \"verbose\" : \"info\";\n    SettingsWindow.inProgress = true;\n    this.doRender();\n    setSettings(\"logLevel\", SettingsWindow.settings.logLevel);\n  }\n\n  handleConsoleLogLevelDetailedClick(ev) {\n    console.log(\n      \"SettingsWindow.handleConsoleLogLevelDetailedClick: \" + ev.target.checked\n    );\n    set_is_debugging(ev.target.checked);\n    //SettingsWindow.inProgress = true;\n    this.doRender();\n  }\n\n  handleRebootClick(ev) {\n    console.log(\"SettingsWindow handleRebootClick\");\n    SettingsWindow.inProgress = true;\n    this.doRender();\n    setSettings(\"rebootAppliance\", true);\n  }\n  \n  handleShutdownClick(ev) {\n    console.log(\"SettingsWindow handleShutdownClick\");\n    SettingsWindow.inProgress = true;\n    this.doRender();\n    setSettings(\"shutdownAppliance\", true);\n  }\n\n  async handleRemoteSSHClick() {\n    console.log(\"SettingsWindow.handleRemoteSSHClick\");\n    SettingsWindow.inProgress = true;\n    this.doRender();\n    if (!SettingsWindow.settings.remoteSSHState) {\n      // enabling.\n      // get password\n      SettingsWindow.showRemoteSSHPasswordPopup = true;\n    } else {\n      // disabling.\n      const { data } = await setSettings(\"remoteSSHState\", { state: false });\n      getSettings();\n      SettingsWindow.inProgress = false;\n      this.doRender();\n    }\n  }\n\n  async handleRemoteSSHPasswordPopupClick(password) {\n    console.log(\"settingsWindow.handleRemoteSSHPasswordPopupClick: password = \" + password);\n    if (password) {\n      this.doRender();\n      const { data } = await setSettings(\"remoteSSHState\", { state: true, password, port:  SettingsWindow.remoteSSHPortNumber});\n      console.log(\"SettingsWindow.handleRemoteSSHClick: data = \" + JSON.stringify(data)) \n      if (data && data.message) {\n        SettingsWindow.infoMessage = data.message;\n      } else {\n        SettingsWindow.infoMessage = \"(Error) failed\";\n      }\n      SettingsWindow.showInfoPopup = true;\n    } else {\n      // user cancelled.\n      SettingsWindow.inProgress = false;\n    }\n    //SettingsWindow.inProgress = false;\n    this.doRender();\n  }\n  \n  hideRemoteSSHPasswordPopup() {\n    SettingsWindow.showRemoteSSHPasswordPopup = false;\n    //SettingsWindow.buttonsEnabled = true;\n    //SettingsWindow.inProgress = false;\n    //getSettings();\n  }\n\n  handleSendLogsClick(ev) {\n    console.log(\"SettingsWindow handleSendLogsClick\");\n    SettingsWindow.inProgress = true;\n    this.doRender();\n    setSettings(\"sendLogs\", true);\n  }\n\n  handleSetClientNameClick(ev) {\n    console.log(\"SettingsWindow handleSetClientNameClick\");\n    SettingsWindow.inProgress = true;\n    this.doRender();\n    setSettings(\"clientName\", SettingsWindow.settings.clientName);\n  }\n\n  handleSetServiceAddressClick(ev) {\n    console.log(\"SettingsWindow handleSetServiceAddressClick\");\n    SettingsWindow.inProgress = true;\n    this.doRender();\n    setSettings(\"serviceAddress\", SettingsWindow.settings.serviceAddress);\n  }\n\n  handleSimulateDroppedPacketsClick(ev) {\n    console.log(\n      \"SettingsWindow.handleSimulateDroppedPacketsClick: \" + ev.target.checked\n    );\n    SettingsWindow.settings.simulateDroppedPackets = ev.target.checked;\n    SettingsWindow.inProgress = true;\n    this.doRender();\n    setSettings(\n      \"simulateDroppedPackets\",\n      SettingsWindow.settings.simulateDroppedPackets\n    );\n  }\n\n  handleSimulateSavesClick(ev) {\n    console.log(\n      \"SettingsWindow.handleSimulateSavesClick: \" + ev.target.checked\n    );\n    SettingsWindow.settings.simulateSaves = ev.target.checked;\n    SettingsWindow.inProgress = true;\n    this.doRender();\n    setSettings(\n      \"simulateSaves\",\n      SettingsWindow.settings.simulateSaves\n    );\n  }\n\n  handleSimulateOfflineClick(ev) {\n    console.log(\n      \"SettingsWindow.handleSimulateOfflineClick: \" + ev.target.checked\n    );\n    SettingsWindow.settings.simulateOffLine = ev.target.checked;\n    SettingsWindow.inProgress = true;\n    this.doRender();\n    setSettings(\"simulateOffLine\", SettingsWindow.settings.simulateOffLine);\n  }\n\n  /*\n  handleWifiClick(ev) {\n    console.log(\"SettingsWindow.handleWifiClick: \" + ev.target.checked);\n    joinLeaveWifi(ev.target.checked);\n  }\n  */\n\n  /*\n  handlePasswordClick(ev) {\n    console.log(\"SettingsWindow.handleNetworkClick\");\n    SettingsWindow.showRemoteSSHPasswordPopup = true;\n    SettingsWindow.inProgress = true;\n    this.doRender();\n  }\n  */\n\n  handleInfoPopupClick() {\n    console.log(\"SettingsWindow.handleInfoPopupClick\");\n  }\n\n  hideResponsePopup() {\n    SettingsWindow.showInfoPopup = false;\n    SettingsWindow.buttonsEnabled = true;\n    SettingsWindow.inProgress = false;\n    getSettings();\n    this.doRender();\n  }\n\n  handleRestorePingChartDataClick(ev) {\n    console.log(\"SettingsWindow.handleRestorePingChartDataClick\");\n    restoreFile(\"pingChartDataRestore\");\n  }\n\n  handleRestoreSpeedTestDataClick(ev) {\n    console.log(\"SettingsWindow.handleRestoreSpeedTestDataClick\");\n    restoreFile(\"speedTestDataRestore\");\n  }\n\n  handleUploadPingChartDataClick(file) {\n    console.log(\"SettingsWindow.handleUploadPingChartDataClick\");\n    uploadFile(\"uploadpingpchartdata\", file);\n  }\n\n  handleUploadPingChartDataError(errMsg) {\n    console.log(\n      \"(Error) SettingsWindow.handleUploadPingChartDataError: errMsg = \" +\n        errMsg\n    );\n  }\n\n  handleUploadSpeedTestDataClick(file) {\n    console.log(\"SettingsWindow.handleUploadSpeedTestDataClick\");\n    uploadFile(\"uploadspeedtestdata\", file);\n  }\n\n  handleUploadSpeedTestDataError(errMsg) {\n    console.log(\n      \"(Error) SettingsWindow.handleUploadSpeedTestDataError: errMsg = \" +\n        errMsg\n    );\n  }\n\n  handleSaveSpeedTestSettingsClick(ev) {\n    cookie.set(\"downloadSeconds\", SettingsWindow.downloadSeconds);\n    cookie.set(\"nominalLatencySeconds\", SettingsWindow.nominalLatencySeconds);\n    cookie.set(\"uploadSeconds\", SettingsWindow.uploadSeconds);\n  }\n\n  doRender() {\n    console.log(\"SettingsWindow.doRender\");\n    this.setState({ count: this.state.count + 1 });\n  }\n\n  render() {\n    console.log(\"SettingsWindow.render\");\n\n    if (!SettingsWindow.settings) return <div></div>;\n\n    const isLocalClient = SettingsWindow.isLocalClient;\n\n    const disabledWhileUpdating = SettingsWindow.inProgress;\n\n    const restorePingChartDataReady =\n      SettingsWindow.settings.pingChartDataRestore;\n    const restoreSpeedTestDataReady =\n      SettingsWindow.settings.speedTestDataRestore;\n    const sentinelIPAddress = SettingsWindow.sentinelIPAddress;\n    const sentinelProtocol = SettingsWindow.sentinelProtocol;\n    const showInfoPopup = SettingsWindow.showInfoPopup;\n\n    const showSpinner = SettingsWindow.inProgress;\n    const showRemoteSSHPasswordPopup = SettingsWindow.showRemoteSSHPasswordPopup;\n    const remoteSSHPortNumberEmpty = !SettingsWindow.remoteSSHPortNumber || SettingsWindow.remoteSSHPortNumber === \"\";\n\n    const settings_ = SettingsWindow.settings;\n\n    return (\n      <div>\n        <Navigator />\n        <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"140%\" }}>Sentinel Settings</p>\n        </div>\n        {showSpinner && <SpinnerPopup />}\n        {showRemoteSSHPasswordPopup && (\n          <PasswordPopup\n            onSubmit={(ev) => this.handleRemoteSSHPasswordPopupClick(ev)}\n            closePopup={this.hideRemoteSSHPasswordPopup.bind(this)}\n          />\n        )}\n        {showInfoPopup && (\n          <InfoPopup\n            getInfoMessage={() => this.getInfoMessage()}\n            onSubmit={(ev) => this.handleInfoPopupClick(ev)}\n            closePopup={this.hideResponsePopup.bind(this)}\n          />\n        )}\n        {!showInfoPopup && (\n          <div style={{ marginLeft: \"20px\" }}>\n            <table align=\"left\">\n              <tbody>\n                {/*                 <tr>\n                  <td>&nbsp;</td>\n                </tr> */}\n                <tr>\n                  <table align=\"left\">\n                    <tbody>\n                      <tr>\n                        <table align=\"left\">\n                          <tbody>\n                            <tr>\n                              <td>\n                                <label htmlFor=\"client-name\">\n                                  Name:&nbsp;&nbsp;\n                                </label>\n                              </td>\n                              <td>\n                                <input\n                                  autoFocus={false}\n                                  disabled={false}\n                                  value={this.getClientName()}\n                                  onChange={(ev) => this.handleChange(ev)}\n                                  id=\"client-name\"\n                                  name=\"client-name\"\n                                  type=\"text\"\n                                  size=\"32\"\n                                />\n                              </td>\n                              <td>&nbsp;</td>\n                              <td>\n                                <Button\n                                  type=\"button\"\n                                  variant=\"contained\"\n                                  disabled={disabledWhileUpdating}\n                                  style={{\n                                    width: \"130px\",\n                                    color: \"#0000b0\",\n                                  }}\n                                  onClick={(ev) => this.handleSetClientNameClick(ev)}\n                                >\n                                  Set\n                                </Button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>\n                      </tr>\n                      <tr>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tr>\n                      <tr>\n                        <input\n                          type=\"checkbox\"\n                          name=\"action-log-level-detailed\"\n                          checked={this.getLogLevelDetailedChecked()}\n                          disabled={disabledWhileUpdating}\n                          onChange={(ev) =>\n                            this.handleLogLevelDetailedClick(ev)\n                          }\n                        />\n                        &nbsp;Log Level Detailed&nbsp;&nbsp;\n                      </tr>\n                      <tr>\n                        <input\n                          type=\"checkbox\"\n                          name=\"action-console-log-level-detailed\"\n                          checked={this.getConsoleLogLevelDetailedChecked()}\n                          disabled={disabledWhileUpdating}\n                          onChange={(ev) =>\n                            this.handleConsoleLogLevelDetailedClick(ev)\n                          }\n                        />\n                        &nbsp;Console Log Detailed&nbsp;&nbsp;\n                      </tr>\n                      <tr>\n                        <input\n                          type=\"checkbox\"\n                          name=\"action-simulate-dropped-packets\"\n                          checked={this.getSimulateDroppedPacketsChecked()}\n                          disabled={disabledWhileUpdating}\n                          onChange={(ev) =>\n                            this.handleSimulateDroppedPacketsClick(ev)\n                          }\n                        />\n                        &nbsp;Simulate Dropped Packets&nbsp;&nbsp;\n                      </tr>\n                      <tr>\n                        <input\n                          type=\"checkbox\"\n                          name=\"action-simulate-saves\"\n                          checked={this.getSimulateSavesChecked()}\n                          disabled={disabledWhileUpdating}\n                          onChange={(ev) =>\n                            this.handleSimulateSavesClick(ev)\n                          }\n                        />\n                        &nbsp;Simulate Saves&nbsp;&nbsp;\n                      </tr>\n                      <tr>\n                        <input\n                          type=\"checkbox\"\n                          name=\"action-simulate-offline\"\n                          checked={this.getSimulateOfflineChecked()}\n                          disabled={disabledWhileUpdating}\n                          onChange={(ev) => this.handleSimulateOfflineClick(ev)}\n                        />\n                        &nbsp;Simulate Offline&nbsp;&nbsp;\n                      </tr>\n                      <tr>&nbsp;</tr>\n                      <tr>\n                        <Button\n                          type=\"button\"\n                          variant=\"contained\"\n                          disabled={disabledWhileUpdating}\n                          style={{\n                            width: \"130px\",\n                            color: \"#0000b0\",\n                          }}\n                          onClick={(ev) => this.handleSendLogsClick(ev)}\n                        >\n                          Send Logs\n                        </Button>\n                      </tr>\n                      <tr>&nbsp;</tr>\n                      <tr>\n                        <Button\n                          type=\"button\"\n                          variant=\"contained\"\n                          disabled={disabledWhileUpdating}\n                          style={{\n                            width: \"130px\",\n                            color: \"#0000b0\",\n                          }}\n                          onClick={(ev) => this.handleRebootClick(ev)}\n                        >\n                          Reboot\n                        </Button>\n                      </tr>\n                      <tr>&nbsp;</tr>\n                      <tr>\n                        <Button\n                          type=\"button\"\n                          variant=\"contained\"\n                          disabled={disabledWhileUpdating || !isLocalClient}\n                          style={{\n                            width: \"130px\",\n                            color: \"#0000b0\",\n                          }}\n                          onClick={(ev) => this.handleShutdownClick(ev)}\n                        >\n                          Shutdown\n                        </Button>\n                      </tr>\n                      <tr>&nbsp;</tr>\n                      <tr>\n                        <table>\n                          <tbody>\n                            <tr>\n                              <td>\n                                <Button\n                                  type=\"button\"\n                                  variant=\"contained\"\n                                  disabled={disabledWhileUpdating || (!this.getDisableRemoteSSHPortNumber() && remoteSSHPortNumberEmpty) }\n                                  style={{\n                                    width: \"130px\",\n                                    color: \"#0000b0\",\n                                  }}\n                                  onClick={(ev) => this.handleRemoteSSHClick(ev)}\n                                >\n                                  {this.getRemoteSSHTitle()}\n                                </Button>\n                              </td>\n                              <td>\n                                <label htmlFor=\"port-number\">\n                                &nbsp;&nbsp;Port:&nbsp;&nbsp;\n                                </label>\n                              </td>\n                              <td>\n                                <input\n                                  autoFocus={false}\n                                  disabled={this.getDisableRemoteSSHPortNumber()}\n                                  value={this.getRemoteSSHPortNumber()}\n                                  onChange={(ev) => this.handleChange(ev)}\n                                  id=\"port-number\"\n                                  name=\"port-number\"\n                                  type=\"text\"\n                                  size=\"6\"\n                                />\n                              </td>\n                              <td>&nbsp;</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </tr>\n                      <tr>&nbsp;</tr>\n                      <tr>\n                        <table>\n                          <tbody>\n                            <tr>\n                              <td>\n                                <label>Ping Chart Data:&nbsp;&nbsp;</label>\n                              </td>\n                              <td>\n                                <Button\n                                  type=\"button\"\n                                  variant=\"contained\"\n                                  disabled={disabledWhileUpdating}\n                                  style={{\n                                    width: \"130px\",\n                                    color: \"#0000b0\",\n                                  }}\n                                  href={\n                                    sentinelProtocol +\n                                    sentinelIPAddress +\n                                    \"/api/settings/downloadpingchartdata\"\n                                  }\n                                >\n                                  Download\n                                </Button>\n                              </td>\n                              <td>&nbsp;</td>\n                              <td>\n                                <FilePicker\n                                  extensions={[\"rrdb\"]}\n                                  maxSize={64}\n                                  onChange={(file) =>\n                                    this.handleUploadPingChartDataClick(file)\n                                  }\n                                  onError={(errMsg) =>\n                                    this.handleUploadPingChartDataError(errMsg)\n                                  }\n                                >\n                                  <Button\n                                    type=\"button\"\n                                    variant=\"contained\"\n                                    disabled={disabledWhileUpdating}\n                                    style={{\n                                      width: \"130px\",\n                                      color: \"#0000b0\",\n                                    }}\n                                  >\n                                    Upload\n                                  </Button>\n                                </FilePicker>\n                              </td>\n                              <td>&nbsp;</td>\n                              <td>\n                                <Button\n                                  type=\"button\"\n                                  variant=\"contained\"\n                                  disabled={\n                                    disabledWhileUpdating ||\n                                    !restorePingChartDataReady\n                                  }\n                                  style={{\n                                    width: \"130px\",\n                                    color: \"#0000b0\",\n                                  }}\n                                  onClick={(ev) =>\n                                    this.handleRestorePingChartDataClick(ev)\n                                  }\n                                >\n                                  Restore\n                                </Button>\n                              </td>\n                            </tr>\n                            <tr>&nbsp;</tr>\n                            <tr>\n                              <td>\n                                <label>Speed Test Data:&nbsp;&nbsp;</label>\n                              </td>\n                              <td>\n                                <Button\n                                  type=\"button\"\n                                  variant=\"contained\"\n                                  disabled={disabledWhileUpdating}\n                                  style={{\n                                    width: \"130px\",\n                                    color: \"#0000b0\",\n                                  }}\n                                  href={\n                                    sentinelProtocol +\n                                    sentinelIPAddress +\n                                    \"/api/settings/downloadspeedtestdata\"\n                                  }\n                                >\n                                  Download\n                                </Button>\n                              </td>\n                              <td>&nbsp;</td>\n                              <td>\n                                <FilePicker\n                                  extensions={[\"rrdb\"]}\n                                  maxSize={2}\n                                  onChange={(file) =>\n                                    this.handleUploadSpeedTestDataClick(file)\n                                  }\n                                  onError={(errMsg) =>\n                                    this.handleUploadSpeedTestDataError(errMsg)\n                                  }\n                                >\n                                  <Button\n                                    type=\"button\"\n                                    variant=\"contained\"\n                                    disabled={disabledWhileUpdating}\n                                    style={{\n                                      width: \"130px\",\n                                      color: \"#0000b0\",\n                                    }}\n                                  >\n                                    Upload\n                                  </Button>\n                                </FilePicker>\n                              </td>\n                              <td>&nbsp;</td>\n                              <td>\n                                <Button\n                                  type=\"button\"\n                                  variant=\"contained\"\n                                  disabled={\n                                    disabledWhileUpdating ||\n                                    !restoreSpeedTestDataReady\n                                  }\n                                  style={{\n                                    width: \"130px\",\n                                    color: \"#0000b0\",\n                                  }}\n                                  onClick={(ev) =>\n                                    this.handleRestoreSpeedTestDataClick(ev)\n                                  }\n                                >\n                                  Restore\n                                </Button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </tr>\n                      <tr>\n                        <td>&nbsp;</td>\n                      </tr>\n                      <tr>\n                        <table>\n                          <tbody>\n                            <tr>\n                              <td>\n                                <label>Speed Test Durations&nbsp;&nbsp;</label>\n                              </td>\n                              <table>\n                                <tbody>\n                                  <tr>\n                                    <td>\n                                      <label>\n                                        nominal latency seconds:&nbsp;&nbsp;\n                                      </label>\n                                    </td>\n                                    <td>\n                                      <input\n                                        autoFocus={false}\n                                        disabled={false}\n                                        value={this.getNominalLatencySeconds()}\n                                        onChange={(ev) => this.handleChange(ev)}\n                                        id=\"nominal-latency-seconds\"\n                                        name=\"nominal-latency-seconds\"\n                                        type=\"text\"\n                                        size=\"2\"\n                                      />\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>\n                                      <label>\n                                        download seconds:&nbsp;&nbsp;\n                                      </label>\n                                    </td>\n                                    <td>\n                                      <input\n                                        autoFocus={false}\n                                        disabled={false}\n                                        value={this.getDownloadSeconds()}\n                                        onChange={(ev) => this.handleChange(ev)}\n                                        id=\"download-seconds\"\n                                        name=\"download-seconds\"\n                                        type=\"text\"\n                                        size=\"2\"\n                                      />\n                                    </td>\n                                    <td>&nbsp;</td>\n                                    <td>\n                                      <Button\n                                        type=\"button\"\n                                        variant=\"contained\"\n                                        disabled={disabledWhileUpdating}\n                                        style={{\n                                          width: \"130px\",\n                                          color: \"#0000b0\",\n                                        }}\n                                        onClick={(ev) =>\n                                          this.handleSaveSpeedTestSettingsClick(\n                                            ev\n                                          )\n                                        }\n                                      >\n                                        Set\n                                      </Button>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>\n                                      <label>upload seconds:&nbsp;&nbsp;</label>\n                                    </td>\n                                    <td>\n                                      <input\n                                        autoFocus={false}\n                                        disabled={false}\n                                        value={this.getUploadSeconds()}\n                                        onChange={(ev) => this.handleChange(ev)}\n                                        id=\"upload-seconds\"\n                                        name=\"upload-seconds\"\n                                        type=\"text\"\n                                        size=\"2\"\n                                      />\n                                    </td>\n                                    <td>&nbsp;</td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </tr>\n                    </tbody>\n                  </table>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nSettingsWindow.settings = {};\nSettingsWindow.isLocalClient = false;\nSettingsWindow.sentinelIPAddress = \"ip address not set\";\nSettingsWindow.sentinelProtocol = \"protocol not set\";\n\nSettingsWindow.downloadSeconds = cookie.get(\"downloadSeconds\", 10);\nSettingsWindow.nominalLatencySeconds = cookie.get(\"nominalLatencySeconds\", 10);\nSettingsWindow.uploadSeconds = cookie.get(\"uploadSeconds\", 10);\n\nSettingsWindow.buttonsEnabled = true;\nSettingsWindow.inProgress = false;\nSettingsWindow.infoMessage = \"\";\nSettingsWindow.showInfoPopup = false;\nSettingsWindow.showRemoteSSHPasswordPopup = false;\nSettingsWindow.remoteSSHPortNumber = \"\";\nSettingsWindow.remoteSSHPassword = \"\";\n\nasync function getSettings() {\n  console.log(\"SettingsWindow.getSettings\");\n  const { data } = await settings.getSettings();\n  SettingsWindow.settings = data.settings;\n  SettingsWindow.sentinelIPAddress = sentinelInfo.getSentinelIPAddress();\n  SettingsWindow.sentinelProtocol = sentinelInfo.getSentinelProtocol();\n  console.log(\n    \"SettingsWindow.getSettings: settings = \" +\n      JSON.stringify(SettingsWindow.settings, null, 2)\n  );\n  if (app) app.doRender();\n}\n/*\nasync function joinLeaveWifi(checked) {\n  SettingsWindow.wifi = checked;\n  SettingsWindow.inProgress = true;\n  if (app) app.doRender();\n  if (SettingsWindow.wifi) SettingsWindow.showPasswordPopup = true;\n  else {\n    const wifiJoin = { network: \"\", password: \"\" };\n    await setSettings(\"wifiJoin\", wifiJoin);\n    await getSettings();\n    SettingsWindow.inProgress = false;\n  }\n  if (app) app.doRender();\n}\n*/\n\nasync function restoreFile(restoreName) {\n  SettingsWindow.inProgress = true;\n  if (app) app.doRender();\n  const { data, status } = await setSettings(restoreName, true);\n  const { message } = data;\n  console.log(\n    \"SettingsWindow.restoreFile: status = \" + status + \", message = \" + message\n  );\n  SettingsWindow.infoMessage = message;\n  SettingsWindow.showInfoPopup = true;\n  SettingsWindow.inProgress = false;\n  await getSettings();\n  if (app) app.doRender();\n}\n\nasync function sendRequest(method, file) {\n  const form = new FormData();\n  form.append(\"file\", file, file.name);\n  return await http.post(\n    SettingsWindow.sentinelProtocol + SettingsWindow.sentinelIPAddress + \"/api/settings/\" + method,\n    form\n  );\n}\n\nasync function setSettings(name, value) {\n  console.log(\n    \"SettingsWindow.setSettings: name = \" + name + \", value = \" + value\n  );\n  let settings_ = {};\n  settings_[name] = value;\n  const { status, data } = await settings.setSettings({ settings: settings_ });\n  console.log(\"---AFTER settings.setSetting\");\n  console.log(\"SettingsWindow.setSettings: status = \" + status + \", data = \" + JSON.stringify(data));\n  //??TODO error check.\n  SettingsWindow.inProgress = false;\n  if (app) app.doRender();\n  return { status, data };\n}\n\nasync function uploadFile(method, file) {\n  try {\n    SettingsWindow.inProgress = true;\n    if (app) app.doRender();\n    const { status, data } = await sendRequest(method, file);\n    const { message } = data;\n    console.log(\n      \"SettingsWindow.uploadFile: status = \" +\n        status +\n        \", upload message = \" +\n        message\n    );\n    SettingsWindow.infoMessage = message;\n    SettingsWindow.showInfoPopup = true;\n  } catch (ex) {\n    // Not Production ready! Do some error handling here instead...\n  }\n  // await getSettings();\n  SettingsWindow.inProgress = false;\n  if (app) app.doRender();\n}\n\nconst handleIsLocalClient = (event, data) => {\n  console.log(\"handleIsLocalClient: data = \" + JSON.stringify(data));\n  const { isLocalClient } = data;\n  SettingsWindow.isLocalClient = isLocalClient;\n};\n\neventManager.on(\n  Defs.ipcIsLocalClient,\n  handleIsLocalClient\n);\n\nexport default SettingsWindow;\n","import React from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { Platform } from \"react-native\";\n\n//let app;\n\n// const roundToTwo = num => {\n//   return +(Math.round(num + \"e+1\") + \"e-1\");\n// };\n\nclass Gauge extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"Gauge constructor: \" + this.props.label);\n    this.state = { count: 0 };\n    this.interval = 500;\n    this.updateCount = () =>\n      this.setState({ count: this.state.count + this.interval });\n    this.timer = null;\n    // see https://developers.google.com/chart/interactive/docs/gallery/gauge\n    this.gaugeOptions = {\n      width: 300,\n      height: 250,\n      // redFrom: 90,\n      // redTo: 100,\n      // yellowFrom: 75,\n      // yellowTo: 90,\n      majorTicks: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"],\n      minorTicks: 5,\n      max: 10\n    };\n    this.overlayMarginTop = Platform.OS === 'ios' ? 5 : 50;\n    //app = this;\n  }\n\n  getData() {\n    return [\n      [\"Label\", \"Value\"],\n      [this.props.label, this.props.value]\n    ];\n  }\n\n  getProgress() {\n    return this.props.progress;\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    //console.log(\"...shouldComponentUpdate: active = \" + this.props.active);\n    return (\n      //     this.props.active &&\n      this.props.progress !== nextProps.progress ||\n      this.props.value !== nextProps.value ||\n      this.state.count !== nextState.count\n    );\n  }\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentWillUnmount() {\n    this.stopTimer();\n  }\n\n  startTimer() {\n    this.timer = setInterval(this.updateCount, this.interval);\n  }\n\n  stopTimer() {\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n  }\n\n  render() {\n    //console.log(\"Gauge render called: \" + this.props.label);\n\n    const val = Math.round(this.props.value);\n    //\n    //console.log(\"...val=\" + val);\n    let max = Math.round(Math.round(val) / 10) * 10; // + 10;\n    //\n    //console.log(\"...max=\" + max);\n    if (max > this.gaugeOptions.max) {\n      if (max > 1000) max = 10000;\n      else if (max > 100) max = 1000;\n      else if (max > 10) max = 100;\n      this.gaugeOptions.max = max;\n      const majorTick = max / 10;\n      //console.log(\"majorTick=\" + majorTick);\n      let majorTicks = [];\n      for (let i = 0; i < 11; i++) {\n        majorTicks.push(`${i * majorTick}`);\n      }\n      this.gaugeOptions.majorTicks = majorTicks;\n\n      //console.log(\"...major ticks=\" + this.gaugeOptions.majorTicks);\n    }\n\n    const gaugeOptions = this.gaugeOptions;\n\n    // const { classes } = this.props;\n    // var style = this.props.style || { margin: 20 } || { width: \"85%\" };\n    const overlayMarginTop = this.overlayMarginTop;\n\n    return (\n      <div>\n        <table>\n          <div>\n            <tr>\n              <td>\n                <Chart\n                  className=\"gauge\"\n                  chartType=\"Gauge\"\n                  width=\"100%\"\n                  height=\"200px\"\n                  data={this.getData()}\n                  options={gaugeOptions}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                {/*                 <div align=\"center\" style={style}> */}\n                <div\n                  align=\"center\"\n                  style={{ width: \"88%\", marginLeft: 13, marginTop: overlayMarginTop }}\n                >\n                  <LinearProgress\n                    variant=\"determinate\"\n                    value={this.getProgress()}\n                  />\n                </div>\n              </td>\n            </tr>\n          </div>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Gauge;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport moment from \"moment\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport eventManager from \"../ipc/eventManager\";\nimport toSentinel from \"../ipc/toSentinel\";\n\nimport cookie from \"../utils/cookie\";\n\nimport Gauge from \"./gauge\";\nimport InfoPopup from \"./infoPopup\";\nimport Navigator from \"./navigator\";\n\nlet app = null;\n\nclass ThroughputTestWindow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"ThroughputTestWindow.constructor\");\n\n    this.state = {\n      timeOfTest: null,\n      downloadBloat: 0,\n      uploadBloat: 0,\n      nominalLatency: 0,\n      downloadThroughput: 0,\n      uploadThroughput: 0,\n      inTest: false,\n      hideButton: false,\n      isLoggedIn: false,\n      showInfoPopup: false,\n      infoMessage: \"\",\n      // progress indicators\n      numTicksNominalLatency: 0,\n      tickNumNominalLatency: 0,\n      numTicksIperf3Down: 0,\n      tickNumIperf3Down: 0,\n      numTicksIperf3Up: 0,\n      tickNumIperf3Up: 0,\n    };\n\n    app = this;\n  }\n\n  componentDidMount() {\n    console.log(\"ThroughputTestWindow.componentDidMount\");\n    toSentinel.send(Defs.ipcThroughputTestWindowMount, {\n      position: ThroughputTestWindow.position,\n    });\n  }\n\n  componentWillUnmount() {\n    console.log(\"ThroughputTestWindow.componentWillUnmount\");\n    app = null;\n  }\n\n  log(str) {\n    console.log(str);\n  }\n\n  getActive() {\n    return this.state.inTest;\n  }\n\n  getButtonVisibility() {\n    console.log(\n      \"throughputTestWindow.getButtonVisibility: hide=\" + this.state.hideButton\n    );\n    return ThroughputTestWindow.position !== 1 || this.state.hideButton\n      ? \"hidden\"\n      : \"visible\";\n    // for test - return this.state.hideButton ? \"hidden\" : \"visible\";\n  }\n\n  isPlainObject(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Object]\";\n  }\n\n  getTimeOfTest() {\n    console.log(\n      \"throughputTestWindow.getTimeOfTest: \" +\n        JSON.stringify(this.state.timeOfTest)\n    );\n  \n    if (this.isPlainObject(this.state.timeOfTest)) return \"<time-of-test>\";\n    const timeOfTest = moment(new Date(this.state.timeOfTest)).format('ddd, MMMM Do YYYY, h:mm:ss a');\n    return timeOfTest.toString();\n  }\n\n  getNominalLatency() {\n    return this.state.nominalLatency;\n  }\n\n  getDownloadBloat() {\n    return this.state.downloadBloat;\n  }\n\n  getUploadBloat() {\n    return this.state.uploadBloat;\n  }\n\n  getDownloadThroughput() {\n    console.log(\n      \"throughputTestWindow.downloadThroughput = \" +\n        this.state.downloadThroughput\n    );\n    return this.state.downloadThroughput;\n  }\n\n  getUploadThroughput() {\n    console.log(\n      \"throughputTestWindow.uploadThroughput = \" + this.state.uploadThroughput\n    );\n    return this.state.uploadThroughput;\n  }\n\n  getProgressNominalLatency() {\n    console.log(\"throughputTestWindow.getProgressNominalLatency\");\n\n    const numTicks = this.state.numTicksNominalLatency;\n    const tickNum = this.state.tickNumNominalLatency;\n    // percentage done\n    console.log(\n      \"throughputTestWindow.getProgressNominalLatency, numTicks = \" +\n        numTicks +\n        \", tickNum = \" +\n        tickNum\n    );\n    if (numTicks <= 0 || tickNum <= 0) return 0;\n    return (tickNum / numTicks) * 100;\n  }\n\n  getProgressIperf3Down() {\n    console.log(\"throughputTestWindow.getProgressIperf3Down\");\n\n    const numTicks = this.state.numTicksIperf3Down;\n    const tickNum = this.state.tickNumIperf3Down;\n    // percentage done\n\n    if (numTicks <= 0 || tickNum <= 0) return 0;\n    return (tickNum / numTicks) * 100;\n  }\n\n  getProgressIperf3Up() {\n    console.log(\"throughputTestWindow.getProgressIperf3Up\");\n\n    const numTicks = this.state.numTicksIperf3Up;\n    const tickNum = this.state.tickNumIperf3Up;\n    // percentage done\n    if (numTicks <= 0 || tickNum <= 0) return 0;\n    return (tickNum / numTicks) * 100;\n  }\n\n  getDisabledLeftButton() {\n    return ThroughputTestWindow.position === -1;\n  }\n\n  getDisabledRightButton() {\n    return ThroughputTestWindow.position === 1;\n  }\n\n  getDisabledNewestButton() {\n    return ThroughputTestWindow.position === 1;\n  }\n\n  getDisabledOldestButton() {\n    return ThroughputTestWindow.position === -1;\n  }\n\n  handleLoginStatus() {\n    console.log(\"throughputTestWindow.handleLoginStatus\");\n    this.setState({\n      isLoggedIn: ThroughputTestWindow.isLoggedIn,\n    });\n  }\n\n  handleFailedToGetServer(message) {\n    console.log(\n      \"throughputTestWindow.handleFailedToGetServer: message = \" + message\n    );\n    this.setState({\n      showInfoPopup: true,\n      infoMessage: message,\n    });\n  }\n\n  handleBeginTestClick(ev) {\n    console.log(\"throughputTestWindow.handleBeginTestClick\");\n    const data = {\n      nominalLatencyTestDurationSeconds: parseInt(\n        cookie.get(\"nominalLatencySeconds\", 10)\n      ),\n      downloadThroughputTestDurationSeconds: parseInt(\n        cookie.get(\"downloadSeconds\", 10)\n      ),\n      uploadThroughputTestDurationSeconds: parseInt(\n        cookie.get(\"uploadSeconds\", 10)\n      ),\n    };\n    toSentinel.send(Defs.ipcThroughputTestWindowStart, data);\n    this.setState({\n      inTest: true,\n      hideButton: true,\n      showInfoPopup: false,\n    });\n  }\n\n  handleCancelTestClick(ev) {\n    console.log(\"throughputTestWindow.handleCancelTestClick\");\n    toSentinel.send(Defs.ipcThroughputTestWindowCancel, {});\n    this.setState({\n      inTest: true,\n      hideButton: true,\n      showInfoPopup: false,\n    });\n  }\n\n  handleLoginClick(ev) {\n    console.log(\"throughputTestWindow.handleLoginClick\");\n    toSentinel.send(Defs.ipcLinkTo, Defs.urlLogin);\n  }\n\n  handleClearDials() {\n    this.setState({\n      timeOfTest: null,\n      downloadBloat: 0,\n      uploadBloat: 0,\n      nominalLatency: 0,\n      downloadThroughput: 0,\n      uploadThroughput: 0,\n      numTicksNominalLatency: 0,\n      tickNumNominalLatency: 0,\n      numTicksIperf3Down: 0,\n      tickNumIperf3Down: 0,\n      numTicksIperf3Up: 0,\n      tickNumIperf3Up: 0,\n    });\n  }\n\n  handleTestingState(joResults) {\n    if (!joResults || joResults === {}) return;\n\n    console.log(\"throughputTestWindow.handleTestingState: \" + JSON.stringify(joResults));\n\n    if (joResults) {\n      const {\n        testState: _testState,\n        hideButton: _hideButton,\n        // testBusy: _testBusy,\n        // failed: _failed\n      } = joResults;\n\n      if (typeof _testState !== \"undefined\") {\n        const hideButton =\n          typeof _hideButton !== \"undefined\" ? _hideButton : false;\n\n        this.setState({\n          inTest: _testState,\n          hideButton,\n        });\n      }\n    }\n  }\n\n  handleStatusNominalLatency(timeMillis) {\n    this.setState({ nominalLatency: this.roundToTwo(timeMillis) });\n  }\n\n  handleStatusNominalLatencyFinal(avgMillis) {\n    this.setState({ nominalLatency: this.roundToTwo(avgMillis) });\n  }\n\n  handleStatusIperf3Down(mbitsPerSec) {\n    this.log(\"throughputTestWindow.handleStatusIperf3Down: \" + mbitsPerSec);\n\n    this.setState({ downloadThroughput: this.roundToTwo(mbitsPerSec) });\n  }\n\n  handleStatusIperf3Up(mbitsPerSec) {\n    console.log(\"throughputTestWindow.handleStatusIperf3Up: \" + mbitsPerSec);\n\n    this.setState({ uploadThroughput: this.roundToTwo(mbitsPerSec) });\n  }\n\n  handleProgressNominalLatency(data) {\n    const { numTicks, tickNum } = data;\n\n    this.setState({\n      numTicksNominalLatency: numTicks,\n      tickNumNominalLatency: tickNum,\n    });\n  }\n\n  roundToTwo(num) {\n    return +(Math.round(num + \"e+1\") + \"e-1\");\n  }\n\n  handleProgressIperf3Down(data) {\n    const { numTicks, tickNum } = data;\n\n    this.setState({\n      numTicksIperf3Down: numTicks,\n      tickNumIperf3Down: tickNum,\n    });\n  }\n\n  handleProgressIperf3Up(data) {\n    const { numTicks, tickNum } = data;\n\n    this.setState({\n      numTicksIperf3Up: numTicks,\n      tickNumIperf3Up: tickNum,\n    });\n  }\n\n  handleBloatLatencyIperf3Down(sampleMillis) {\n    console.log(\n      \"throughputTestWindow.handleBloatLatencyIperf3Down: \" +\n        sampleMillis +\n        \", typeof= \" +\n        typeof sampleMillis\n    );\n\n    this.setState({ downloadBloat: this.roundToTwo(sampleMillis) });\n  }\n\n  handleBloatLatencyIperf3Up(sampleMillis) {\n    console.log(\n      \"throughputTestWindow.handleBloatLatencyIperf3Up: \" + sampleMillis\n    );\n\n    this.setState({ uploadBloat: this.roundToTwo(sampleMillis) });\n  }\n\n  handleTimeOfTest(timeOfTest) {\n    console.log(\n      \"throughputTestWindow.handleTimeOfTest: \" + JSON.stringify(timeOfTest)\n    );\n    this.setState({ timeOfTest });\n  }\n\n  handleThroughputTestStatus(joResult) {\n    console.log(\"throughputTestWindow.handleThroughputTestStatus\");\n    console.log(JSON.stringify(joResult, null, 2));\n    ThroughputTestWindow.position = joResult.position;\n    const status = joResult.status;\n    this.setState({\n      timeOfTest: status.timeOfTest,\n      numTicksNominalLatency: status.nominalLatency.numTicks,\n      tickNumNominalLatency: status.nominalLatency.tickNum,\n      nominalLatency: this.roundToTwo(status.nominalLatencyMillis),\n      numTicksIperf3Down: status.tickStatusIperf3Down.numTicks,\n      tickNumIperf3Down: status.tickStatusIperf3Down.tickNum,\n      numTicksIperf3Up: status.tickStatusIperf3Up.numTicks,\n      tickNumIperf3Up: status.tickStatusIperf3Up.tickNum,\n      downloadThroughput: this.roundToTwo(status.downloadThroughputMBits),\n      downloadBloat: this.roundToTwo(status.downloadBloatMillis),\n      uploadThroughput: this.roundToTwo(status.uploadThroughputMBits),\n      uploadBloat: this.roundToTwo(status.uploadBloatMillis),\n    });\n  }\n\n  handleLeftClick(ev) {\n    console.log(\"throughputTestWindow.handleLeftClick\");\n    toSentinel.send(Defs.ipcThroughputTestWindowButtonLeft, 1);\n  }\n\n  handleRightClick(ev) {\n    console.log(\"throughputTestWindow.handleRightClick\");\n    toSentinel.send(Defs.ipcThroughputTestWindowButtonRight, 1);\n  }\n\n  handleNewestClick(ev) {\n    console.log(\"throughputTestWindow.handleNewestClick\");\n    toSentinel.send(Defs.ipcThroughputTestWindowButtonNewest, 1);\n  }\n\n  handleOldestClick(ev) {\n    console.log(\"throughputTestWindow.handleOldestClick\");\n    toSentinel.send(Defs.ipcThroughputTestWindowButtonOldest, 1);\n  }\n\n  getInfoMessage() {\n    return this.state.infoMessage;\n  }\n\n  handleInfoPopupClick() {\n    console.log(\"ThroughputTestWindow.handleInfoPopupClick\");\n  }\n\n  hideInfoPopup() {\n    this.setState({ showInfoPopup: false });\n  }\n\n  render() {\n    console.log(\"throughputTestWindow.throughputTestWindow render\");\n\n    const isLoggedIn = ThroughputTestWindow.isLoggedIn;\n    const showInfoPopup = this.state.showInfoPopup;\n    const displayResults =\n      !showInfoPopup && !this.state.inTest && this.state.timeOfTest;\n\n    return (\n      <div>\n        <Navigator />\n        <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n          <p style={{ fontSize: \"140%\" }}>Speed Test</p>\n        </div>\n        {!isLoggedIn && (\n          <div style={{ marginLeft: 20, textAlign: \"left\" }}>\n            <p style={{ fontSize: \"140%\" }}>\n              You must be logged in to run Speed Test\n            </p>\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              style={{\n                width: \"130px\",\n                color: \"#0000b0\",\n              }}\n              autoFocus\n              onClick={(ev) => this.handleLoginClick(ev)}\n            >\n              Login\n            </Button>\n          </div>\n        )}\n        {isLoggedIn && (\n          <div style={{ marginLeft: 15, marginTop: -20 }}>\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    <Gauge\n                      value={this.getNominalLatency()}\n                      progress={this.getProgressNominalLatency()}\n                      active={this.getActive()}\n                      label={\"Latency\"}\n                    />\n                    <div\n                      style={{\n                        textAlign: \"center\",\n                        position: \"relative\",\n                        zIndex: \"1000\",\n                        left: \"0px\",\n                        top: \"-112px\",\n                      }}\n                    >\n                      <span\n                        style={{\n                          position: \"relative\",\n                          font: \"12px sans-serif\",\n                          zIndex: 1000,\n                          top: 0,\n                          left: 0,\n                        }}\n                      >\n                        {this.getNominalLatency()} ms\n                      </span>\n                    </div>\n                  </td>\n                  <td>\n                    <Gauge\n                      value={this.getDownloadThroughput()}\n                      progress={this.getProgressIperf3Down()}\n                      active={this.getActive()}\n                      label={\"Download\"}\n                    />\n                    <div\n                      style={{\n                        textAlign: \"center\",\n                        position: \"relative\",\n                        zIndex: \"1000\",\n                        left: \"0px\",\n                        top: \"-112px\",\n                      }}\n                    >\n                      <span\n                        style={{\n                          position: \"relative\",\n                          font: \"12px sans-serif\",\n                          zIndex: 1000,\n                          top: 0,\n                          left: 0,\n                        }}\n                      >\n                        Bloat:{this.getDownloadBloat()} ms\n                      </span>\n                    </div>\n                  </td>\n                  <td>\n                    <Gauge\n                      value={this.getUploadThroughput()}\n                      progress={this.getProgressIperf3Up()}\n                      active={this.getActive()}\n                      label={\"Upload\"}\n                    />\n                    <div\n                      style={{\n                        textAlign: \"center\",\n                        position: \"relative\",\n                        zIndex: \"1000\",\n                        left: \"0px\",\n                        top: \"-112px\",\n                      }}\n                    >\n                      <span\n                        style={{\n                          position: \"relative\",\n                          font: \"12px sans-serif\",\n                          zIndex: 1000,\n                          top: 0,\n                          left: 0,\n                        }}\n                      >\n                        Bloat:{this.getUploadBloat()} ms\n                      </span>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td />\n                  <td>\n                    <div style={{ textAlign: \"center\" }}>\n                      <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        style={{\n                          width: \"130px\",\n                          color: \"#0000b0\",\n                          visibility: this.getButtonVisibility(),\n                        }}\n                        autoFocus\n                        onClick={\n                          this.getActive()\n                            ? (ev) => this.handleCancelTestClick(ev)\n                            : (ev) => this.handleBeginTestClick(ev)\n                        }\n                      >\n                        {this.getActive() ? \"Cancel\" : \"Start\"}\n                      </Button>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            {displayResults && (\n              <div>\n                <table\n                  class=\"border-iipzy\"\n                  style={{ margin: \"20px 0px 0px 20px\" }}\n                >\n                  <tbody>\n                    <tr>\n                      <td>Time of Test:</td>\n                      <td>{this.getTimeOfTest()}</td>\n                    </tr>\n                    <tr />\n                    <tr>\n                      <td>Nominal Latency:</td>\n                      <td>{this.getNominalLatency()} millis</td>\n                    </tr>\n                    <tr />\n                    <tr>\n                      <td>Download Throughput:</td>\n                      <td>{this.getDownloadThroughput()} MBits/sec</td>\n                    </tr>\n                    <tr>\n                      <td>Download Buffer Bloat:</td>\n                      <td>{this.getDownloadBloat()} millis</td>\n                    </tr>\n                    <tr />\n                    <tr>\n                      <td>Upload Throughput:</td>\n                      <td>{this.getUploadThroughput()} MBits/sec</td>\n                    </tr>\n                    <tr>\n                      <td>Upload Buffer Bloat:</td>\n                      <td>{this.getUploadBloat()} millis</td>\n                    </tr>\n                  </tbody>\n                </table>\n                <Tooltip title=\"oldest\">\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    size=\"small\"\n                    disabled={this.getDisabledOldestButton()}\n                    style={{ marginLeft: 20, marginTop: 10 }}\n                    onClick={(ev) => this.handleOldestClick(ev)}\n                  >\n                    &lt;&lt;\n                  </Button>\n                </Tooltip>\n                <Tooltip title=\"previous\">\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    size=\"small\"\n                    disabled={this.getDisabledLeftButton()}\n                    style={{ marginLeft: 5, marginTop: 10 }}\n                    onClick={(ev) => this.handleLeftClick(ev)}\n                  >\n                    &lt;\n                  </Button>\n                </Tooltip>\n                <Tooltip title=\"next\">\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    size=\"small\"\n                    disabled={this.getDisabledRightButton()}\n                    style={{ marginLeft: 190, marginTop: 10 }}\n                    onClick={(ev) => this.handleRightClick(ev)}\n                  >\n                    &gt;\n                  </Button>\n                </Tooltip>\n                <Tooltip title=\"newest\">\n                  <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    size=\"small\"\n                    disabled={this.getDisabledNewestButton()}\n                    style={{ marginLeft: 5, marginTop: 10 }}\n                    onClick={(ev) => this.handleNewestClick(ev)}\n                  >\n                    &gt;&gt;\n                  </Button>\n                </Tooltip>\n              </div>\n            )}\n            {showInfoPopup && (\n              <InfoPopup\n                getInfoMessage={() => this.getInfoMessage()}\n                onSubmit={(ev) => this.handleInfoPopupClick(ev)}\n                closePopup={this.hideInfoPopup.bind(this)}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nThroughputTestWindow.isLoggedIn = true;\n// NB position 1 == newest, -1 == oldest, 0 == in between.\nThroughputTestWindow.position = 1;\n\n// ipc handlers\n\nconst clearDials = (event, data) => {\n  console.log(\"clearDials = \" + data);\n  if (app) app.handleClearDials(data);\n};\n\nconst updateTestingState = (event, data) => {\n  console.log(\"updateTestingState = \" + data);\n  if (app) app.handleTestingState(data);\n};\n\nconst updateStatusNominalLatency = (event, data) => {\n  //console.log(\"updateStatusNominalLatency: \" + data);\n  if (app) app.handleStatusNominalLatency(data);\n};\n\nconst updateStatusNominalLatencyFinal = (event, data) => {\n  //console.log(\"updateStatusNominalLatencyFinal: \" + data);\n  if (app) app.handleStatusNominalLatencyFinal(data);\n};\n\nconst updateStatusIperf3Down = (event, data) => {\n  //console.log(\"updateIperf3StatusDown = \" + data);\n  if (app) app.handleStatusIperf3Down(data);\n};\n\nconst updateStatusIperf3Up = (event, data) => {\n  //console.log(\"updateIperf3StatusUp = \" + data);\n  if (app) app.handleStatusIperf3Up(data);\n};\n\nconst updateProgressNominalLatency = (event, data) => {\n  //console.log(\"updateProgressNominalLatency: \" + data);\n  if (app) app.handleProgressNominalLatency(data);\n};\n\nconst updateProgressIperf3Down = (event, data) => {\n  //console.log(\"updateProgressNominalLatency: \" + data);\n  if (app) app.handleProgressIperf3Down(data);\n};\n\nconst updateProgressIperf3Up = (event, data) => {\n  //console.log(\"updateProgressIperf3Up: \" + data);\n  if (app) app.handleProgressIperf3Up(data);\n};\n\nconst updateBloatLatencyIperf3Down = (event, data) => {\n  //console.log(\"updateBloatLatencyIperf3Down: \" + data);\n  if (app) app.handleBloatLatencyIperf3Down(data);\n};\n\nconst updateBloatLatencyIperf3Up = (event, data) => {\n  //console.log(\"updateBloatLatencyIperf3Up: \" + data);\n  if (app) app.handleBloatLatencyIperf3Up(data);\n};\n\nconst updateTimeOfTest = (event, data) => {\n  // console.log(\"updateTimeOfTest: \" + data);\n  if (app) app.handleTimeOfTest(data);\n};\n\nconst handleLoginStatus = (event, data) => {\n  const { loginStatus } = data;\n  console.log(\n    \"throughputTestWindow handleLoginStatus: loginStatus = \" + loginStatus\n  );\n\n  ThroughputTestWindow.isLoggedIn = loginStatus === Defs.loginStatusLoggedIn;\n  if (app) app.handleLoginStatus();\n};\n\nconst handleFailedToGetServer = (event, data) => {\n  if (app) app.handleFailedToGetServer(data);\n};\n\nconst handleThroughputTestStatus = (event, data) => {\n  if (app) app.handleThroughputTestStatus(data);\n};\n\neventManager.on(Defs.ipcClearDials, clearDials);\n\neventManager.on(Defs.ipcTestingState, updateTestingState);\n\neventManager.on(Defs.ipcIperf3StatusDown, updateStatusIperf3Down);\n\neventManager.on(Defs.ipcIperf3StatusUp, updateStatusIperf3Up);\n\neventManager.on(Defs.ipcNominalLatencyStatus, updateStatusNominalLatency);\n\neventManager.on(\n  Defs.ipcNominalLatencyStatusFinal,\n  updateStatusNominalLatencyFinal\n);\n\neventManager.on(Defs.ipcTickStatusNominalLatency, updateProgressNominalLatency);\n\neventManager.on(Defs.ipcTickStatusIperf3Down, updateProgressIperf3Down);\n\neventManager.on(Defs.ipcTickStatusIperf3Up, updateProgressIperf3Up);\n\neventManager.on(\n  Defs.ipcBloatLatencyStatusIperf3Down,\n  updateBloatLatencyIperf3Down\n);\n\neventManager.on(\n  Defs.ipcBloatLatencyStatusIperf3DownFinal,\n  updateBloatLatencyIperf3Down\n);\n\neventManager.on(Defs.ipcBloatLatencyStatusIperf3Up, updateBloatLatencyIperf3Up);\n\neventManager.on(\n  Defs.ipcBloatLatencyStatusIperf3UpFinal,\n  updateBloatLatencyIperf3Up\n);\n\neventManager.on(Defs.ipcTimeOfTest, updateTimeOfTest);\n\neventManager.on(Defs.ipcLoginStatus, handleLoginStatus);\n\neventManager.on(\n  Defs.ipcThroughputTestFailedToGetServer,\n  handleFailedToGetServer\n);\n\neventManager.on(Defs.ipcThrouputTestStatus, handleThroughputTestStatus);\n\nexport default ThroughputTestWindow;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport Defs from \"iipzy-shared/src/defs\";\n\nimport NavBar from \"./components/navBar\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport CloseWindow from \"./components/closeWindow\";\nimport DevicesWindow from \"./components/devicesWindow\";\nimport LoginWindow from \"./components/loginWindow\";\nimport PingPlotWindow from \"./components/pingPlotWindow\";\nimport SentinelInUseWindow from \"./components/sentinelInUseWindow\";\nimport SentinelOnlineCheckWindow from \"./components/sentinelOnlineCheckWindow\";\nimport SettingsWindow from \"./components/settingsWindow\";\nimport ThroughputTestWindow from \"./components/throughputTestWindow\";\n\nimport eventManager from \"./ipc/eventManager\";\n\n//let app = null;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"App.constructor\");\n\n    this.state = { count: 0, data: null };\n\n    //app = this;\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch(\"/express_backend\");\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    return body;\n  };\n\n  // render() {\n  //   return (\n  //     <div className=\"App\">\n  //       <header className=\"App-header\">\n  //         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //         <h1 className=\"App-title\">Welcome to React</h1>\n  //       </header>\n  //       <p className=\"App-intro\">{this.state.data}</p>\n  //     </div>\n  //   );\n  // }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={this.state.user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path={Defs.urlCloseSentinel} exact component={CloseWindow} />\n\n            <Route path={Defs.urlDevices} exact component={DevicesWindow} />\n            <Route path={Defs.urlLogin} exact component={LoginWindow} />\n            <Route path={Defs.urlPingPlot} exact component={PingPlotWindow} />\n            <Route\n              path={Defs.urlSentinelInUse}\n              exact\n              component={SentinelInUseWindow}\n            />\n            <Route\n              path={Defs.urlSentinelOnlineCheck}\n              exact\n              component={SentinelOnlineCheckWindow}\n            />\n            <Route\n              path={Defs.urlThroughputTest}\n              exact\n              component={ThroughputTestWindow}\n            />\n            <Route path={Defs.urlSettings} exact component={SettingsWindow} />\n            <Redirect to={Defs.urlPingPlot} />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nconst handleLoginStatus = (event, data) => {\n  console.log(\"App.handleLoginStatus\");\n  const { loginStatus } = data;\n\n  App.loggedIn = loginStatus === Defs.loginStatusLoggedIn;\n\n  if (App.navbarName === \"home\") {\n    if (App.loggedIn) {\n      eventManager.send(Defs.ipcLinkTo, Defs.urlPingPlot);\n    } else {\n      eventManager.send(Defs.ipcLinkTo, Defs.urlLogin);\n    }\n  }\n};\n\neventManager.on(Defs.ipcLoginStatus, handleLoginStatus);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","function getLocalSubnet() {\n  console.log(\n    \"----------------------------getLocalSubnet------------------------\"\n  );\n  getUserIP(function (ip) {\n    alert(\"*************************************Got IP! :\" + ip);\n  });\n}\n\n/**\n * Get the user IP throught the webkitRTCPeerConnection\n * @param onNewIP {Function} listener function to expose the IP locally\n * @return undefined\n */\nfunction getUserIP(onNewIP) {\n  //  onNewIp - your listener function for new IPs\n  //compatibility for firefox and chrome\n  var myPeerConnection =\n    window.RTCPeerConnection ||\n    window.mozRTCPeerConnection ||\n    window.webkitRTCPeerConnection;\n  var pc = new myPeerConnection({\n      iceServers: [],\n    }),\n    noop = function () {},\n    localIPs = {},\n    ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g,\n    key;\n\n  function iterateIP(ip) {\n    if (!localIPs[ip]) onNewIP(ip);\n    localIPs[ip] = true;\n  }\n\n  //create a bogus data channel\n  pc.createDataChannel(\"\");\n\n  // create offer and set local description\n  pc.createOffer()\n    .then(function (sdp) {\n      console.log(\"------------------------sdp\");\n      console.log(sdp);\n      sdp.sdp.split(\"\\n\").forEach(function (line) {\n        if (line.indexOf(\"candidate\") < 0) return;\n        line.match(ipRegex).forEach(iterateIP);\n      });\n\n      pc.setLocalDescription(sdp, noop, noop);\n    })\n    .catch(function (reason) {\n      // An error occurred, so handle the failure to connect\n      console.log(\"---------------------ex: + \" + reason);\n    });\n\n  //listen for candidate events\n  pc.onicecandidate = function (ice) {\n    console.log(\"-------------------------ice\");\n    console.log(ice);\n    if (\n      !ice ||\n      !ice.candidate ||\n      !ice.candidate.candidate ||\n      !ice.candidate.candidate.match(ipRegex)\n    )\n      return;\n    ice.candidate.candidate.match(ipRegex).forEach(iterateIP);\n  };\n}\n\n// Usage\n\n// getUserIP(function (ip) {\n//   alert(\"Got IP! :\" + ip);\n// });\n\nexport default { getLocalSubnet };\n","import Defs from \"iipzy-shared/src/defs\";\nimport { sleep } from \"iipzy-shared/src/utils/utils\";\n\nimport eventManager from \"./eventManager\";\nimport http from \"./httpService\";\n\nimport sentinelInfo from \"../utils/sentinelInfo\";\n\n// receive an event from iipzy-sentinel and forword to renderer.\n//let fromSentinel = null;\n\n/*\n  sentinelStatusOnline: 0,\n  sentinelStatusOffline: 1,\n  sentinelStatusInuse: 2,\n  sentinelStatusNoAddress: 3,\n*/\n\nclass FromSentinel {\n  constructor(clientToken) {\n    console.log(\"fromSentinel.constructor: clientToken = \" + clientToken);\n\n    this.clientToken = clientToken;\n\n    this.sentinelIPAddress = sentinelInfo.getSentinelIPAddress();\n    this.sentinelProtocol = sentinelInfo.getSentinelProtocol();\n\n    this.sentinelStatus = Defs.sentinelStatusUnknown;\n\n    this.running = true;\n\n    this.loginStatus = null;\n\n    this.ready = false;\n\n    //fromSentinel = this;\n  }\n\n  send(event, data) {\n    console.log(\"fromSentinel.send: event = \" + event + \", data = \" + data);\n    eventManager.send(event, data);\n  }\n\n  setExiting() {\n    this.running = false;\n  }\n\n  sendSentinelStatus(sentinelStatus) {\n    if (this.sentinelStatus !== sentinelStatus) {\n      console.log(\"fromSentinel.sendSentinelStatus: \" + sentinelStatus);\n      eventManager.send(Defs.ipcSentinelOnlineStatus, { sentinelStatus });\n      switch (sentinelStatus) {\n        case Defs.sentinelStatusOnline: {\n          eventManager.send(Defs.ipcLinkTo, Defs.urlPingPlot);\n          break;\n        }\n        case Defs.sentinelStatusOffline: {\n          eventManager.send(Defs.ipcLinkTo, Defs.urlSentinelOnlineCheck);\n          break;\n        }\n        case Defs.sentinelStatusInUse: {\n          eventManager.send(Defs.ipcLinkTo, Defs.urlSentinelInUse);\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n      this.sentinelStatus = sentinelStatus;\n    }\n  }\n\n  async run() {\n    console.log(\">>>fromSentinel.run\");\n    \n    if (this.clientToken) http.setClientTokenHeader(this.clientToken);\n\n    while (this.running) {\n      console.log(\"fromSentinel.run: calling eventWait\");\n      const { data, status } = await http.get(\n        this.sentinelProtocol + this.sentinelIPAddress + \"/api/eventWait\",\n        {\n          timeout: 10000\n        }\n      );\n\n      if (status !== Defs.httpStatusOk) {\n        console.log(\n          \"(Error) fromSentinel.run: AFTER calling eventWait: status = \" +\n            status +\n            \", error = \" +\n            JSON.stringify(data, null, 2)\n        );\n        switch (status) {\n          case Defs.httpStatusConnRefused:\n          case Defs.httpStatusConnAborted: {\n            this.sendSentinelStatus(Defs.sentinelStatusOffline);\n            break;\n          }\n          case Defs.httpStatusConnReset:\n          case Defs.httpStatusException: {\n            break;\n          }\n          case Defs.httpStatusSentinelInUse: {\n            this.sendSentinelStatus(Defs.sentinelStatusInUse);\n            this.running = false;\n            break;\n          }\n          default: {\n            break;\n          }\n        }\n        this.loginStatus = null;\n        await sleep(1000);\n        // continue.\n        continue;\n      }\n      const { event, data: _data, forMain, loginStatus } = data;\n      console.log(\n        \"fromSentinel.run: AFTER calling eventWait: event = \" +\n          event +\n          \", data = \" +\n          _data +\n          \", forMain = \" +\n          forMain +\n          \", loginStatus = \" +\n          loginStatus\n      );\n\n      if (event === Defs.ipcConnectionToken) {\n        const { connToken } = _data;\n        console.log(\"fromSentinel.run: new connection token  = \" + connToken);\n        http.setConnTokenHeader(connToken);  \n      }\n      \n      this.ready = true;\n\n      try {\n        this.sendSentinelStatus(Defs.sentinelStatusOnline);\n        this.send(event, _data);\n      } catch (ex) {\n        console.log(\"(Exception) fromSentinel.run: \" + ex, \"send\", \"info\");\n      }\n\n      if (loginStatus && this.loginStatus !== loginStatus) {\n        eventManager.send(Defs.pevLoginStatus, { loginStatus });\n        this.loginStatus = loginStatus;\n      }\n    }\n    console.log(\"<<<fromSentinel.run\");\n  }\n\n  is_ready() {\n    return this.ready;\n  }\n}\n\n// FromSentinel.sentinelIPAddress = \"sentinel address not set\";\n\n// ipcMain.on(Defs.ipcSentinelOnlineStatus, (event, data) => {\n//   const { sentinelIPAddress } = data;\n//   if (sentinelIPAddress) {\n//     log(\n//       \"fromSentinel: sentinelIPAddress= \" + sentinelIPAddress,\n//       \"send\",\n//       \"info\"\n//     );\n//     fromSentinel.sentinelIPAddress = sentinelIPAddress;\n//   } else {\n//     fromSentinel.sentinelIPAddress = \"sentinel address not set\";\n//   }\n// });\n\n// ipcMain.on(Defs.ipcExiting, (event, data) => {\n//   log(\"fromSentinel: ipcExiting\");\n//   if (fromSentinel) fromSentinel.setExiting();\n// });\n\nexport default FromSentinel;\n","import http from \"../ipc/httpService\";\nimport cookie from \"../utils/cookie\";\nimport { log } from \"../utils/log\";\nimport sentinelInfo from \"../utils/sentinelInfo\";\n\nlet sentinelIPAddress = \"sentinel address not set\";\nlet sentinelProtocol = \"sentinel protocol not set\";\n\nfunction init() {\n  console.log(\"credentials.init\");\n  sentinelIPAddress = sentinelInfo.getSentinelIPAddress();\n  sentinelProtocol = sentinelInfo.getSentinelProtocol();\n}\n\nasync function send() {\n  log(\">>>credentials.send\", \"cred\", \"verbose\");\n  const userName = cookie.get(\"userName\");\n  if (userName) {\n    const passwordEncrypted = cookie.get(\"password\");\n    if (passwordEncrypted) {\n      log(\"sendToSentinel - sending\", \"cred\", \"verbose\");\n      //const { status } =\n      await http.post(sentinelProtocol + sentinelIPAddress + \"/api/credentials\", {\n        userName,\n        passwordEncrypted\n      });\n    }\n  }\n\n  log(\"<<<credentials.send\", \"cred\", \"verbose\");\n}\n\nexport default { init, send };\n","// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\n// //const Defs = require(\"iipzy-shared/src/defs\");\n// // const { log, logInit, setLogLevel } = require(\"iipzy-shared/src/utils/logFile\");\n// // const userDataPath = \"/etc/iipzy\";\n// // const logPath = process.platform === \"win32\" ? \"c:/temp/\" : \"/var/log/iipzy\";\n// // logInit(logPath, \"iipzy-client-web\");\n\n// // log(\"iipzy-client-web starting\", \"main\", \"info\");\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n// import \"font-awesome/css/font-awesome.css\";\n\nimport Defs, { ipcConsoleLog } from \"iipzy-shared/src/defs\";\n\nimport cipher from \"./utils/cipher\";\nimport cookie from \"./utils/cookie\";\nimport sentinelInfo from \"./utils/sentinelInfo\";\nimport localIPAddress from \"./utils/localIPAddress\";\n\nimport FromSentinel from \"./ipc/fromSentinel\";\nimport httpService from \"./ipc/httpService\";\nimport toSentinel from \"./ipc/toSentinel\";\nimport auth from \"./services/auth\";\nimport credentials from \"./services/credentials\";\nimport devices from \"./services/devices\";\nimport settings from \"./services/settings\";\n\nimport eventManager from \"./ipc/eventManager\";\nimport { sleep } from \"iipzy-shared/src/utils/utils\";\n\nconsole.log(\"window--------\");\nconsole.log(window);\n//console.log(\"window.location.hostname--------\");\n//console.log(window.location.hostname);\n//console.log(\"window.location.pathname--------\");\n//console.log(window.location.pathname);\nconsole.log(\"window.location.protocol--------\");\nconsole.log(window.location.protocol);\n\nasync function main() {\n  const sentinelIPAddress =\n    window.location.hostname === \"localhost\"\n      ? \"192.168.1.145:\" + Defs.port_sentinel_core\n      : window.location.hostname + \":\" + Defs.port_sentinel_core;\n  console.log(\"sentinelIPAddress = \" + sentinelIPAddress);\n\n  //localIPAddress.getLocalSubnet();\n\n  /*\n    Handling credentials.\n    From iipzy-server-web (i.e., \"params\"):\n      Put userName, password into cookies.\n      Send creds to sentinel.\n\n    From direct call (e.g., http://192.168.1.56:8008):\n      if no cookie, \n        show LoginWindow (other windows are blocked).\n        on login:\n          Put userName, password into cookies.\n          Send creds to sentinel.\n          No escape on fail.\n\n    Sentinel\n      if no or bad credentials, set needLogin in event return.\n      iipzy-sentinel-web does \"no-cookie\" dance (above).\n\n  */\n\n  let sendCredentials = false;\n  let clientName_ = \"\";\n  let userName_ = \"\";\n  const paramsURI = getQueryVariable(\"params\");\n  if (paramsURI) {\n    const paramsEncrypted = decodeURI(paramsURI);\n    if (paramsEncrypted) {\n      const params = JSON.parse(cipher.decrypt(paramsEncrypted));\n      const { userName, password, from, clientName } = params;\n\n      console.log(\"userName = \" + userName);\n      console.log(\"passwordEncrypted = \" + password);\n      console.log(\"from = \" + from);\n      console.log(\"cientName = \" + clientName);\n\n      if (userName) cookie.set(\"userName\", userName);\n      if (password) cookie.set(\"password\", password);\n      if (from) cookie.set(\"fromOrigin\", from);\n      sendCredentials = true;\n      clientName_ = clientName;\n      userName_ = userName;\n    }\n  }\n\n  const clientToken = getQueryVariable(\"clientToken\");\n  const isLocalClient = getQueryVariable(\"isLocalClient\");\n\n  sentinelInfo.init(sentinelIPAddress, window.location.protocol + \"//\");\n\n  httpService.init();\n  auth.init();\n  credentials.init();\n  devices.init();\n  settings.init();\n  toSentinel.init();\n\n  const fromSentinel = new FromSentinel(clientToken);\n  fromSentinel.run();\n\n  while (!fromSentinel.is_ready()) {\n    await sleep(1000);\n  }\n\n  ReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n\n  if (sendCredentials) credentials.send();\n  if (clientName_) eventManager.send(Defs.ipcNavBarInfo, { clientName: clientName_, userName: userName_} );\n  eventManager.send(Defs.ipcIsLocalClient, { isLocalClient } );\n}\n\nmain();\n\n//if (true) eventManager.send(Defs.ipcLinkTo, Defs.urlLogin);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// from: https://stackoverflow.com/questions/35352638/react-how-to-get-parameter-value-from-query-string\nfunction getQueryVariable(variable) {\n  const query = window.location.search.substring(1);\n  console.log(query);\n  const vars = query.split(\"&\");\n  console.log(vars);\n  for (let i = 0; i < vars.length; i++) {\n    var pair = vars[i].split(\"=\");\n    console.log(pair);\n    if (pair[0] === variable) {\n      return pair[1];\n    }\n  }\n  return null;\n}\n\nconst handleLoginVerifyStatus = async (event, data) => {\n  const { verifyStatus } = data;\n  console.log(\"main.handleLoginVerifyStatus: verifyStatus = \" + verifyStatus);\n  if (verifyStatus === Defs.loginStatusVerified) await credentials.send();\n};\n\neventManager.on(Defs.ipcLoginVerifyStatus, handleLoginVerifyStatus);\n","const { \r\n  get_is_debugging,\r\n  set_is_debugging,\r\n  get_os_id, \r\n  set_os_id \r\n} = require(\"./globals_impl\");\r\n\r\nmodule.exports = { \r\n  get_is_debugging,\r\n  set_is_debugging,\r\n  get_os_id, \r\n  set_os_id \r\n};","// see: https://www.grainger.xyz/changing-from-cipher-to-cipheriv/\nimport { createCipheriv, createDecipheriv, randomBytes } from \"crypto\";\n\n//import { log } from \"./log\";\n\nconst algorithm = \"aes-256-ctr\";\nconst key = \"bite-the-wax-tadpole-hank-jake$$\";\nconst inputEncoding = \"utf8\"; //b2df428b9929d3ace7c598bbf4e496b2\n\nconst outputEncoding = \"hex\";\n\nexport function encrypt(decrypted) {\n  //log(\"encrypt: in = \" + decrypted, \"cryp\", \"info\");\n  const iv = Buffer.from(randomBytes(16));\n  const cipher = createCipheriv(algorithm, key, iv);\n  let crypted = cipher.update(decrypted, inputEncoding, outputEncoding);\n  crypted += cipher.final(outputEncoding);\n  const encrypted = `${iv.toString(\"hex\")}:${crypted.toString()}`;\n  //log(\"encrypt: out = \" + encrypted, \"cryp\", \"info\");\n  return encrypted;\n}\n\nexport function decrypt(encrypted) {\n  //log(\"decrypt: in = \" + encrypted, \"cryp\", \"info\");\n  if (!encrypted || encrypted === \"\") return \"\";\n\n  const textParts = encrypted.split(\":\");\n\n  //extract the IV from the first half of the value\n  const IV = Buffer.from(textParts.shift(), outputEncoding);\n\n  //extract the encrypted text without the IV\n  const encryptedText = Buffer.from(textParts.join(\":\"), outputEncoding);\n\n  //decipher the string\n  const decipher = createDecipheriv(algorithm, key, IV);\n  let decrypted = decipher.update(encryptedText, outputEncoding, inputEncoding);\n  decrypted += decipher.final(inputEncoding);\n  //log(\"decrypt: out = \" + decrypted.toString(), \"cryp\", \"info\");\n  return decrypted.toString();\n}\n\nexport default { encrypt, decrypt };\n"],"sourceRoot":""}